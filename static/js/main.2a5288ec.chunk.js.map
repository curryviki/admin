{"version":3,"sources":["Layout/Account/Auth/__generated__/LoginMutation.graphql.js","Layout/Account/Auth/__generated__/RegisterMutation.graphql.js","Layout/Account/AccountDetails/__generated__/AccountTournamentsQuery.graphql.js","Layout/Tournament/Add/__generated__/GameOptionsQuery.graphql.js","Layout/Tournament/Add/__generated__/GameSpecificQuery.graphql.js","Layout/Tournament/Add/__generated__/TournamentBasicMutation.graphql.js","Layout/Tournament/View/__generated__/DeleteTournamentMutation.graphql.js","Layout/Tournament/View/__generated__/Tournaments_tournament.graphql.js","Layout/Tournament/__generated__/ViewTournamentsQuery.graphql.js","Layout/Tournament/ModifyTournament/__generated__/CredentialsModalMutation.graphql.js","Layout/Tournament/ModifyTournament/__generated__/LiveStreamUpdateMutation.graphql.js","Layout/Tournament/ModifyTournament/__generated__/ModifyQuery.graphql.js","Layout/Tournament/ModifyTournament/__generated__/UpdateResultsQuery.graphql.js","Layout/Tournament/ModifyTournament/__generated__/UpdateResultsMutation.graphql.js","Layout/Games/__generated__/DeleteGameMutation.graphql.js","Layout/Games/__generated__/GameCard_game.graphql.js","Layout/Games/__generated__/GamesList_games.graphql.js","Layout/Games/__generated__/ViewGamesQuery.graphql.js","Layout/Games/__generated__/AddGameMutation.graphql.js","Layout/Home/Wallet/__generated__/RequestComponent_getWithdrawRequests.graphql.js","Layout/Home/Wallet/__generated__/RequestComponentQuery.graphql.js","Layout/Home/Wallet/__generated__/AllWalletRequestsQuery.graphql.js","Layout/Home/Wallet/__generated__/DetailedReportQuery.graphql.js","Layout/Home/Wallet/__generated__/DetailedReportMutation.graphql.js","Layout/Notifications/__generated__/NotificationMutation.graphql.js","Layout/Notifications/__generated__/TournamentsSectionQuery.graphql.js","Layout/Mega/__generated__/GamesAvailableQuery.graphql.js","Layout/Mega/__generated__/MegaBasicDetailsMutation.graphql.js","Layout/Mega/__generated__/ViewMegladronQuery.graphql.js","Layout/Mega/UpdateMega/__generated__/BasicDetails_megladron.graphql.js","Layout/Mega/UpdateMega/Rounds/__generated__/AddRoundMutation.graphql.js","Layout/Mega/UpdateMega/Rounds/__generated__/TournamentsInRound_game.graphql.js","Layout/Mega/UpdateMega/Rounds/__generated__/RoundsOverview_rounds.graphql.js","Layout/Mega/UpdateMega/__generated__/UpdateMegaQuery.graphql.js","Components/Form.js","Components/LoadingButton.js","Store/reducers/snackbar.js","Store/reducers/independent.js","Store/reducers/AuthService.js","Store/reducers/index.js","Store/reducers/AddTournament.js","Store/index.js","Store/actions/AuthService.js","Store/actions/snackbar.js","Services/ErrorUtils.js","Services/Environment.js","Components/CommitRelay.js","Layout/Account/Auth/Login.js","Components/Toast.js","Services/AuthService.js","Layout/Account/Auth/Register.js","Components/CustomList.js","Components/Header.js","Layout/Account/AccountDetails/index.js","Store/actions/independent.js","Components/GoBackAppbar.js","Components/Loading.js","Components/Error.js","Components/QueryRenderer.js","Layout/Account/AccountDetails/Comps/TournamentComp.js","Layout/Account/AccountDetails/AccountTournaments.js","Layout/Account/AccountDetails/PersonalDetails.js","Layout/Account/AccountDetails/Wallet.js","Layout/Account/AccountDetails/Transactions.js","Layout/Account/Auth/Logout.js","Layout/Account/AccountDetails/AboutUs.js","Layout/Account/AccountDetails/TermsOfService.js","Layout/Account/AccountDetails/CustomerService.js","Layout/Account/index.js","Store/actions/AddTournament.js","Layout/Tournament/Add/GameOptions.js","Layout/FormBuilder/TextField.js","Layout/FormBuilder/Select.js","Layout/FormBuilder/MultipleSelect.js","Layout/FormBuilder/Checkbox.js","Layout/FormBuilder/index.js","Layout/Tournament/Add/GameSpecific.js","Layout/Tournament/Add/TournamentBasic.js","Components/MaterialTable.js","Layout/Tournament/Add/PrizesTable.js","Layout/Tournament/AddTournaments.js","Layout/Tournament/View/DeleteTournament.js","Layout/Tournament/View/Tournaments.js","Components/Fab.js","Layout/Tournament/ViewTournaments.js","Components/Table.js","Layout/Tournament/ModifyTournament/Comps/NewTournamentCard.js","Components/Modal.js","Layout/Tournament/ModifyTournament/CredentialsModal.js","Layout/Tournament/ModifyTournament/LiveStreamUpdate.js","Layout/Tournament/ModifyTournament/ModifyTournamentRender.js","Layout/Tournament/ModifyTournament/Modify.js","Layout/Tournament/ModifyTournament/UpdateResults.js","Layout/Tournament/index.js","Components/GameCard.js","Layout/Games/DeleteGame.js","Layout/Games/GameCard.js","Layout/Games/GamesList.js","Layout/Games/ViewGames.js","Components/CustomFields.js","Layout/Games/AddGame.js","Layout/Games/index.js","Utils/MakeDate.js","Layout/Home/Wallet/RequestComponent.js","Layout/Home/Wallet/AllWalletRequests.js","Layout/Home/Overview/Overview.js","Layout/Home/index.js","Layout/Home/Wallet/DetailedReport.js","Layout/Drawer/AppBar.js","Layout/Drawer/SideNav.js","Layout/Drawer/index.js","Layout/Notifications/Notification.js","Layout/Notifications/TournamentsSection.js","Layout/Notifications/Holder.js","Layout/Mega/GamesAvailable.js","Layout/Mega/MegaBasicDetails.js","Layout/Mega/ViewMegladron.js","Layout/Mega/UpdateMega/BasicDetails.js","Layout/Mega/UpdateMega/SpeedDial.js","Layout/Mega/UpdateMega/Rounds/AddRound.js","Layout/Mega/UpdateMega/Rounds/AddTournament/TournamentBasic.js","Layout/Mega/UpdateMega/Rounds/AddTournament/GameSpecific.js","Layout/Mega/UpdateMega/Rounds/AddTournament/Prizes.js","Layout/Mega/UpdateMega/Rounds/AddTournament/AddTournament.js","Layout/Mega/UpdateMega/Rounds/TournamentsInRound.js","Layout/Mega/UpdateMega/Rounds/RoundsOverview.js","Layout/Mega/UpdateMega/UpdateMega.js","Layout/Mega/index.js","Components/ProtectedRoute.js","Layout/index.js","Components/Snackbar.js","App.js","serviceWorker.js","index.js"],"names":["node","v0","v1","hash","module","exports","v2","v3","v4","v5","v6","v7","v8","v9","v10","v11","v12","v13","v14","v15","styles","makeStyles","theme","form","background","palette","paper","padding","spacing","position","borderRadius","overflow","boxShadow","shadows","marginBottom","Form","props","classes","className","onSubmit","e","preventDefault","submitTriggered","el","target","inputs","querySelectorAll","data","formData","FormData","i","length","getAttribute","value","append","filesEl","document","k","files","name","style","Typography","color","variant","heading","children","useStyles","wrapper","display","alignItems","justifyContent","buttonProgress","_Button","isLoading","Button","fullWidth","disabled","CircularProgress","size","SnackbarReducer","state","initialState","Snackbar","action","type","snackbarType","id","message","filter","item","Independent","drawerOpen","modalOpen","environment","env","AuthReducer","Auth","registeredTournaments","walletBalance","wallet","bonus","AddTournament","game","customFields","prizes","metrics","accessToken","refreshToken","userId","username","reducers","combineReducers","localStorageMiddleware","getState","next","result","localStorage","setItem","JSON","stringify","persistedStore","getItem","parse","err","console","log","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","configureStore","createStore","app","applyMiddleware","page","login","store","dispatch","getData","addTournament","logout","isUserLoggedIn","updateBalance","snackbarSuccess","snackbarError","errors","error","undefined","Date","now","AuthService","showError","cache","QueryResponseCache","ttl","oneMinute","Environment","network","Network","create","operation","variables","cacheConfig","queryID","text","isMutation","operationKind","isQuery","forceFetch","force","fromCache","get","extraHeaders","querySelector","url","fetch","method","headers","body","query","then","response","json","set","clear","Store","RecordSource","sendMuatation","mutation","callback","commitMutation","onCompleted","ErrorUtils","onError","Login","React","useState","loading","setLoading","history","useHistory","CommitRelay","res","ErrorUtil","push","TextField","label","required","toastSuccess","others","Toast","success","toastError","toastInfo","info","auth","tokenExpired","Register","registering","setRegistering","responseHandler","to","phone","toString","min","max","paperStyle","_List","items","List","listClass","subheader","ListSubheader","map","index","Fragment","key","ListItem","itemClass","button","onClick","itemClick","selected","indexOf","activeClass","icon","ListItemIcon","ListItemText","primary","primaryText","secondary","secondaryText","secondaryIcon","ListItemSecondaryAction","con","Divider","divider","defaultProps","title","fontSize","paddingLeft","flex","container","top","left","width","zIndex","toolbar","mixins","marginRight","Header","IconButton","connect","darkTheme","switchTheme","siteDetails","Switch","checked","CustomList","backgroundColor","main","GoBackAppBar","Tooltip","tooltip","goBack","root","minHeight","flexDirection","Loading","height","red","ErrorComponent","RenderRelay","_props","render","Error","component","letterHolder","textContainer","paragraph","margin","TournamentComp","Paper","Grid","xs","substr","gameId","entryFee","AccountTournamentsComponent","user","_id","AccountTournaments","GoBackAppbar","QueryRenderer","PersonalDetails","Wallet","Transactions","Logout","AboutUs","TermsOfService","CustomerService","Account","path","Tournaments","AccountDetails","PAGE","Gamee","setGame","games","handleNext","Gameee","Input","onChange","CustomSelect","defaultValue","setValue","FormControl","InputLabel","Select","labelId","inputRef","options","option","MenuItem","chips","flexWrap","chip","marginLeft","MultiSelect","a","split","multiple","event","input","renderValue","Chip","Checkbox","Check","FormBuilder","MapItems","checkbox","MultipleSelect","fields","row","gameSpecificQuery","Row","helperText","getValue","CustomFields","specificGame","addGameSpecificData","msg","setMetrics","handleChange","handleBack","points","dynamic","tournament","resetData","time","toISOString","confirm","inputPrizes","p","prize","description","maxPlayers","image","metricsPoints","maxGroups","totalTournaments","multiline","rows","tableIcons","Add","forwardRef","ref","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","columns","tableData","icons","editable","onRowAdd","newData","Promise","resolve","setTimeout","getTableData","onRowUpdate","oldData","onRowDelete","splice","setPrizes","setTableData","Box","field","backButton","instructions","marginTop","activeStep","setActiveStep","steps","prevActiveStep","Stepper","alternativeLabel","Step","StepLabel","stepIndex","getStepContent","media","actionArea","makeDate","createFragmentContainer","updater","delete","deleteItem","right","bottom","Fab","ViewTournaments","_Table","Table","Head","headerStyle","Body","TableHead","TableRow","TableCell","TableBody","rowStyle","column","textHolder","textAlign","backgroundSize","backgroundPosition","LinearProgressWithLabel","mr","LinearProgress","minWidth","TournamentCard","Modal","open","Dialog","onClose","handleClose","aria-labelledby","aria-describedby","fullScreen","DialogTitle","DialogContent","DialogContentText","DialogActions","handleSubmit","autoFocus","ModalState","createContainer","modal","setModal","openModal","closeModal","CredentailsModal","useContainer","credentials","LiveStreamUpdate","liveStream","links","imageBackground","backgroundRepeat","quickAction","spanClass","buttonContainer","overview","paddingTop","ModifyTournamentRender","specificTournament","players","registered","gamingUsername","getPreparedData","backgroundImage","md","Provider","totalRegistered","withRouter","match","params","tournamentId","RenderSuggestiveField","names","list","setList","val","columnDef","placeholder","dense","UpdateResultsComponent","unshift","editComponent","modified","modifiedEdit","total","skip","Math","floor","transformData","nonMetrics","credit","groupPosition","group","submitting","setSubmitting","removeItem","location","reload","results","updateResults","UpdateResults","AddTournaments","ModifyTournament","sm","Card","CardActionArea","CardMedia","CardContent","gutterBottom","CardActions","CommitMutation","DeleteQuery","getGamesQuery","ViewGames","setState","prevState","AddGame","obj","trim","lookup","select","multipleSelect","number","rowData","GamesRoute","hour","minute","pagination","paginationContainer","createRefetchContainer","getWithdrawRequests","docs","createdAt","amount","Pagination","count","totalPages","relay","refetch","limit","AllWalletRequests","Overview","Home","addPadding","Approval","approval","setApproval","resposne","DetailedReportComponent","withdrawList","specificWithdraw","approved","transactionList","totalUsed","totalCredited","transactionType","responseCode","responseMessage","makeTransactionList","transaction","appBar","breakpoints","up","menuButton","headerText","_Header","AppBar","Toolbar","iconClick","noWrap","DrawerState","setDrawerOpen","setDrawer","drawer","pathname","replace","navigation","flexShrink","drawerPaper","hello","sideNav","findActiveIndex","activeIndex","forEach","matches","useMediaQuery","SwipeableDrawer","onOpen","anchor","src","process","Drawer","Title","Description","Notification","TournamentsSectionComponent","setSelected","selectTournament","TournamentsSection","Holder","setTournament","GamesAvailableComponent","GamesAvailable","startTime","endTime","schema","yup","shape","positive","integer","MegaBasicDetails","useForm","resolver","yupResolver","register","addedData","getTime","DateTimePicker","disablePast","ViewMegladronComponent","megladron","ViewMegladron","makeData","speedDial","actions","setOpen","ariaLabel","SpeedDialIcon","direction","SpeedDialAction","tooltipTitle","start","end","date","setDate","toSend","totalMatches","custom","InputField","TournamentBasic","setTime","submitForm","t","GameSpecific","Prizes","HorizontalLabelPositionBelowStepper","setFormData","textTransform","round","deleteClick","rounds","TournamentsInRound","UpdateMegaComponent","AddRound","Mega","UpdateMega","PrivateRoute","Component","rest","isLoggedIn","from","content","Layout","ProtectedRoute","TournamentRoutes","Games","Alert","elevation","snackbar","handleClick","reason","closeSnackbar","anchorOrigin","vertical","horizontal","severity","App","utils","DateFnsUtils","CssBaseline","Boolean","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.2a5288ec.chunk.js","sourcesContent":["/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\nexport type LoginInput = {|\n  username: string,\n  password: string,\n|};\nexport type LoginMutationVariables = {|\n  data: LoginInput\n|};\nexport type LoginMutationResponse = {|\n  +Login: ?{|\n    +accessToken: string,\n    +refreshToken: string,\n  |}\n|};\nexport type LoginMutation = {|\n  variables: LoginMutationVariables,\n  response: LoginMutationResponse,\n|};\n*/\n\n\n/*\nmutation LoginMutation(\n  $data: LoginInput!\n) {\n  Login(user: $data) {\n    accessToken\n    refreshToken\n  }\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"data\",\n    \"type\": \"LoginInput!\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"user\",\n        \"variableName\": \"data\"\n      }\n    ],\n    \"concreteType\": \"LoginData\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"Login\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"accessToken\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"refreshToken\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"LoginMutation\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Mutation\"\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"LoginMutation\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"LoginMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation LoginMutation(\\n  $data: LoginInput!\\n) {\\n  Login(user: $data) {\\n    accessToken\\n    refreshToken\\n  }\\n}\\n\"\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = '737b27d4db7ed20c7944ea88b70453c3';\n\nmodule.exports = node;\n","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\nexport type UserInput = {|\n  username: string,\n  password: string,\n  phone: string,\n|};\nexport type RegisterMutationVariables = {|\n  data: UserInput\n|};\nexport type RegisterMutationResponse = {|\n  +Register: ?{|\n    +user: {|\n      +_id: string\n    |},\n    +refreshToken: string,\n    +accessToken: string,\n  |}\n|};\nexport type RegisterMutation = {|\n  variables: RegisterMutationVariables,\n  response: RegisterMutationResponse,\n|};\n*/\n\n\n/*\nmutation RegisterMutation(\n  $data: UserInput!\n) {\n  Register(user: $data) {\n    user {\n      _id\n      id\n    }\n    refreshToken\n    accessToken\n  }\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"data\",\n    \"type\": \"UserInput!\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"user\",\n    \"variableName\": \"data\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"_id\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"refreshToken\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"accessToken\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"RegisterMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"RegisterPayload\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"Register\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"User\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"user\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/)\n            ],\n            \"storageKey\": null\n          },\n          (v3/*: any*/),\n          (v4/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Mutation\"\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"RegisterMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"RegisterPayload\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"Register\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"User\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"user\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"id\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          },\n          (v3/*: any*/),\n          (v4/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"RegisterMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation RegisterMutation(\\n  $data: UserInput!\\n) {\\n  Register(user: $data) {\\n    user {\\n      _id\\n      id\\n    }\\n    refreshToken\\n    accessToken\\n  }\\n}\\n\"\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = 'e28dff65a5ba6929f167435f5d957fd2';\n\nmodule.exports = node;\n","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\nexport type AccountTournamentsQueryVariables = {||};\nexport type AccountTournamentsQueryResponse = {|\n  +user: {|\n    +registeredTournaments: ?$ReadOnlyArray<{|\n      +_id: string,\n      +title: string,\n      +time: string,\n      +entryFee: number,\n      +gameId: {|\n        +title: string\n      |},\n    |}>\n  |}\n|};\nexport type AccountTournamentsQuery = {|\n  variables: AccountTournamentsQueryVariables,\n  response: AccountTournamentsQueryResponse,\n|};\n*/\n\n\n/*\nquery AccountTournamentsQuery {\n  user {\n    registeredTournaments {\n      _id\n      title\n      time\n      entryFee\n      gameId {\n        title\n        id\n      }\n      id\n    }\n    id\n  }\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"_id\",\n  \"storageKey\": null\n},\nv1 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"title\",\n  \"storageKey\": null\n},\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"time\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"entryFee\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"AccountTournamentsQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Tournament\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"registeredTournaments\",\n            \"plural\": true,\n            \"selections\": [\n              (v0/*: any*/),\n              (v1/*: any*/),\n              (v2/*: any*/),\n              (v3/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"Game\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"gameId\",\n                \"plural\": false,\n                \"selections\": [\n                  (v1/*: any*/)\n                ],\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Query\"\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Operation\",\n    \"name\": \"AccountTournamentsQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Tournament\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"registeredTournaments\",\n            \"plural\": true,\n            \"selections\": [\n              (v0/*: any*/),\n              (v1/*: any*/),\n              (v2/*: any*/),\n              (v3/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"Game\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"gameId\",\n                \"plural\": false,\n                \"selections\": [\n                  (v1/*: any*/),\n                  (v4/*: any*/)\n                ],\n                \"storageKey\": null\n              },\n              (v4/*: any*/)\n            ],\n            \"storageKey\": null\n          },\n          (v4/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"AccountTournamentsQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query AccountTournamentsQuery {\\n  user {\\n    registeredTournaments {\\n      _id\\n      title\\n      time\\n      entryFee\\n      gameId {\\n        title\\n        id\\n      }\\n      id\\n    }\\n    id\\n  }\\n}\\n\"\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = '92c81734ac370575f040291e123c5739';\n\nmodule.exports = node;\n","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\nexport type GameOptionsQueryVariables = {||};\nexport type GameOptionsQueryResponse = {|\n  +games: ?$ReadOnlyArray<{|\n    +title: string,\n    +_id: string,\n    +id: string,\n    +image: ?string,\n    +totalTournaments: number,\n  |}>\n|};\nexport type GameOptionsQuery = {|\n  variables: GameOptionsQueryVariables,\n  response: GameOptionsQueryResponse,\n|};\n*/\n\n\n/*\nquery GameOptionsQuery {\n  games {\n    title\n    _id\n    id\n    image\n    totalTournaments\n  }\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"concreteType\": \"Game\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"games\",\n    \"plural\": true,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"title\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"_id\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"id\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"image\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"totalTournaments\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"GameOptionsQuery\",\n    \"selections\": (v0/*: any*/),\n    \"type\": \"Query\"\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Operation\",\n    \"name\": \"GameOptionsQuery\",\n    \"selections\": (v0/*: any*/)\n  },\n  \"params\": {\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"GameOptionsQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query GameOptionsQuery {\\n  games {\\n    title\\n    _id\\n    id\\n    image\\n    totalTournaments\\n  }\\n}\\n\"\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = 'b5dc6149e31829e5a22514898aaac4f2';\n\nmodule.exports = node;\n","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\nexport type GameSpecificQueryVariables = {|\n  title: string\n|};\nexport type GameSpecificQueryResponse = {|\n  +specificGame: {|\n    +customFields: ?$ReadOnlyArray<?{|\n      +label: string,\n      +type: string,\n      +options: ?$ReadOnlyArray<string>,\n    |}>,\n    +metrics: ?$ReadOnlyArray<string>,\n  |}\n|};\nexport type GameSpecificQuery = {|\n  variables: GameSpecificQueryVariables,\n  response: GameSpecificQueryResponse,\n|};\n*/\n\n\n/*\nquery GameSpecificQuery(\n  $title: String!\n) {\n  specificGame(title: $title) {\n    customFields {\n      label\n      type\n      options\n    }\n    metrics\n    id\n  }\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"title\",\n    \"type\": \"String!\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"title\",\n    \"variableName\": \"title\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"GameCustomFields\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"customFields\",\n  \"plural\": true,\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"label\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"type\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"options\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"metrics\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"GameSpecificQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"Game\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"specificGame\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Query\"\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"GameSpecificQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"Game\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"specificGame\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"GameSpecificQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query GameSpecificQuery(\\n  $title: String!\\n) {\\n  specificGame(title: $title) {\\n    customFields {\\n      label\\n      type\\n      options\\n    }\\n    metrics\\n    id\\n  }\\n}\\n\"\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = '006b19a8b2b84f65c74c3e40be21c639';\n\nmodule.exports = node;\n","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\nexport type TournamentInput = {|\n  title: string,\n  description?: ?string,\n  gameId: string,\n  time: string,\n  customFields?: ?$ReadOnlyArray<?TournamentCustomFieldsInput>,\n  prizes?: ?$ReadOnlyArray<?TournamentPrizesInput>,\n  image?: ?string,\n  entryFee: number,\n  maxPlayers: number,\n  maxGroups: number,\n  metricsPoints?: ?$ReadOnlyArray<MetricsPointsInput>,\n  isPrivate?: ?number,\n|};\nexport type TournamentCustomFieldsInput = {|\n  label: string,\n  value: string,\n|};\nexport type TournamentPrizesInput = {|\n  position: string,\n  prize?: ?number,\n|};\nexport type MetricsPointsInput = {|\n  label: string,\n  points: number,\n  dynamic: number,\n|};\nexport type TournamentBasicMutationVariables = {|\n  data?: ?TournamentInput\n|};\nexport type TournamentBasicMutationResponse = {|\n  +addTournament: ?{|\n    +tournament: {|\n      +_id: string,\n      +title: string,\n    |}\n  |}\n|};\nexport type TournamentBasicMutation = {|\n  variables: TournamentBasicMutationVariables,\n  response: TournamentBasicMutationResponse,\n|};\n*/\n\n\n/*\nmutation TournamentBasicMutation(\n  $data: TournamentInput\n) {\n  addTournament(tournamentFields: $data) {\n    tournament {\n      _id\n      title\n      id\n    }\n  }\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"data\",\n    \"type\": \"TournamentInput\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"tournamentFields\",\n    \"variableName\": \"data\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"_id\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"title\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"TournamentBasicMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"TournamentPayload\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"addTournament\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Tournament\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"tournament\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/),\n              (v3/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Mutation\"\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"TournamentBasicMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"TournamentPayload\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"addTournament\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Tournament\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"tournament\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/),\n              (v3/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"id\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"TournamentBasicMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation TournamentBasicMutation(\\n  $data: TournamentInput\\n) {\\n  addTournament(tournamentFields: $data) {\\n    tournament {\\n      _id\\n      title\\n      id\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = '46e0c2d802d0b6b799ba5a08d2b86c67';\n\nmodule.exports = node;\n","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\nexport type DeleteTournamentMutationVariables = {|\n  id: string\n|};\nexport type DeleteTournamentMutationResponse = {|\n  +deleteTournament: {|\n    +_id: string\n  |}\n|};\nexport type DeleteTournamentMutation = {|\n  variables: DeleteTournamentMutationVariables,\n  response: DeleteTournamentMutationResponse,\n|};\n*/\n\n\n/*\nmutation DeleteTournamentMutation(\n  $id: ID!\n) {\n  deleteTournament(id: $id) {\n    _id\n    id\n  }\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"id\",\n    \"type\": \"ID!\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"id\",\n    \"variableName\": \"id\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"_id\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"DeleteTournamentMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"Tournament\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"deleteTournament\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Mutation\"\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"DeleteTournamentMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"Tournament\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"deleteTournament\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"DeleteTournamentMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation DeleteTournamentMutation(\\n  $id: ID!\\n) {\\n  deleteTournament(id: $id) {\\n    _id\\n    id\\n  }\\n}\\n\"\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = 'bca18bc8eef99420dfadbc4942c2ed4d';\n\nmodule.exports = node;\n","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ReaderFragment } from 'relay-runtime';\nimport type { FragmentReference } from \"relay-runtime\";\ndeclare export opaque type Tournaments_tournament$ref: FragmentReference;\ndeclare export opaque type Tournaments_tournament$fragmentType: Tournaments_tournament$ref;\nexport type Tournaments_tournament = $ReadOnlyArray<{|\n  +_id: string,\n  +title: string,\n  +totalRegistered: number,\n  +time: string,\n  +gameId: {|\n    +title: string\n  |},\n  +$refType: Tournaments_tournament$ref,\n|}>;\nexport type Tournaments_tournament$data = Tournaments_tournament;\nexport type Tournaments_tournament$key = $ReadOnlyArray<{\n  +$data?: Tournaments_tournament$data,\n  +$fragmentRefs: Tournaments_tournament$ref,\n  ...\n}>;\n*/\n\n\nconst node/*: ReaderFragment*/ = (function(){\nvar v0 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"title\",\n  \"storageKey\": null\n};\nreturn {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": {\n    \"plural\": true\n  },\n  \"name\": \"Tournaments_tournament\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"_id\",\n      \"storageKey\": null\n    },\n    (v0/*: any*/),\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"totalRegistered\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"time\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"Game\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"gameId\",\n      \"plural\": false,\n      \"selections\": [\n        (v0/*: any*/)\n      ],\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"Tournament\"\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = '2287c82e30a8371fd37071fab9931088';\n\nmodule.exports = node;\n","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\ntype Tournaments_tournament$ref = any;\nexport type ViewTournamentsQueryVariables = {||};\nexport type ViewTournamentsQueryResponse = {|\n  +tournament: ?$ReadOnlyArray<{|\n    +$fragmentRefs: Tournaments_tournament$ref\n  |}>\n|};\nexport type ViewTournamentsQuery = {|\n  variables: ViewTournamentsQueryVariables,\n  response: ViewTournamentsQueryResponse,\n|};\n*/\n\n\n/*\nquery ViewTournamentsQuery {\n  tournament(past: \"a\", pagination: {offset: 0, limit: 30}) {\n    ...Tournaments_tournament\n    id\n  }\n}\n\nfragment Tournaments_tournament on Tournament {\n  _id\n  title\n  totalRegistered\n  time\n  gameId {\n    title\n    id\n  }\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"pagination\",\n    \"value\": {\n      \"limit\": 30,\n      \"offset\": 0\n    }\n  },\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"past\",\n    \"value\": \"a\"\n  }\n],\nv1 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"title\",\n  \"storageKey\": null\n},\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ViewTournamentsQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v0/*: any*/),\n        \"concreteType\": \"Tournament\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"tournament\",\n        \"plural\": true,\n        \"selections\": [\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"Tournaments_tournament\"\n          }\n        ],\n        \"storageKey\": \"tournament(pagination:{\\\"limit\\\":30,\\\"offset\\\":0},past:\\\"a\\\")\"\n      }\n    ],\n    \"type\": \"Query\"\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Operation\",\n    \"name\": \"ViewTournamentsQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v0/*: any*/),\n        \"concreteType\": \"Tournament\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"tournament\",\n        \"plural\": true,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"_id\",\n            \"storageKey\": null\n          },\n          (v1/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"totalRegistered\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"time\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Game\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"gameId\",\n            \"plural\": false,\n            \"selections\": [\n              (v1/*: any*/),\n              (v2/*: any*/)\n            ],\n            \"storageKey\": null\n          },\n          (v2/*: any*/)\n        ],\n        \"storageKey\": \"tournament(pagination:{\\\"limit\\\":30,\\\"offset\\\":0},past:\\\"a\\\")\"\n      }\n    ]\n  },\n  \"params\": {\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ViewTournamentsQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query ViewTournamentsQuery {\\n  tournament(past: \\\"a\\\", pagination: {offset: 0, limit: 30}) {\\n    ...Tournaments_tournament\\n    id\\n  }\\n}\\n\\nfragment Tournaments_tournament on Tournament {\\n  _id\\n  title\\n  totalRegistered\\n  time\\n  gameId {\\n    title\\n    id\\n  }\\n}\\n\"\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = 'ceda2ca38d5dc7f60e7ef2d3a612ae4f';\n\nmodule.exports = node;\n","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\nexport type UpdateCredentialsInput = {|\n  credentials?: ?$ReadOnlyArray<?CredentialsInput>,\n  id: string,\n|};\nexport type CredentialsInput = {|\n  label: string,\n  value: string,\n|};\nexport type CredentialsModalMutationVariables = {|\n  data: UpdateCredentialsInput\n|};\nexport type CredentialsModalMutationResponse = {|\n  +updateCredentials: {|\n    +tournament: {|\n      +_id: string,\n      +credentials: ?$ReadOnlyArray<{|\n        +label: string,\n        +value: string,\n      |}>,\n    |}\n  |}\n|};\nexport type CredentialsModalMutation = {|\n  variables: CredentialsModalMutationVariables,\n  response: CredentialsModalMutationResponse,\n|};\n*/\n\n\n/*\nmutation CredentialsModalMutation(\n  $data: UpdateCredentialsInput!\n) {\n  updateCredentials(data: $data) {\n    tournament {\n      _id\n      credentials {\n        label\n        value\n      }\n      id\n    }\n  }\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"data\",\n    \"type\": \"UpdateCredentialsInput!\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"data\",\n    \"variableName\": \"data\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"_id\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"TournamentCredentials\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"credentials\",\n  \"plural\": true,\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"label\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"value\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"CredentialsModalMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"TournamentPayload\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"updateCredentials\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Tournament\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"tournament\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/),\n              (v3/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Mutation\"\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"CredentialsModalMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"TournamentPayload\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"updateCredentials\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Tournament\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"tournament\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/),\n              (v3/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"id\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"CredentialsModalMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation CredentialsModalMutation(\\n  $data: UpdateCredentialsInput!\\n) {\\n  updateCredentials(data: $data) {\\n    tournament {\\n      _id\\n      credentials {\\n        label\\n        value\\n      }\\n      id\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = '1f0cac1f7d28f691d16ec7f77f2dd7fd';\n\nmodule.exports = node;\n","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\nexport type LiveStreamUpdateMutationVariables = {|\n  links: string,\n  id: string,\n|};\nexport type LiveStreamUpdateMutationResponse = {|\n  +addLiveStreamUrl: ?{|\n    +_id: string,\n    +liveStream: ?string,\n  |}\n|};\nexport type LiveStreamUpdateMutation = {|\n  variables: LiveStreamUpdateMutationVariables,\n  response: LiveStreamUpdateMutationResponse,\n|};\n*/\n\n\n/*\nmutation LiveStreamUpdateMutation(\n  $links: String!\n  $id: ID!\n) {\n  addLiveStreamUrl(links: $links, id: $id) {\n    _id\n    liveStream\n    id\n  }\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"links\",\n    \"type\": \"String!\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"id\",\n    \"type\": \"ID!\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"id\",\n    \"variableName\": \"id\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"links\",\n    \"variableName\": \"links\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"_id\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"liveStream\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"LiveStreamUpdateMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"Tournament\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"addLiveStreamUrl\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Mutation\"\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"LiveStreamUpdateMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"Tournament\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"addLiveStreamUrl\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"LiveStreamUpdateMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation LiveStreamUpdateMutation(\\n  $links: String!\\n  $id: ID!\\n) {\\n  addLiveStreamUrl(links: $links, id: $id) {\\n    _id\\n    liveStream\\n    id\\n  }\\n}\\n\"\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = 'bf4764b5b103302138637a58f8684317';\n\nmodule.exports = node;\n","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\nexport type ModifyQueryVariables = {|\n  id: string\n|};\nexport type ModifyQueryResponse = {|\n  +specificTournament: ?{|\n    +tournament: {|\n      +_id: string,\n      +liveStream: ?string,\n      +title: string,\n      +totalRegistered: number,\n      +registered: ?$ReadOnlyArray<?{|\n        +gamingUsername: ?string\n      |}>,\n      +entryFee: number,\n      +maxPlayers: number,\n      +time: string,\n      +image: ?string,\n      +prizes: ?$ReadOnlyArray<?{|\n        +position: string,\n        +prize: ?number,\n      |}>,\n      +customFields: ?$ReadOnlyArray<?{|\n        +label: string,\n        +value: string,\n      |}>,\n      +credentials: ?$ReadOnlyArray<{|\n        +label: string,\n        +value: string,\n      |}>,\n    |}\n  |}\n|};\nexport type ModifyQuery = {|\n  variables: ModifyQueryVariables,\n  response: ModifyQueryResponse,\n|};\n*/\n\n\n/*\nquery ModifyQuery(\n  $id: ID!\n) {\n  specificTournament(id: $id) {\n    tournament {\n      _id\n      liveStream\n      title\n      totalRegistered\n      registered {\n        gamingUsername\n      }\n      entryFee\n      maxPlayers\n      time\n      image\n      prizes {\n        position\n        prize\n      }\n      customFields {\n        label\n        value\n      }\n      credentials {\n        label\n        value\n      }\n      id\n    }\n  }\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"id\",\n    \"type\": \"ID!\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"id\",\n    \"variableName\": \"id\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"_id\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"liveStream\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"title\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"totalRegistered\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"TournamentRegisteredPeople\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"registered\",\n  \"plural\": true,\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"gamingUsername\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"entryFee\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"maxPlayers\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"time\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"image\",\n  \"storageKey\": null\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"TournamentPrizes\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"prizes\",\n  \"plural\": true,\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"position\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"prize\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n},\nv12 = [\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"kind\": \"ScalarField\",\n    \"name\": \"label\",\n    \"storageKey\": null\n  },\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"kind\": \"ScalarField\",\n    \"name\": \"value\",\n    \"storageKey\": null\n  }\n],\nv13 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"TournamentCustomFields\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"customFields\",\n  \"plural\": true,\n  \"selections\": (v12/*: any*/),\n  \"storageKey\": null\n},\nv14 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"TournamentCredentials\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"credentials\",\n  \"plural\": true,\n  \"selections\": (v12/*: any*/),\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ModifyQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"TournamentPayload\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"specificTournament\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Tournament\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"tournament\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/),\n              (v3/*: any*/),\n              (v4/*: any*/),\n              (v5/*: any*/),\n              (v6/*: any*/),\n              (v7/*: any*/),\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              (v11/*: any*/),\n              (v13/*: any*/),\n              (v14/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Query\"\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"ModifyQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"TournamentPayload\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"specificTournament\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Tournament\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"tournament\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/),\n              (v3/*: any*/),\n              (v4/*: any*/),\n              (v5/*: any*/),\n              (v6/*: any*/),\n              (v7/*: any*/),\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              (v11/*: any*/),\n              (v13/*: any*/),\n              (v14/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"id\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ModifyQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query ModifyQuery(\\n  $id: ID!\\n) {\\n  specificTournament(id: $id) {\\n    tournament {\\n      _id\\n      liveStream\\n      title\\n      totalRegistered\\n      registered {\\n        gamingUsername\\n      }\\n      entryFee\\n      maxPlayers\\n      time\\n      image\\n      prizes {\\n        position\\n        prize\\n      }\\n      customFields {\\n        label\\n        value\\n      }\\n      credentials {\\n        label\\n        value\\n      }\\n      id\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = '3f0fbeddcf1e91a54313480432a7a7e6';\n\nmodule.exports = node;\n","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\nexport type UpdateResultsQueryVariables = {|\n  id: string\n|};\nexport type UpdateResultsQueryResponse = {|\n  +specificTournament: ?{|\n    +tournament: {|\n      +_id: string,\n      +registered: ?$ReadOnlyArray<?{|\n        +gamingUsername: ?string\n      |}>,\n      +metricsPoints: ?$ReadOnlyArray<{|\n        +label: string,\n        +points: number,\n        +dynamic: number,\n      |}>,\n    |}\n  |}\n|};\nexport type UpdateResultsQuery = {|\n  variables: UpdateResultsQueryVariables,\n  response: UpdateResultsQueryResponse,\n|};\n*/\n\n\n/*\nquery UpdateResultsQuery(\n  $id: ID!\n) {\n  specificTournament(id: $id) {\n    tournament {\n      _id\n      registered {\n        gamingUsername\n      }\n      metricsPoints {\n        label\n        points\n        dynamic\n      }\n      id\n    }\n  }\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"id\",\n    \"type\": \"ID!\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"id\",\n    \"variableName\": \"id\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"_id\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"TournamentRegisteredPeople\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"registered\",\n  \"plural\": true,\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"gamingUsername\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"MetricsPoints\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"metricsPoints\",\n  \"plural\": true,\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"label\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"points\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"dynamic\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"UpdateResultsQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"TournamentPayload\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"specificTournament\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Tournament\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"tournament\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/),\n              (v3/*: any*/),\n              (v4/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Query\"\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"UpdateResultsQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"TournamentPayload\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"specificTournament\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Tournament\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"tournament\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/),\n              (v3/*: any*/),\n              (v4/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"id\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"UpdateResultsQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query UpdateResultsQuery(\\n  $id: ID!\\n) {\\n  specificTournament(id: $id) {\\n    tournament {\\n      _id\\n      registered {\\n        gamingUsername\\n      }\\n      metricsPoints {\\n        label\\n        points\\n        dynamic\\n      }\\n      id\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = '5264f148682fb5064a4807bc1d470dfa';\n\nmodule.exports = node;\n","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\nexport type UpdateResultsInput = {|\n  results: $ReadOnlyArray<ResultsInput>,\n  id: string,\n|};\nexport type ResultsInput = {|\n  gamingUsername: string,\n  points?: ?number,\n  groupPosition?: ?number,\n  metrics?: ?$ReadOnlyArray<TournamentMetricsInput>,\n  credit: number,\n|};\nexport type TournamentMetricsInput = {|\n  label: string,\n  value: number,\n|};\nexport type UpdateResultsMutationVariables = {|\n  data: UpdateResultsInput\n|};\nexport type UpdateResultsMutationResponse = {|\n  +updateResults: ?{|\n    +tournament: {|\n      +_id: string,\n      +resultsUpdated: number,\n    |},\n    +message: ?string,\n  |}\n|};\nexport type UpdateResultsMutation = {|\n  variables: UpdateResultsMutationVariables,\n  response: UpdateResultsMutationResponse,\n|};\n*/\n\n\n/*\nmutation UpdateResultsMutation(\n  $data: UpdateResultsInput!\n) {\n  updateResults(data: $data) {\n    tournament {\n      _id\n      resultsUpdated\n      id\n    }\n    message\n  }\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"data\",\n    \"type\": \"UpdateResultsInput!\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"data\",\n    \"variableName\": \"data\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"_id\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"resultsUpdated\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"message\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"UpdateResultsMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"TournamentPayload\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"updateResults\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Tournament\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"tournament\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/),\n              (v3/*: any*/)\n            ],\n            \"storageKey\": null\n          },\n          (v4/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Mutation\"\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"UpdateResultsMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"TournamentPayload\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"updateResults\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Tournament\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"tournament\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/),\n              (v3/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"id\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          },\n          (v4/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"UpdateResultsMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation UpdateResultsMutation(\\n  $data: UpdateResultsInput!\\n) {\\n  updateResults(data: $data) {\\n    tournament {\\n      _id\\n      resultsUpdated\\n      id\\n    }\\n    message\\n  }\\n}\\n\"\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = 'dd4e51f541fa0e838747ac856fccc565';\n\nmodule.exports = node;\n","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\nexport type DeleteGameMutationVariables = {|\n  id: string\n|};\nexport type DeleteGameMutationResponse = {|\n  +deleteGame: {|\n    +game: {|\n      +_id: string\n    |},\n    +message: ?string,\n  |}\n|};\nexport type DeleteGameMutation = {|\n  variables: DeleteGameMutationVariables,\n  response: DeleteGameMutationResponse,\n|};\n*/\n\n\n/*\nmutation DeleteGameMutation(\n  $id: ID!\n) {\n  deleteGame(id: $id) {\n    game {\n      _id\n      id\n    }\n    message\n  }\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"id\",\n    \"type\": \"ID!\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"id\",\n    \"variableName\": \"id\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"_id\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"message\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"DeleteGameMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"DeleteGamePayload\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"deleteGame\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Game\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"game\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/)\n            ],\n            \"storageKey\": null\n          },\n          (v3/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Mutation\"\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"DeleteGameMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"DeleteGamePayload\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"deleteGame\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Game\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"game\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"id\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          },\n          (v3/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"DeleteGameMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation DeleteGameMutation(\\n  $id: ID!\\n) {\\n  deleteGame(id: $id) {\\n    game {\\n      _id\\n      id\\n    }\\n    message\\n  }\\n}\\n\"\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = '4ff78330179d0bc6524639b3e062f247';\n\nmodule.exports = node;\n","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ReaderFragment } from 'relay-runtime';\nimport type { FragmentReference } from \"relay-runtime\";\ndeclare export opaque type GameCard_game$ref: FragmentReference;\ndeclare export opaque type GameCard_game$fragmentType: GameCard_game$ref;\nexport type GameCard_game = {|\n  +title: string,\n  +_id: string,\n  +description: ?string,\n  +image: ?string,\n  +$refType: GameCard_game$ref,\n|};\nexport type GameCard_game$data = GameCard_game;\nexport type GameCard_game$key = {\n  +$data?: GameCard_game$data,\n  +$fragmentRefs: GameCard_game$ref,\n  ...\n};\n*/\n\n\nconst node/*: ReaderFragment*/ = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"GameCard_game\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"title\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"description\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"image\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"Game\"\n};\n// prettier-ignore\n(node/*: any*/).hash = '3a821167f872661fa4f6e1bb70b243c7';\n\nmodule.exports = node;\n","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ReaderFragment } from 'relay-runtime';\ntype GameCard_game$ref = any;\nimport type { FragmentReference } from \"relay-runtime\";\ndeclare export opaque type GamesList_games$ref: FragmentReference;\ndeclare export opaque type GamesList_games$fragmentType: GamesList_games$ref;\nexport type GamesList_games = $ReadOnlyArray<{|\n  +$fragmentRefs: GameCard_game$ref,\n  +$refType: GamesList_games$ref,\n|}>;\nexport type GamesList_games$data = GamesList_games;\nexport type GamesList_games$key = $ReadOnlyArray<{\n  +$data?: GamesList_games$data,\n  +$fragmentRefs: GamesList_games$ref,\n  ...\n}>;\n*/\n\n\nconst node/*: ReaderFragment*/ = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": {\n    \"plural\": true\n  },\n  \"name\": \"GamesList_games\",\n  \"selections\": [\n    {\n      \"args\": null,\n      \"kind\": \"FragmentSpread\",\n      \"name\": \"GameCard_game\"\n    }\n  ],\n  \"type\": \"Game\"\n};\n// prettier-ignore\n(node/*: any*/).hash = 'e0af928d1e81348b95e88d94eadfe8db';\n\nmodule.exports = node;\n","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\ntype GamesList_games$ref = any;\nexport type ViewGamesQueryVariables = {||};\nexport type ViewGamesQueryResponse = {|\n  +games: ?$ReadOnlyArray<{|\n    +$fragmentRefs: GamesList_games$ref\n  |}>\n|};\nexport type ViewGamesQuery = {|\n  variables: ViewGamesQueryVariables,\n  response: ViewGamesQueryResponse,\n|};\n*/\n\n\n/*\nquery ViewGamesQuery {\n  games {\n    ...GamesList_games\n    id\n  }\n}\n\nfragment GameCard_game on Game {\n  title\n  _id\n  description\n  image\n}\n\nfragment GamesList_games on Game {\n  ...GameCard_game\n}\n*/\n\nconst node/*: ConcreteRequest*/ = {\n  \"fragment\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ViewGamesQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"Game\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"games\",\n        \"plural\": true,\n        \"selections\": [\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"GamesList_games\"\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Query\"\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Operation\",\n    \"name\": \"ViewGamesQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"Game\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"games\",\n        \"plural\": true,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"title\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"_id\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"description\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"image\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ViewGamesQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query ViewGamesQuery {\\n  games {\\n    ...GamesList_games\\n    id\\n  }\\n}\\n\\nfragment GameCard_game on Game {\\n  title\\n  _id\\n  description\\n  image\\n}\\n\\nfragment GamesList_games on Game {\\n  ...GameCard_game\\n}\\n\"\n  }\n};\n// prettier-ignore\n(node/*: any*/).hash = 'a8daf0905c7ad7ecf6f006a7e41f1778';\n\nmodule.exports = node;\n","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\nexport type GameInput = {|\n  title: string,\n  description: string,\n  image: string,\n  customFields?: ?$ReadOnlyArray<GameCustomFieldsInput>,\n  metrics: string,\n|};\nexport type GameCustomFieldsInput = {|\n  label: string,\n  type: string,\n  options?: ?$ReadOnlyArray<string>,\n|};\nexport type AddGameMutationVariables = {|\n  data: GameInput\n|};\nexport type AddGameMutationResponse = {|\n  +addGame: {|\n    +game: {|\n      +title: string\n    |}\n  |}\n|};\nexport type AddGameMutation = {|\n  variables: AddGameMutationVariables,\n  response: AddGameMutationResponse,\n|};\n*/\n\n\n/*\nmutation AddGameMutation(\n  $data: GameInput!\n) {\n  addGame(gameFields: $data) {\n    game {\n      title\n      id\n    }\n  }\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"data\",\n    \"type\": \"GameInput!\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"gameFields\",\n    \"variableName\": \"data\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"title\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"AddGameMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"AddGamePayload\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"addGame\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Game\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"game\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Mutation\"\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"AddGameMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"AddGamePayload\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"addGame\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Game\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"game\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"id\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"AddGameMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation AddGameMutation(\\n  $data: GameInput!\\n) {\\n  addGame(gameFields: $data) {\\n    game {\\n      title\\n      id\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = '6a53783475de303497fb0cbbb6fd627c';\n\nmodule.exports = node;\n","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ReaderFragment } from 'relay-runtime';\nimport type { FragmentReference } from \"relay-runtime\";\ndeclare export opaque type RequestComponent_getWithdrawRequests$ref: FragmentReference;\ndeclare export opaque type RequestComponent_getWithdrawRequests$fragmentType: RequestComponent_getWithdrawRequests$ref;\nexport type RequestComponent_getWithdrawRequests = {|\n  +docs: ?$ReadOnlyArray<{|\n    +_id: string,\n    +userId: {|\n      +username: string\n    |},\n    +amount: number,\n    +method: string,\n    +createdAt: string,\n    +approved: number,\n  |}>,\n  +totalPages: ?number,\n  +page: ?number,\n  +$refType: RequestComponent_getWithdrawRequests$ref,\n|};\nexport type RequestComponent_getWithdrawRequests$data = RequestComponent_getWithdrawRequests;\nexport type RequestComponent_getWithdrawRequests$key = {\n  +$data?: RequestComponent_getWithdrawRequests$data,\n  +$fragmentRefs: RequestComponent_getWithdrawRequests$ref,\n  ...\n};\n*/\n\n\nconst node/*: ReaderFragment*/ = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"RequestComponent_getWithdrawRequests\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"Withdraw\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"docs\",\n      \"plural\": true,\n      \"selections\": [\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"_id\",\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"concreteType\": \"User\",\n          \"kind\": \"LinkedField\",\n          \"name\": \"userId\",\n          \"plural\": false,\n          \"selections\": [\n            {\n              \"alias\": null,\n              \"args\": null,\n              \"kind\": \"ScalarField\",\n              \"name\": \"username\",\n              \"storageKey\": null\n            }\n          ],\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"amount\",\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"method\",\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"createdAt\",\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"approved\",\n          \"storageKey\": null\n        }\n      ],\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"totalPages\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"page\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"PaginatedWithdrawResponse\"\n};\n// prettier-ignore\n(node/*: any*/).hash = 'cfd6e93f772d467ac3cc1c49fb5841a7';\n\nmodule.exports = node;\n","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\ntype RequestComponent_getWithdrawRequests$ref = any;\nexport type MongoosePagination = {|\n  page: number,\n  limit: number,\n|};\nexport type RequestComponentQueryVariables = {|\n  pagination?: ?MongoosePagination\n|};\nexport type RequestComponentQueryResponse = {|\n  +getWithdrawRequests: ?{|\n    +$fragmentRefs: RequestComponent_getWithdrawRequests$ref\n  |}\n|};\nexport type RequestComponentQuery = {|\n  variables: RequestComponentQueryVariables,\n  response: RequestComponentQueryResponse,\n|};\n*/\n\n\n/*\nquery RequestComponentQuery(\n  $pagination: MongoosePagination\n) {\n  getWithdrawRequests(pagination: $pagination) {\n    ...RequestComponent_getWithdrawRequests\n  }\n}\n\nfragment RequestComponent_getWithdrawRequests on PaginatedWithdrawResponse {\n  docs {\n    _id\n    userId {\n      username\n      id\n    }\n    amount\n    method\n    createdAt\n    approved\n    id\n  }\n  totalPages\n  page\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"pagination\",\n    \"type\": \"MongoosePagination\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"pagination\",\n    \"variableName\": \"pagination\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"RequestComponentQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"PaginatedWithdrawResponse\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"getWithdrawRequests\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"RequestComponent_getWithdrawRequests\"\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Query\"\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"RequestComponentQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"PaginatedWithdrawResponse\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"getWithdrawRequests\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Withdraw\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"docs\",\n            \"plural\": true,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"_id\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"User\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"userId\",\n                \"plural\": false,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"username\",\n                    \"storageKey\": null\n                  },\n                  (v2/*: any*/)\n                ],\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"amount\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"method\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"createdAt\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"approved\",\n                \"storageKey\": null\n              },\n              (v2/*: any*/)\n            ],\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"totalPages\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"page\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"RequestComponentQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query RequestComponentQuery(\\n  $pagination: MongoosePagination\\n) {\\n  getWithdrawRequests(pagination: $pagination) {\\n    ...RequestComponent_getWithdrawRequests\\n  }\\n}\\n\\nfragment RequestComponent_getWithdrawRequests on PaginatedWithdrawResponse {\\n  docs {\\n    _id\\n    userId {\\n      username\\n      id\\n    }\\n    amount\\n    method\\n    createdAt\\n    approved\\n    id\\n  }\\n  totalPages\\n  page\\n}\\n\"\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = '4d077ddaae900d2ca0cd6a88e2377d3c';\n\nmodule.exports = node;\n","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\ntype RequestComponent_getWithdrawRequests$ref = any;\nexport type MongoosePagination = {|\n  page: number,\n  limit: number,\n|};\nexport type AllWalletRequestsQueryVariables = {|\n  pagination?: ?MongoosePagination\n|};\nexport type AllWalletRequestsQueryResponse = {|\n  +getWithdrawRequests: ?{|\n    +$fragmentRefs: RequestComponent_getWithdrawRequests$ref\n  |}\n|};\nexport type AllWalletRequestsQuery = {|\n  variables: AllWalletRequestsQueryVariables,\n  response: AllWalletRequestsQueryResponse,\n|};\n*/\n\n\n/*\nquery AllWalletRequestsQuery(\n  $pagination: MongoosePagination\n) {\n  getWithdrawRequests(pagination: $pagination) {\n    ...RequestComponent_getWithdrawRequests\n  }\n}\n\nfragment RequestComponent_getWithdrawRequests on PaginatedWithdrawResponse {\n  docs {\n    _id\n    userId {\n      username\n      id\n    }\n    amount\n    method\n    createdAt\n    approved\n    id\n  }\n  totalPages\n  page\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"pagination\",\n    \"type\": \"MongoosePagination\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"pagination\",\n    \"variableName\": \"pagination\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"AllWalletRequestsQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"PaginatedWithdrawResponse\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"getWithdrawRequests\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"RequestComponent_getWithdrawRequests\"\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Query\"\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"AllWalletRequestsQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"PaginatedWithdrawResponse\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"getWithdrawRequests\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Withdraw\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"docs\",\n            \"plural\": true,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"_id\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"User\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"userId\",\n                \"plural\": false,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"username\",\n                    \"storageKey\": null\n                  },\n                  (v2/*: any*/)\n                ],\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"amount\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"method\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"createdAt\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"approved\",\n                \"storageKey\": null\n              },\n              (v2/*: any*/)\n            ],\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"totalPages\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"page\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"AllWalletRequestsQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query AllWalletRequestsQuery(\\n  $pagination: MongoosePagination\\n) {\\n  getWithdrawRequests(pagination: $pagination) {\\n    ...RequestComponent_getWithdrawRequests\\n  }\\n}\\n\\nfragment RequestComponent_getWithdrawRequests on PaginatedWithdrawResponse {\\n  docs {\\n    _id\\n    userId {\\n      username\\n      id\\n    }\\n    amount\\n    method\\n    createdAt\\n    approved\\n    id\\n  }\\n  totalPages\\n  page\\n}\\n\"\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = 'd30650453a9e295ea03c2759f3b3619f';\n\nmodule.exports = node;\n","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\nexport type DetailedReportQueryVariables = {|\n  id: string\n|};\nexport type DetailedReportQueryResponse = {|\n  +specificWithdraw: ?{|\n    +_id: string,\n    +amount: number,\n    +method: string,\n    +createdAt: string,\n    +approved: number,\n    +userId: {|\n      +walletBalance: ?number,\n      +bonus: ?number,\n      +phone: ?string,\n      +username: string,\n      +transaction: ?$ReadOnlyArray<{|\n        +_id: ?string,\n        +amount: number,\n        +createdAt: ?string,\n        +transactionType: string,\n        +responseMessage: string,\n        +responseCode: string,\n      |}>,\n    |},\n  |}\n|};\nexport type DetailedReportQuery = {|\n  variables: DetailedReportQueryVariables,\n  response: DetailedReportQueryResponse,\n|};\n*/\n\n\n/*\nquery DetailedReportQuery(\n  $id: ID!\n) {\n  specificWithdraw(id: $id) {\n    _id\n    amount\n    method\n    createdAt\n    approved\n    userId {\n      walletBalance\n      bonus\n      phone\n      username\n      transaction(pagination: {offset: 0, limit: 40}) {\n        _id\n        amount\n        createdAt\n        transactionType\n        responseMessage\n        responseCode\n        id\n      }\n      id\n    }\n    id\n  }\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"id\",\n    \"type\": \"ID!\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"id\",\n    \"variableName\": \"id\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"_id\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"amount\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"method\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"createdAt\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"approved\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"walletBalance\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"bonus\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"phone\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"username\",\n  \"storageKey\": null\n},\nv11 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"pagination\",\n    \"value\": {\n      \"limit\": 40,\n      \"offset\": 0\n    }\n  }\n],\nv12 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"transactionType\",\n  \"storageKey\": null\n},\nv13 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"responseMessage\",\n  \"storageKey\": null\n},\nv14 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"responseCode\",\n  \"storageKey\": null\n},\nv15 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"DetailedReportQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"Withdraw\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"specificWithdraw\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/),\n          (v6/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"User\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"userId\",\n            \"plural\": false,\n            \"selections\": [\n              (v7/*: any*/),\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": (v11/*: any*/),\n                \"concreteType\": \"Transactions\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"transaction\",\n                \"plural\": true,\n                \"selections\": [\n                  (v2/*: any*/),\n                  (v3/*: any*/),\n                  (v5/*: any*/),\n                  (v12/*: any*/),\n                  (v13/*: any*/),\n                  (v14/*: any*/)\n                ],\n                \"storageKey\": \"transaction(pagination:{\\\"limit\\\":40,\\\"offset\\\":0})\"\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Query\"\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"DetailedReportQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"Withdraw\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"specificWithdraw\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/),\n          (v6/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"User\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"userId\",\n            \"plural\": false,\n            \"selections\": [\n              (v7/*: any*/),\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": (v11/*: any*/),\n                \"concreteType\": \"Transactions\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"transaction\",\n                \"plural\": true,\n                \"selections\": [\n                  (v2/*: any*/),\n                  (v3/*: any*/),\n                  (v5/*: any*/),\n                  (v12/*: any*/),\n                  (v13/*: any*/),\n                  (v14/*: any*/),\n                  (v15/*: any*/)\n                ],\n                \"storageKey\": \"transaction(pagination:{\\\"limit\\\":40,\\\"offset\\\":0})\"\n              },\n              (v15/*: any*/)\n            ],\n            \"storageKey\": null\n          },\n          (v15/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"DetailedReportQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query DetailedReportQuery(\\n  $id: ID!\\n) {\\n  specificWithdraw(id: $id) {\\n    _id\\n    amount\\n    method\\n    createdAt\\n    approved\\n    userId {\\n      walletBalance\\n      bonus\\n      phone\\n      username\\n      transaction(pagination: {offset: 0, limit: 40}) {\\n        _id\\n        amount\\n        createdAt\\n        transactionType\\n        responseMessage\\n        responseCode\\n        id\\n      }\\n      id\\n    }\\n    id\\n  }\\n}\\n\"\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = 'e4ca88f9d729d07c3d1acf3d39526cc3';\n\nmodule.exports = node;\n","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\nexport type UpdateWithdrawInput = {|\n  id: string,\n  approval: number,\n  message: string,\n|};\nexport type DetailedReportMutationVariables = {|\n  data: UpdateWithdrawInput\n|};\nexport type DetailedReportMutationResponse = {|\n  +updateWithdrawRequest: {|\n    +_id: string,\n    +amount: number,\n    +method: string,\n    +createdAt: string,\n    +approved: number,\n    +userId: {|\n      +walletBalance: ?number,\n      +bonus: ?number,\n      +phone: ?string,\n      +username: string,\n      +transaction: ?$ReadOnlyArray<{|\n        +_id: ?string,\n        +amount: number,\n        +createdAt: ?string,\n        +transactionType: string,\n        +responseCode: string,\n        +responseMessage: string,\n      |}>,\n    |},\n  |}\n|};\nexport type DetailedReportMutation = {|\n  variables: DetailedReportMutationVariables,\n  response: DetailedReportMutationResponse,\n|};\n*/\n\n\n/*\nmutation DetailedReportMutation(\n  $data: UpdateWithdrawInput!\n) {\n  updateWithdrawRequest(data: $data) {\n    _id\n    amount\n    method\n    createdAt\n    approved\n    userId {\n      walletBalance\n      bonus\n      phone\n      username\n      transaction(pagination: {offset: 0, limit: 40}) {\n        _id\n        amount\n        createdAt\n        transactionType\n        responseCode\n        responseMessage\n        id\n      }\n      id\n    }\n    id\n  }\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"data\",\n    \"type\": \"UpdateWithdrawInput!\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"data\",\n    \"variableName\": \"data\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"_id\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"amount\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"method\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"createdAt\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"approved\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"walletBalance\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"bonus\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"phone\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"username\",\n  \"storageKey\": null\n},\nv11 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"pagination\",\n    \"value\": {\n      \"limit\": 40,\n      \"offset\": 0\n    }\n  }\n],\nv12 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"transactionType\",\n  \"storageKey\": null\n},\nv13 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"responseCode\",\n  \"storageKey\": null\n},\nv14 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"responseMessage\",\n  \"storageKey\": null\n},\nv15 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"DetailedReportMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"Withdraw\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"updateWithdrawRequest\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/),\n          (v6/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"User\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"userId\",\n            \"plural\": false,\n            \"selections\": [\n              (v7/*: any*/),\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": (v11/*: any*/),\n                \"concreteType\": \"Transactions\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"transaction\",\n                \"plural\": true,\n                \"selections\": [\n                  (v2/*: any*/),\n                  (v3/*: any*/),\n                  (v5/*: any*/),\n                  (v12/*: any*/),\n                  (v13/*: any*/),\n                  (v14/*: any*/)\n                ],\n                \"storageKey\": \"transaction(pagination:{\\\"limit\\\":40,\\\"offset\\\":0})\"\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Mutation\"\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"DetailedReportMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"Withdraw\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"updateWithdrawRequest\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/),\n          (v6/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"User\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"userId\",\n            \"plural\": false,\n            \"selections\": [\n              (v7/*: any*/),\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": (v11/*: any*/),\n                \"concreteType\": \"Transactions\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"transaction\",\n                \"plural\": true,\n                \"selections\": [\n                  (v2/*: any*/),\n                  (v3/*: any*/),\n                  (v5/*: any*/),\n                  (v12/*: any*/),\n                  (v13/*: any*/),\n                  (v14/*: any*/),\n                  (v15/*: any*/)\n                ],\n                \"storageKey\": \"transaction(pagination:{\\\"limit\\\":40,\\\"offset\\\":0})\"\n              },\n              (v15/*: any*/)\n            ],\n            \"storageKey\": null\n          },\n          (v15/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"DetailedReportMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation DetailedReportMutation(\\n  $data: UpdateWithdrawInput!\\n) {\\n  updateWithdrawRequest(data: $data) {\\n    _id\\n    amount\\n    method\\n    createdAt\\n    approved\\n    userId {\\n      walletBalance\\n      bonus\\n      phone\\n      username\\n      transaction(pagination: {offset: 0, limit: 40}) {\\n        _id\\n        amount\\n        createdAt\\n        transactionType\\n        responseCode\\n        responseMessage\\n        id\\n      }\\n      id\\n    }\\n    id\\n  }\\n}\\n\"\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = '4d0c5c7f9c62a9d32e9eca71315fe3b1';\n\nmodule.exports = node;\n","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\nexport type NotificationInput = {|\n  type: string,\n  title: string,\n  body: string,\n  url?: ?string,\n  tournamentId?: ?string,\n|};\nexport type NotificationMutationVariables = {|\n  data: NotificationInput\n|};\nexport type NotificationMutationResponse = {|\n  +sendNotification: ?{|\n    +message: string\n  |}\n|};\nexport type NotificationMutation = {|\n  variables: NotificationMutationVariables,\n  response: NotificationMutationResponse,\n|};\n*/\n\n\n/*\nmutation NotificationMutation(\n  $data: NotificationInput!\n) {\n  sendNotification(data: $data) {\n    message\n  }\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"data\",\n    \"type\": \"NotificationInput!\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"data\",\n        \"variableName\": \"data\"\n      }\n    ],\n    \"concreteType\": \"NotificationPayload\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"sendNotification\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"message\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"NotificationMutation\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Mutation\"\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"NotificationMutation\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"NotificationMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation NotificationMutation(\\n  $data: NotificationInput!\\n) {\\n  sendNotification(data: $data) {\\n    message\\n  }\\n}\\n\"\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = '68b643fb48c0863318b253970d50a0a3';\n\nmodule.exports = node;\n","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\nexport type TournamentsSectionQueryVariables = {||};\nexport type TournamentsSectionQueryResponse = {|\n  +tournament: ?$ReadOnlyArray<{|\n    +_id: string,\n    +title: string,\n    +totalRegistered: number,\n    +time: string,\n    +gameId: {|\n      +title: string\n    |},\n  |}>\n|};\nexport type TournamentsSectionQuery = {|\n  variables: TournamentsSectionQueryVariables,\n  response: TournamentsSectionQueryResponse,\n|};\n*/\n\n\n/*\nquery TournamentsSectionQuery {\n  tournament(pagination: {offset: 0, limit: 30}) {\n    _id\n    title\n    totalRegistered\n    time\n    gameId {\n      title\n      id\n    }\n    id\n  }\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"pagination\",\n    \"value\": {\n      \"limit\": 30,\n      \"offset\": 0\n    }\n  }\n],\nv1 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"_id\",\n  \"storageKey\": null\n},\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"title\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"totalRegistered\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"time\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"TournamentsSectionQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v0/*: any*/),\n        \"concreteType\": \"Tournament\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"tournament\",\n        \"plural\": true,\n        \"selections\": [\n          (v1/*: any*/),\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Game\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"gameId\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": \"tournament(pagination:{\\\"limit\\\":30,\\\"offset\\\":0})\"\n      }\n    ],\n    \"type\": \"Query\"\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Operation\",\n    \"name\": \"TournamentsSectionQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v0/*: any*/),\n        \"concreteType\": \"Tournament\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"tournament\",\n        \"plural\": true,\n        \"selections\": [\n          (v1/*: any*/),\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Game\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"gameId\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/),\n              (v5/*: any*/)\n            ],\n            \"storageKey\": null\n          },\n          (v5/*: any*/)\n        ],\n        \"storageKey\": \"tournament(pagination:{\\\"limit\\\":30,\\\"offset\\\":0})\"\n      }\n    ]\n  },\n  \"params\": {\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"TournamentsSectionQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query TournamentsSectionQuery {\\n  tournament(pagination: {offset: 0, limit: 30}) {\\n    _id\\n    title\\n    totalRegistered\\n    time\\n    gameId {\\n      title\\n      id\\n    }\\n    id\\n  }\\n}\\n\"\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = '5b0bbf020911f13248ba1c4bd23a1353';\n\nmodule.exports = node;\n","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\nexport type GamesAvailableQueryVariables = {||};\nexport type GamesAvailableQueryResponse = {|\n  +games: ?$ReadOnlyArray<{|\n    +title: string,\n    +_id: string,\n  |}>\n|};\nexport type GamesAvailableQuery = {|\n  variables: GamesAvailableQueryVariables,\n  response: GamesAvailableQueryResponse,\n|};\n*/\n\n\n/*\nquery GamesAvailableQuery {\n  games {\n    title\n    _id\n    id\n  }\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"title\",\n  \"storageKey\": null\n},\nv1 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"_id\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"GamesAvailableQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"Game\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"games\",\n        \"plural\": true,\n        \"selections\": [\n          (v0/*: any*/),\n          (v1/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Query\"\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Operation\",\n    \"name\": \"GamesAvailableQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"Game\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"games\",\n        \"plural\": true,\n        \"selections\": [\n          (v0/*: any*/),\n          (v1/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"GamesAvailableQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query GamesAvailableQuery {\\n  games {\\n    title\\n    _id\\n    id\\n  }\\n}\\n\"\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = '2bb9394b5869bad6f6f51913eb817712';\n\nmodule.exports = node;\n","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\nexport type MegladronInput = {|\n  title: string,\n  description: string,\n  image: string,\n  game: string,\n  startTime: string,\n  endTime: string,\n  maxPlayers: number,\n|};\nexport type MegaBasicDetailsMutationVariables = {|\n  data: MegladronInput\n|};\nexport type MegaBasicDetailsMutationResponse = {|\n  +createMegladron: {|\n    +megladron: {|\n      +_id: string,\n      +title: string,\n      +description: string,\n    |}\n  |}\n|};\nexport type MegaBasicDetailsMutation = {|\n  variables: MegaBasicDetailsMutationVariables,\n  response: MegaBasicDetailsMutationResponse,\n|};\n*/\n\n\n/*\nmutation MegaBasicDetailsMutation(\n  $data: MegladronInput!\n) {\n  createMegladron(data: $data) {\n    megladron {\n      _id\n      title\n      description\n      id\n    }\n  }\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"data\",\n    \"type\": \"MegladronInput!\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"data\",\n    \"variableName\": \"data\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"_id\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"title\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"description\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"MegaBasicDetailsMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"CreateMegladronPayload\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"createMegladron\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Megladron\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"megladron\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/),\n              (v3/*: any*/),\n              (v4/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Mutation\"\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"MegaBasicDetailsMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"CreateMegladronPayload\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"createMegladron\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Megladron\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"megladron\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/),\n              (v3/*: any*/),\n              (v4/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"id\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"MegaBasicDetailsMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation MegaBasicDetailsMutation(\\n  $data: MegladronInput!\\n) {\\n  createMegladron(data: $data) {\\n    megladron {\\n      _id\\n      title\\n      description\\n      id\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = '654f920f40e3e6157f5c46408a1d5974';\n\nmodule.exports = node;\n","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\nexport type ViewMegladronQueryVariables = {||};\nexport type ViewMegladronQueryResponse = {|\n  +megladron: ?{|\n    +docs: ?$ReadOnlyArray<{|\n      +_id: string,\n      +title: string,\n    |}>\n  |}\n|};\nexport type ViewMegladronQuery = {|\n  variables: ViewMegladronQueryVariables,\n  response: ViewMegladronQueryResponse,\n|};\n*/\n\n\n/*\nquery ViewMegladronQuery {\n  megladron {\n    docs {\n      _id\n      title\n      id\n    }\n  }\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"_id\",\n  \"storageKey\": null\n},\nv1 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"title\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ViewMegladronQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"MegladronQueryPayload\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"megladron\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Megladron\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"docs\",\n            \"plural\": true,\n            \"selections\": [\n              (v0/*: any*/),\n              (v1/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Query\"\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Operation\",\n    \"name\": \"ViewMegladronQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"MegladronQueryPayload\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"megladron\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Megladron\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"docs\",\n            \"plural\": true,\n            \"selections\": [\n              (v0/*: any*/),\n              (v1/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"id\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ViewMegladronQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query ViewMegladronQuery {\\n  megladron {\\n    docs {\\n      _id\\n      title\\n      id\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = 'b2ad9d84a4a37d87c6ae8761f6573680';\n\nmodule.exports = node;\n","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ReaderFragment } from 'relay-runtime';\nimport type { FragmentReference } from \"relay-runtime\";\ndeclare export opaque type BasicDetails_megladron$ref: FragmentReference;\ndeclare export opaque type BasicDetails_megladron$fragmentType: BasicDetails_megladron$ref;\nexport type BasicDetails_megladron = {|\n  +_id: string,\n  +title: string,\n  +description: string,\n  +startTime: ?string,\n  +endTime: ?string,\n  +maxPlayers: number,\n  +$refType: BasicDetails_megladron$ref,\n|};\nexport type BasicDetails_megladron$data = BasicDetails_megladron;\nexport type BasicDetails_megladron$key = {\n  +$data?: BasicDetails_megladron$data,\n  +$fragmentRefs: BasicDetails_megladron$ref,\n  ...\n};\n*/\n\n\nconst node/*: ReaderFragment*/ = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"BasicDetails_megladron\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"title\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"description\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"startTime\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"endTime\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"maxPlayers\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"Megladron\"\n};\n// prettier-ignore\n(node/*: any*/).hash = '14d18c23c856e6aa3d6ae8fac52e438d';\n\nmodule.exports = node;\n","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\nexport type MegladronGroupInput = {|\n  _id: string,\n  custom?: ?$ReadOnlyArray<CustomInput>,\n  totalMatches: number,\n  startTime: string,\n  endTime: string,\n  title: string,\n|};\nexport type CustomInput = {|\n  label: string,\n  value?: ?string,\n|};\nexport type AddRoundMutationVariables = {|\n  data: MegladronGroupInput\n|};\nexport type AddRoundMutationResponse = {|\n  +createMegladronGroup: {|\n    +_id: string,\n    +rounds: $ReadOnlyArray<?{|\n      +title: ?string,\n      +startTime: string,\n      +endTime: string,\n      +totalMatches: number,\n    |}>,\n  |}\n|};\nexport type AddRoundMutation = {|\n  variables: AddRoundMutationVariables,\n  response: AddRoundMutationResponse,\n|};\n*/\n\n\n/*\nmutation AddRoundMutation(\n  $data: MegladronGroupInput!\n) {\n  createMegladronGroup(data: $data) {\n    _id\n    rounds {\n      title\n      startTime\n      endTime\n      totalMatches\n    }\n    id\n  }\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"data\",\n    \"type\": \"MegladronGroupInput!\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"data\",\n    \"variableName\": \"data\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"_id\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"MegladronRounds\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"rounds\",\n  \"plural\": true,\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"title\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"startTime\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"endTime\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"totalMatches\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"AddRoundMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"Megladron\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"createMegladronGroup\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Mutation\"\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"AddRoundMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"Megladron\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"createMegladronGroup\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"AddRoundMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation AddRoundMutation(\\n  $data: MegladronGroupInput!\\n) {\\n  createMegladronGroup(data: $data) {\\n    _id\\n    rounds {\\n      title\\n      startTime\\n      endTime\\n      totalMatches\\n    }\\n    id\\n  }\\n}\\n\"\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = '149349218de8c9fbe84932519f274750';\n\nmodule.exports = node;\n","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ReaderFragment } from 'relay-runtime';\nimport type { FragmentReference } from \"relay-runtime\";\ndeclare export opaque type TournamentsInRound_game$ref: FragmentReference;\ndeclare export opaque type TournamentsInRound_game$fragmentType: TournamentsInRound_game$ref;\nexport type TournamentsInRound_game = {|\n  +_id: string,\n  +customFields: ?$ReadOnlyArray<?{|\n    +label: string,\n    +type: string,\n    +options: ?$ReadOnlyArray<string>,\n  |}>,\n  +metrics: ?$ReadOnlyArray<string>,\n  +$refType: TournamentsInRound_game$ref,\n|};\nexport type TournamentsInRound_game$data = TournamentsInRound_game;\nexport type TournamentsInRound_game$key = {\n  +$data?: TournamentsInRound_game$data,\n  +$fragmentRefs: TournamentsInRound_game$ref,\n  ...\n};\n*/\n\n\nconst node/*: ReaderFragment*/ = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"TournamentsInRound_game\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"GameCustomFields\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"customFields\",\n      \"plural\": true,\n      \"selections\": [\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"label\",\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"type\",\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"options\",\n          \"storageKey\": null\n        }\n      ],\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"metrics\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"Game\"\n};\n// prettier-ignore\n(node/*: any*/).hash = 'e96b66aafa36e9e9b2789beea1015ab9';\n\nmodule.exports = node;\n","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ReaderFragment } from 'relay-runtime';\nimport type { FragmentReference } from \"relay-runtime\";\ndeclare export opaque type RoundsOverview_rounds$ref: FragmentReference;\ndeclare export opaque type RoundsOverview_rounds$fragmentType: RoundsOverview_rounds$ref;\nexport type RoundsOverview_rounds = {|\n  +rounds: $ReadOnlyArray<?{|\n    +_id: string,\n    +title: ?string,\n    +startTime: string,\n    +endTime: string,\n    +totalMatches: number,\n  |}>,\n  +$refType: RoundsOverview_rounds$ref,\n|};\nexport type RoundsOverview_rounds$data = RoundsOverview_rounds;\nexport type RoundsOverview_rounds$key = {\n  +$data?: RoundsOverview_rounds$data,\n  +$fragmentRefs: RoundsOverview_rounds$ref,\n  ...\n};\n*/\n\n\nconst node/*: ReaderFragment*/ = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"RoundsOverview_rounds\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"MegladronRounds\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"rounds\",\n      \"plural\": true,\n      \"selections\": [\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"_id\",\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"title\",\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"startTime\",\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"endTime\",\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"totalMatches\",\n          \"storageKey\": null\n        }\n      ],\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"Megladron\"\n};\n// prettier-ignore\n(node/*: any*/).hash = 'b58fb785a1823f2a879caa0409c565e9';\n\nmodule.exports = node;\n","/**\n * @flow\n */\n\n/* eslint-disable */\n\n'use strict';\n\n/*::\nimport type { ConcreteRequest } from 'relay-runtime';\ntype BasicDetails_megladron$ref = any;\ntype RoundsOverview_rounds$ref = any;\ntype TournamentsInRound_game$ref = any;\nexport type UpdateMegaQueryVariables = {|\n  id: string\n|};\nexport type UpdateMegaQueryResponse = {|\n  +megladron: ?{|\n    +docs: ?$ReadOnlyArray<{|\n      +game: {|\n        +$fragmentRefs: TournamentsInRound_game$ref\n      |},\n      +createdBy: {|\n        +username: string\n      |},\n      +$fragmentRefs: BasicDetails_megladron$ref & RoundsOverview_rounds$ref,\n    |}>\n  |}\n|};\nexport type UpdateMegaQuery = {|\n  variables: UpdateMegaQueryVariables,\n  response: UpdateMegaQueryResponse,\n|};\n*/\n\n\n/*\nquery UpdateMegaQuery(\n  $id: ID!\n) {\n  megladron(filter: {_id: $id}) {\n    docs {\n      ...BasicDetails_megladron\n      ...RoundsOverview_rounds\n      game {\n        ...TournamentsInRound_game\n        id\n      }\n      createdBy {\n        username\n        id\n      }\n      id\n    }\n  }\n}\n\nfragment BasicDetails_megladron on Megladron {\n  _id\n  title\n  description\n  startTime\n  endTime\n  maxPlayers\n}\n\nfragment RoundsOverview_rounds on Megladron {\n  rounds {\n    _id\n    title\n    startTime\n    endTime\n    totalMatches\n  }\n}\n\nfragment TournamentsInRound_game on Game {\n  _id\n  customFields {\n    label\n    type\n    options\n  }\n  metrics\n}\n*/\n\nconst node/*: ConcreteRequest*/ = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"id\",\n    \"type\": \"ID!\"\n  }\n],\nv1 = [\n  {\n    \"fields\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"_id\",\n        \"variableName\": \"id\"\n      }\n    ],\n    \"kind\": \"ObjectValue\",\n    \"name\": \"filter\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"username\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"_id\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"title\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"startTime\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"endTime\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"UpdateMegaQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"MegladronQueryPayload\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"megladron\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Megladron\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"docs\",\n            \"plural\": true,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"Game\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"game\",\n                \"plural\": false,\n                \"selections\": [\n                  {\n                    \"args\": null,\n                    \"kind\": \"FragmentSpread\",\n                    \"name\": \"TournamentsInRound_game\"\n                  }\n                ],\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"User\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"createdBy\",\n                \"plural\": false,\n                \"selections\": [\n                  (v2/*: any*/)\n                ],\n                \"storageKey\": null\n              },\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"BasicDetails_megladron\"\n              },\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"RoundsOverview_rounds\"\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Query\"\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"UpdateMegaQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"MegladronQueryPayload\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"megladron\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Megladron\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"docs\",\n            \"plural\": true,\n            \"selections\": [\n              (v3/*: any*/),\n              (v4/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"description\",\n                \"storageKey\": null\n              },\n              (v5/*: any*/),\n              (v6/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"maxPlayers\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"MegladronRounds\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"rounds\",\n                \"plural\": true,\n                \"selections\": [\n                  (v3/*: any*/),\n                  (v4/*: any*/),\n                  (v5/*: any*/),\n                  (v6/*: any*/),\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"totalMatches\",\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"Game\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"game\",\n                \"plural\": false,\n                \"selections\": [\n                  (v3/*: any*/),\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"GameCustomFields\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"customFields\",\n                    \"plural\": true,\n                    \"selections\": [\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"kind\": \"ScalarField\",\n                        \"name\": \"label\",\n                        \"storageKey\": null\n                      },\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"kind\": \"ScalarField\",\n                        \"name\": \"type\",\n                        \"storageKey\": null\n                      },\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"kind\": \"ScalarField\",\n                        \"name\": \"options\",\n                        \"storageKey\": null\n                      }\n                    ],\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"metrics\",\n                    \"storageKey\": null\n                  },\n                  (v7/*: any*/)\n                ],\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"User\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"createdBy\",\n                \"plural\": false,\n                \"selections\": [\n                  (v2/*: any*/),\n                  (v7/*: any*/)\n                ],\n                \"storageKey\": null\n              },\n              (v7/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"UpdateMegaQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query UpdateMegaQuery(\\n  $id: ID!\\n) {\\n  megladron(filter: {_id: $id}) {\\n    docs {\\n      ...BasicDetails_megladron\\n      ...RoundsOverview_rounds\\n      game {\\n        ...TournamentsInRound_game\\n        id\\n      }\\n      createdBy {\\n        username\\n        id\\n      }\\n      id\\n    }\\n  }\\n}\\n\\nfragment BasicDetails_megladron on Megladron {\\n  _id\\n  title\\n  description\\n  startTime\\n  endTime\\n  maxPlayers\\n}\\n\\nfragment RoundsOverview_rounds on Megladron {\\n  rounds {\\n    _id\\n    title\\n    startTime\\n    endTime\\n    totalMatches\\n  }\\n}\\n\\nfragment TournamentsInRound_game on Game {\\n  _id\\n  customFields {\\n    label\\n    type\\n    options\\n  }\\n  metrics\\n}\\n\"\n  }\n};\n})();\n// prettier-ignore\n(node/*: any*/).hash = 'b798b0c55d5586c6f336f0372baae924';\n\nmodule.exports = node;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\n\nconst styles = makeStyles(theme => ({\n  form: {\n    background: theme.palette.background.paper,\n    padding: theme.spacing(1),\n    position: 'relative',\n    borderRadius: 4,\n    overflow: 'hidden',\n    boxShadow: theme.shadows[1],\n    '& > *':{\n      marginBottom: theme.spacing(1)\n    }\n  },\n}))\n\nfunction Form(props) {\n\n  const classes = styles()\n\n  function onSubmit(e){\n    e.preventDefault()\n    if(props.submitTriggered){\n      props.submitTriggered(e)\n    }\n    let el = e.target\n    let inputs = el.querySelectorAll(\"[name]\")\n    let data = {}\n    let formData = new FormData()\n    for(let i = 0; i < inputs.length; i++){\n      data[inputs[i].getAttribute(\"name\")] = inputs[i].value\n      formData.append(inputs[i].getAttribute(\"name\"), inputs[i].value)\n    }\n    let filesEl = document.querySelectorAll(\"[type=file]\");\n    //console.log(file)\n    for(let i = 0; i < filesEl.length; i++){\n      for(let k = 0; k < filesEl[i].files.length; k++){\n        formData.append(filesEl[i].getAttribute(\"name\"), filesEl[i].files[k], filesEl[i].files[k].name)\n      }\n      \n    }\n    if(props.onSubmit){\n      return props.onSubmit(data, formData, el)\n    }\n  }\n\n\n  return (\n    <form className={props.className || classes.form} onSubmit={onSubmit} style={props.style}>\n      <Typography color=\"textSecondary\" variant=\"h5\">{props.heading}</Typography>\n      {props.children}\n    </form>\n  )\n\n}\n\nForm.propTypes = {\n  onSubmit: PropTypes.func,\n  children: PropTypes.node.isRequired,\n  submitTriggered: PropTypes.func,\n  success: PropTypes.func,\n  error: PropTypes.func,\n  url: PropTypes.string,\n  method: PropTypes.string,\n  resetOnSubmit: PropTypes.bool,\n  successMessage: PropTypes.string,\n  addButton: PropTypes.bool,\n  heading: PropTypes.string\n}\n\nexport default Form;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/core/styles'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  buttonProgress: {\n    position: 'absolute'\n  },\n}))\n\nexport default function _Button({isLoading, children, ...props}) {\n\n  const classes = useStyles()\n  return (\n    <div className={classes.wrapper}>\n      <Button variant=\"contained\" color=\"primary\" fullWidth disabled={isLoading} {...props}>{children}</Button>\n      {isLoading && <CircularProgress size={24} className={classes.buttonProgress} />}\n    </div>\n  )\n}\n\n_Button.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired\n}","import { initialState } from './index'\n\nconst SnackbarReducer = (state = initialState.Snackbar, action) => {\n  switch(action.type){\n    case 'SNACKBAR::ADD':\n      return {\n        ...state,\n        data: [\n          ...state.data,\n          {\n            type: action.snackbarType,\n            id: action.id,\n            message: action.message\n          }\n        ]\n      }\n    case 'SNACKBAR::CLOSE':\n      return {\n        ...state,\n        data: state.data.filter(item => item.id !== action.id)\n      }\n    default:\n      return state\n  }\n}\n\nexport default SnackbarReducer","import { initialState } from './index'\r\n\r\nconst TOGGLE_MODAL = \"MODAL::TOGGLE\"\r\nconst TOGGLE_DRAWER = \"DRAWER::TOGGLE\"\r\n\r\nconst SnackbarReducer = (state = initialState.Independent, action) => {\r\n  switch(action.type) {\r\n    case TOGGLE_DRAWER: \r\n      return {\r\n        ...state,\r\n        drawerOpen: action.state\r\n      }\r\n    case TOGGLE_MODAL:\r\n      return {\r\n        ...state,\r\n        modalOpen: !state.modalOpen\r\n      }\r\n    case \"SETTINGS::ENVIRONMENT\": \r\n      return {\r\n        environment: action.env\r\n      }\r\n    default:\r\n      return state\r\n\r\n  }\r\n}\r\n\r\nexport default SnackbarReducer;","import { initialState } from './index'\n\nconst AuthReducer = (state = initialState.Auth, action) => {\n  switch(action.type) {\n    case \"AUTH::LOGIN\":\n      return {\n        ...action.data\n      }\n    case \"AUTH::LOGOUT\":\n      return {\n        ...initialState.Auth\n      }\n    case \"AUTH::ADD_TOURNAMENT\":\n      return {\n        ...state,\n        registeredTournaments: [...state.registeredTournaments, action.id]\n      }\n    case \"AUTH::UPDATE_BALANCE\": \n      return {\n        ...state,\n        walletBalance: action.wallet,\n        bonus: action.bonus\n      }\n    default:\n      return state\n  }\n}\n\nexport default AuthReducer","import { combineReducers } from 'redux'\nimport Snackbar from './snackbar'\nimport Independent from './independent'\nimport AddTournament from './AddTournament'\nimport Auth from './AuthService'\n\nexport const initialState = {\n  Snackbar: {\n    data: []\n  },\n  Independent: {\n    modalOpen: false,\n    drawerOpen: false,\n    environment: \"Testing\"\n  },\n  AddTournament: {\n    game: {},\n    customFields: [],\n    prizes: [],\n    metrics: []\n  },\n  Auth: {\n    registeredTournaments: [],\n    accessToken: \"\",\n    refreshToken: \"\",\n    userId: \"\",\n    walletBalance: 0,\n    bonus: 0,\n    username: \"\"\n  },\n}\n\nconst reducers = combineReducers({\n  Snackbar,\n  Independent,\n  AddTournament,\n  Auth\n})\n\nexport default reducers;","import { initialState } from './index'\r\n\r\nexport default function AddTournamentReducer(state = initialState.AddTournament, action)  {\r\n  switch(action.type){\r\n    case 'ADD_TOURNAMENT::SET_GAME':\r\n      return ({\r\n        ...state,\r\n        game: action.game\r\n      })\r\n\r\n    case 'ADD_TOURNAMENT::SET_CUSTOM_FIELDS':\r\n      return ({\r\n        ...state,\r\n        customFields: {\r\n          ...state.customFields,\r\n          [action.name]: action.value\r\n        }\r\n      })\r\n\r\n    case 'ADD_TOURNAMENT::SET_PRIZES':\r\n      return ({\r\n        ...state,\r\n        prizes: action.data\r\n      })\r\n    case 'ADD_TOURNAMENT::ADD_GAME_DATA':\r\n      return ({\r\n        ...state,\r\n        customFields: [\r\n          ...action.data\r\n        ]\r\n      })\r\n    \r\n    case \"ADD_TOURNAMENT::SET_METRICS\":\r\n      return ({\r\n        ...state,\r\n        metrics: [\r\n          ...action.metrics\r\n        ]\r\n      })\r\n\r\n    default: \r\n      return state\r\n  }\r\n}","import { createStore, applyMiddleware, compose } from 'redux';\nimport app from './reducers'\n\n/**\n * @name configureStore.js\n * @type { Stateless component }\n * @requires redux-thunk,redux-logger\n * @description: this is the function that returns a store object from redux.\n */\n\nconst localStorageMiddleware = ({getState}) => { // <--- FOCUS HERE\n    return (next) => (action) => {\n        const result = next(action);\n        localStorage.setItem('gameBackend', JSON.stringify(\n            {\n                Independent: getState().Independent,\n                Auth: getState().Auth\n            }\n        ));\n        return result;\n    };\n};\n\nlet persistedStore = {}\n\ntry{\n    persistedStore = localStorage.getItem('gameBackend') ? JSON.parse(localStorage.getItem('gameBackend')) : {}\n}catch(err){\n    console.log(\"Unable to read store from localstorage\", err)\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst configureStore = () => {\n    return createStore(app, persistedStore, composeEnhancers(applyMiddleware(localStorageMiddleware)));\n};\n\nexport default configureStore();","import store from 'Store'\n\nconst page = \"AUTH::\"\n\nconst Auth = {\n  login: data => {\n    store.dispatch({\n      type: page+\"LOGIN\",\n      data\n    })\n  },\n  getData: () => {\n    return store.getState().Auth\n  },\n\n  addTournament: (id) => {\n    return store.dispatch({\n      type: page+\"ADD_TOURNAMENT\",\n      id\n    })\n  },\n\n  logout: () => {\n    store.dispatch({\n      type: page+\"LOGOUT\"\n    })\n  },\n  isUserLoggedIn: () => {\n    return store.getState().Auth.accessToken !== \"\"\n  },\n  updateBalance: (wallet, bonus) => {\n    store.dispatch({\n      type: page+\"UPDATE_BALANCE\",\n      wallet,\n      bonus\n    })\n  }\n}\n\nexport default Auth\n","import store from 'Store'\n\nexport const snackbarSuccess = (message, id) => store.dispatch({\n  type: \"SNACKBAR::ADD\",\n  message,\n  id,\n  snackbarType: \"success\"\n})\n\n\nexport const snackbarError = (message, id) => store.dispatch({\n  type: \"SNACKBAR::ADD\",\n  message,\n  id,\n  snackbarType: \"error\"\n})\n\nexport const snackbarWarning = (message, id) => store.dispatch({\n  type: \"SNACKBAR::ADD\",\n  message,\n  id,\n  snackbarType: \"warning\"\n})\n\nexport const snackbarInfo = (message, id) => store.dispatch({\n  type: \"SNACKBAR::ADD\",\n  message,\n  snackbarType: \"info\",\n  id\n})\n\nexport const closeSnackbar = (id) => store.dispatch({\n  type: \"SNACKBAR::CLOSE\",\n  id\n})","import AuthService from 'Store/actions/AuthService'\nimport {snackbarError} from 'Store/actions/snackbar'\n\nexport default function(errors){\n  console.error(\"Errors\", errors)\n  try{\n    if(errors.length > 0){\n      showError(errors)\n    }else if(errors.message !== undefined) {\n      snackbarError(errors.message, Date.now())\n    }\n  }catch(err){\n    //console.log(\"caught an expception\")\n    //console.log(errors, err)\n    snackbarError(\"Unknown error occured\", Date.now())\n  }\n}\n\nfunction showError(errors){\n  //console.log(errors)\n  //console.log(\"Must show errors\")\n  if(errors === undefined){\n    return snackbarError(\"Unknow error occured\", Date.now())\n  }\n  for(let i = 0; i < errors.length; i++){\n    \n    if(errors[i].message !== undefined ){\n      if(errors[i].message === \"Unauthorized\"){\n        console.log(\"Now will logout user\")\n        snackbarError(\"Hi! you're not logged in.\", Date.now())\n        AuthService.logout()\n      }else{\n        snackbarError(errors[i].message, Date.now())\n      }\n    }\n  }\n}","import {\n  Environment,\n  Network,\n  RecordSource,\n  Store,\n  QueryResponseCache\n} from 'relay-runtime';\nimport Auth from 'Store/actions/AuthService';\nimport ErrorUtils from './ErrorUtils'\n\nconst oneMinute = 60 * 1000;\n\n//Because rarely a data would change in less than an hour\nconst cache = new QueryResponseCache({ size: 250, ttl: oneMinute * 60});\n\nfunction fetchQuery(\n  operation,\n  variables,\n  cacheConfig\n) {\n\n  const queryID = operation.text;\n  const isMutation = operation.operationKind === 'mutation';\n  const isQuery = operation.operationKind === 'query';\n  const forceFetch = cacheConfig && cacheConfig.force;\n\n  // Try to get data from cache on queries\n  const fromCache = cache.get(queryID, variables);\n  if (\n    isQuery &&\n    fromCache !== null &&\n    !forceFetch\n  ) {\n    return fromCache;\n  }\n\n  let extraHeaders = {}\n\n  if(Auth.isUserLoggedIn()){\n    const data = Auth.getData()\n    extraHeaders = {\n      \"authorization\": \"Bearer \"+data.accessToken,\n      \"refreshToken\": data.refreshToken\n    }\n  }\n  let env = \"Local\"\n  try {\n    env = document.querySelector(\"[name=environment]\").value\n  }catch(err) {\n    env = \"Local\"\n  }\n  let url = \"\"\n  if(env === \"Production\") {\n    url = \"https://www.gamingstars.in/graphql\"\n  }else if(env === 'Testing'){\n    url = \"https://gaming-stars.herokuapp.com/graphql\"\n  }else{\n    url = \"http://localhost:5000/graphql\"\n  }\n  console.log(\"Will be sending request to \", url)\n  return  fetch(url, {\n      method: 'POST',\n      headers: {\n        // Add authentication and other headers here\n        'content-type': 'application/json',\n        ...extraHeaders\n      },\n      body: JSON.stringify({\n        query: operation.text, // GraphQL text from input\n        variables,\n      }),\n    }).then(response => {\n      return response.json();\n    }).then(json => {\n            // Update cache on queries\n      if (isQuery && json) {\n        cache.set(queryID, variables, json);\n      }\n            // Clear cache on mutations\n      if (isMutation) {\n        cache.clear();\n      }\n      if(json.errors){\n        throw json.errors\n      }\n      return json;\n    });\n}\n\nconst environment = new Environment({\n  network: Network.create(fetchQuery),\n  store: new Store(new RecordSource()),\n});\n\nexport default environment;\n\n// import {\n//   Environment,\n//   Network,\n//   RecordSource,\n//   Store,\n//   QueryResponseCache\n// } from 'relay-runtime';\n// import Auth from 'Services/AuthService';\n// import ErrorUtils from './ErrorUtils';\n\n// const oneMinute = 60 * 1000;\n\n// //Because rarely a data would change in less than an hour\n// const cache = new QueryResponseCache({ size: 250, ttl: oneMinute * 60});\n\n// function fetchQuery(\n//   operation,\n//   variables,\n//   cacheConfig\n// ) {\n\n//   const queryID = operation.text;\n//   const isMutation = operation.operationKind === 'mutation';\n//   const isQuery = operation.operationKind === 'query';\n//   const forceFetch = cacheConfig && cacheConfig.force;\n\n//   // Try to get data from cache on queries\n//   const fromCache = cache.get(queryID, variables);\n//   if (\n//     isQuery &&\n//     fromCache !== null &&\n//     !forceFetch\n//   ) {\n//     return fromCache;\n//   }\n\n//   let extraHeaders = {}\n\n//   if(Auth.isUserLoggedIn()){\n//     //const data = Auth.getData()\n//     extraHeaders = {\n//       \"authorization\": \"Bearer \"+Auth.getAccessToken(),\n//       \"refreshToken\": Auth.getRefreshToken()\n//     }\n//   }\n//   let env = \"Local\"\n//   try {\n//     env = document.querySelector(\"[name=environment]\").value\n//   }catch(err) {\n//     env = \"Local\"\n//   }\n//   let url = \"\"\n//   if(env === \"Production\") {\n//     url = \"https://www.gamingstars.in/graphql\"\n//   }else if(env === 'Testing'){\n//     url = \"https://gaming-stars.herokuapp.com/graphql\"\n//   }else{\n//     url = \"http://localhost:5000/graphql\"\n//   }\n//   console.log(\"Will be sending request to \", url)\n\n//   return fetch(url, {\n//       method: 'POST',\n//       headers: {\n//         // Add authentication and other headers here\n//         'content-type': 'application/json',\n//         ...extraHeaders\n//       },\n//       body: JSON.stringify({\n//         query: operation.text, // GraphQL text from input\n//         variables,\n//       }),\n//     }).then(response => {\n//       return response.json();\n//     }).then(json => {\n//       // Update cache on queries\n//       if (isQuery && json) {\n//         cache.set(queryID, variables, json);\n//       }\n//       // Clear cache on mutations\n//       if (isMutation) {\n//         cache.clear();\n//       }\n//       if(json.errors){\n//         ErrorUtils(json.errors)\n//       }\n//       return json;\n//     });\n      \n// }\n\n// const environment = new Environment({\n//   network: Network.create(fetchQuery),\n//   store: new Store(new RecordSource()),\n// });\n\n// export default environment;","import { commitMutation } from 'react-relay'\nimport Environment from 'Services/Environment'\nimport ErrorUtils from 'Services/ErrorUtils'\n\nfunction sendMuatation(variables, mutation, callback, props ={}){\n  commitMutation(\n    Environment,\n    {\n      mutation,\n      variables,\n      onCompleted: (response, errors) => {\n        if(errors){\n          //being handled in environment\n          console.log(\"On COmplete\")\n          ErrorUtils(errors)\n        }\n        callback(response, errors)\n      },\n      onError: err => {\n        console.log(\"On Error\")\n        ErrorUtils(err)\n        callback(null, err)\n      },\n      ...props\n    }\n  )\n}\n\nexport default sendMuatation","import React from 'react'\nimport Form from 'Components/Form'\nimport { TextField } from '@material-ui/core'\nimport LoadingButton from 'Components/LoadingButton'\nimport graphql from 'babel-plugin-relay/macro'\nimport CommitRelay from 'Components/CommitRelay'\nimport ErrorUtil from 'Services/ErrorUtils'\nimport AuthService from 'Store/actions/AuthService'\nimport { useHistory } from 'react-router-dom'\nimport {Redirect} from 'react-router-dom'\n\nconst mutation = graphql`\n\nmutation LoginMutation($data: LoginInput!){\n  Login(user: $data){\n    accessToken\n    refreshToken\n  }\n}\n\n`\n\nfunction Login(){\n\n  let [loading, setLoading] = React.useState(false)\n  let history = useHistory()\n\n  function onSubmit(data){\n    setLoading(true)\n    CommitRelay({data}, mutation, (res, err) => {\n      setLoading(false)\n      if(err !== null){\n        return ErrorUtil(err)\n      }else{\n        AuthService.login({\n          accessToken: res.Login.accessToken,\n          refreshToken: res.Login.refreshToken,\n          username: data.username\n        })\n        history.push(\"/\")\n      }\n    })\n  }\n  if(AuthService.isUserLoggedIn()){\n    console.log(\"It shoudl br redirected\")\n    //return <Redirect to={'/'} />\n  }\n\n  return (\n    <Form onSubmit={onSubmit}>\n      <TextField label={'Username'} name={'username'} fullWidth required/>\n      <TextField label={'Password'} name={'password'} fullWidth type=\"password\" required/>\n      <LoadingButton type=\"submit\" isLoading={loading}>Submit</LoadingButton>\n    </Form>\n  )\n}\n\nexport default Login;","import Toast from 'izitoast'\n\nexport const toastWarning = (message, others) => Toast.warn({\n  position: \"topRight\",\n  color: \"yellow\",\n  message,\n  ...others,\n})\n\nexport const toastSuccess = (message, others) => Toast.success({\n  position: \"topRight\",\n  color: \"green\",\n  message,\n  ...others,\n})\nexport const toastError = (message, others) => Toast.error({\n  position: \"topRight\",\n  color: \"red\",\n  message,\n  ...others,\n})\nexport const toastInfo = (message, others) => Toast.info({\n  position: \"topRight\",\n  color: \"blue\",\n  message,\n  ...others\n})","\n\nexport default {\n\n  setToken: (accessToken, refreshToken) => {\n    localStorage.setItem(\"auth\", JSON.stringify({accessToken, refreshToken, tokenExpired: false}))\n  },\n\n  isUserLoggedIn: () => {\n    let auth = localStorage.getItem('auth')\n    if(auth === null && auth !== \"\"){\n      return false\n    }\n    try{\n      auth = JSON.parse(auth)\n    }catch(err){\n      return false\n    }\n    if(auth.tokenExpired !==undefined && !auth.tokenExpired){\n      return true\n    }\n    return false\n  },\n\n  logout: () => {\n    localStorage.setItem(\"auth\", JSON.stringify({accessToken: \"\", refreshToken: \"\", tokenExpired: true}))\n  },\n\n  getAccessToken: () => {\n    let auth = localStorage.getItem('auth')\n    if(auth === null){\n      return false\n    }\n\n    try{\n      auth = JSON.parse(auth)\n    }catch(err){\n      return false\n    }\n    if( !auth.tokenExpired ){\n      return auth.accessToken\n    }\n    return false\n  },\n\n  getRefreshToken: () => {\n    let auth = localStorage.getItem('auth')\n    if(auth === null){\n      return false\n    }\n\n    try{\n      auth = JSON.parse(auth)\n    }catch(err){\n      return false\n    }\n    if(!auth.tokenExpired ){\n      return auth.refreshToken\n    }\n    return false\n  }\n\n}","import React from 'react'\nimport Form from 'Components/Form'\nimport { TextField } from '@material-ui/core'\nimport LoadingButton from 'Components/LoadingButton'\nimport graphql from 'babel-plugin-relay/macro'\nimport CommitRelay from 'Components/CommitRelay'\nimport {toastInfo} from 'Components/Toast'\nimport {Redirect} from 'react-router-dom'\nimport AuthService from 'Services/AuthService'\n\nconst mutation = graphql`\n  mutation RegisterMutation($data: UserInput!){\n    Register(user: $data) {\n      user {\n        _id\n      }\n      refreshToken\n      accessToken\n    }\n  }\n`\n\nfunction Register(){\n\n  let [registering, setRegistering] = React.useState(false)\n\n  function onSubmit(data){\n    if(data.phone.toString().length !== 10){\n      return toastInfo(\"Phone number should be 10 characters\")\n    }\n    setRegistering(true)\n    CommitRelay({data}, mutation, responseHandler)\n  }\n\n  function responseHandler(response, errors){\n    setRegistering(false)\n    console.log(response)\n  }\n\n  if(AuthService.isUserLoggedIn()){\n    return <Redirect to={'/'} />\n  }\n\n  return (\n    <Form onSubmit={onSubmit}>\n      <TextField label={'Email'} name=\"username\" type=\"email\" required fullWidth/>\n      <TextField label={'Phone'} type=\"number\" min={10} max={10} required fullWidth name=\"phone\" />\n      <TextField label={'Password'} type={\"password\"} required fullWidth name=\"password\" />\n      <LoadingButton isLoading={registering} type=\"submit\">Register</LoadingButton>\n    </Form>\n  )\n}\n\nexport default Register","\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport List from '@material-ui/core/List'\nimport ListSubheader from '@material-ui/core/ListSubheader'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Divider from '@material-ui/core/Divider'\n//import { createMuiTheme } from '@material-ui/core/styles'\n\n\nconst styles = makeStyles(theme => ({\n  paperStyle: {\n    background: theme.palette.background.paper,\n    position: 'relative',\n    borderRadius: 4,\n    overflow: 'hidden',\n    boxShadow: theme.shadows[1]\n  }\n}))\n\nfunction _List({items, ...props}){\n  const classes = styles()\n  //console.log(createMuiTheme())\n  function divider(con, length, index){\n    if(con && index < length - 1 ){\n      return <Divider />\n    }else{\n      return null\n    }\n  }\n  return (\n    <List className={props.listClass || classes.paperStyle} subheader={<ListSubheader>{props.heading || ''}</ListSubheader>} style={props.style}>\n      {\n        items.map((item, index) => <React.Fragment key={item.id}>\n          <ListItem className={props.itemClass || ''} button={props.button} onClick={() => props.itemClick(item, index)} selected={props.selected.indexOf(item.id) !== -1} classes={{selected: props.activeClass}}>\n            {\n              item.icon && <ListItemIcon>{item.icon}</ListItemIcon>\n            }\n            <ListItemText primary={item.primaryText} secondary={item.secondaryText || ''}/>\n            {\n              item.secondaryIcon && <ListItemSecondaryAction>{item.secondaryIcon}</ListItemSecondaryAction>\n            }\n          </ListItem>\n          { divider(props.divider, items.length, index)}\n          </React.Fragment>\n        )\n      }\n    </List>\n  )\n}\n\n_List.propTypes = {\n  items: PropTypes.array.isRequired,\n  listClass: PropTypes.string,\n  itemClick: PropTypes.func,\n  button: PropTypes.bool,\n  itemClass: PropTypes.string,\n  selected: PropTypes.array,\n  heading: PropTypes.string\n}\n\n_List.defaultProps = {\n  button: false,\n  itemClick: () => {},\n  selected: []\n}\n\nexport default _List","import React from 'react'\nimport {IconButton} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst styles = makeStyles(theme => ({\n  title: {\n    fontSize: 16,\n    paddingLeft: 16,\n    flex: 1,\n    color: \"#212121\"\n  },\n  container: {\n    background: theme.palette.background.paper,\n    boxShadow: theme.shadows[1],\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    width: '100%',\n    zIndex: 99,\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  toolbar: theme.mixins.toolbar,\n  icon: {\n    marginRight: theme.spacing(2)\n  }\n}))\n\nfunction Header(props){\n  const classes = styles()\n\n  return (\n    <React.Fragment>\n    <div className={classes.toolbar+ \" \"+classes.container}>\n      <span className={classes.title}>{props.title}</span>\n      <IconButton onClick={props.onClick} className={classes.icon}>\n        { props.icon }\n      </IconButton>\n    </div>\n    <div className={classes.toolbar}></div>\n    </React.Fragment>\n  )\n}\n\nexport default Header","import React from 'react'\nimport CustomList from 'Components/CustomList'\nimport { useHistory } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Switch from '@material-ui/core/Switch'\nimport { connect } from 'react-redux'\nimport {switchTheme} from 'Store/actions/independent'\nimport Header from 'Components/Header'\nimport AuthService from 'Store/actions/AuthService'\n\nconst styles = makeStyles(theme => ({\n  container: {\n    padding: theme.spacing(1),\n    '& > *' :{\n      marginBottom: theme.spacing(1)\n    }\n  }\n}))\n\nfunction AccountDetails(props){\n\n  const classes = styles()\n  const history = useHistory()\n\n  const items = [\n    {\n      id: 1,\n      primaryText: \"Personal Details\",\n      to: \"/account/details\"\n    },\n    {\n      id: 2,\n      primaryText: \"Transaction history\",\n      to: \"/account/transactions\"\n    },\n    {\n      id: 3,\n      primaryText: \"Tournaments\",\n      to: \"/account/tournaments\"\n    },\n    {\n      id: 4,\n      primaryText: \"Wallet\",\n      to: \"/account/wallet\"\n    },\n    {\n      id: 5,\n      primaryText: \"Logout\",\n      to: \"/account/auth/logout\"\n    },\n    {\n      id: 6,\n      primaryText: \"Set username\",\n      to: \"/account/username\"\n    },\n    {\n      id: 7,\n      primaryText: \"Create Pages\",\n      to: \"/account/create-page\"\n    }\n  ]\n\n  const logoutItems = [\n    {\n      id: 1,\n      primaryText: \"Login\",\n      to: \"/account/auth/login\"\n    },\n    {\n      id: 2,\n      primaryText: \"Register\",\n      to: \"/account/auth/register\"\n    }\n  ]\n\n  const siteDetails = [\n    {\n      id: 201,\n      primaryText: \"About Us\",\n      to: \"/account/about-us\"\n    },\n    {\n      id: 202,\n      primaryText: \"Customer service\",\n      to: \"/account/customer-service\"\n    },\n    {\n      id: 203,\n      primaryText: \"Terms of Service\",\n      to: \"/account/terms-of-service\"\n    },\n    {\n      id: 204,\n      primaryText: \"Switch theme\",\n      secondaryIcon: <Switch onClick={props.switchTheme} checked={props.darkTheme}/>\n    }\n  ]\n\n  function itemClick(item){\n    if(item.id === 100){\n      props.switchTheme()\n      return\n    }\n    if(item.to){\n      history.push(item.to)\n    }\n  }\n\n  return (\n    <div>\n      <div className={classes.container}>\n        <CustomList items={AuthService.isUserLoggedIn() ? items : logoutItems} button divider heading={\"Account actions\"} itemClick={itemClick}/>\n        <CustomList items={siteDetails} button divider heading={\"Site Options\"} itemClick={itemClick}/>\n      </div>\n    </div>\n  )\n\n}\n\nconst mapStateToProps = state => ({\n  darkTheme: state.Independent.darkTheme\n})\n\nconst mapDispatchToProps = dispatch => ({\n  switchTheme: () => dispatch(switchTheme())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountDetails)","import store from 'Store'\r\n\r\nconst TOGGLE_MODAL = \"MODAL::TOGGLE\"\r\nconst TOGGLE_DRAWER = \"DRAWER::TOGGLE\"\r\n\r\nexport const toggleModal = () => ({\r\n  type: TOGGLE_MODAL\r\n})\r\n\r\nexport const setDrawerOpen = (state) => ({\r\n  type: TOGGLE_DRAWER,\r\n  state\r\n})\r\n\r\nexport const switchTheme = () => ({\r\n  type: \"SETTINGS::SWITCH_THEME\"\r\n})\r\n\r\nexport const environment = (env) => store.dispatch({\r\n  type: \"SETTINGS::ENVIRONMENT\",\r\n  env\r\n})","import React from 'react'\nimport {Tooltip, IconButton} from '@material-ui/core'\nimport ArrowBack from '@material-ui/icons/ArrowBack'\nimport { useHistory } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst styles = makeStyles(theme => ({\n  title: {\n    fontSize: 18,\n    paddingLeft: 16\n  },\n  container: {\n    background: theme.palette.background.paper,\n    boxShadow: theme.shadows[1],\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    width: '100%',\n    zIndex: 99,\n    display: \"flex\",\n    alignItems: \"center\",\n    color: \"#fff\",\n    backgroundColor: theme.palette.primary.main\n  },\n  toolbar: theme.mixins.toolbar,\n  icon: {\n    color: \"#fff\"\n  }\n}))\n\nfunction GoBackAppBar(props){\n  let history = useHistory()\n  const classes = styles()\n  function goBack(){\n    history.goBack()\n  }\n\n  return (\n    <React.Fragment>\n    <div className={classes.toolbar+ \" \"+classes.container}>\n      <Tooltip title={props.tooltip || 'Go Back'}>\n        <IconButton onClick={props.onClick || goBack} >\n          <ArrowBack className={classes.icon}/>\n        </IconButton>\n      </Tooltip>\n      <span className={classes.title}>{props.title}</span>\n    </div>\n    <div className={classes.toolbar}></div>\n    </React.Fragment>\n  )\n}\n\nexport default GoBackAppBar","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nconst styles = makeStyles(theme => ({\n  root: {\n    minHeight: 200,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n}))\n\nexport default function Loading(props){\n\n  const classes = styles()\n\n  return (\n    <div className={classes.root}>\n      Fetching data \n      <CircularProgress /> \n    </div>\n  )\n}\n\nLoading.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n  children: PropTypes.node\n}","import React from 'react'\nimport Warning from '@material-ui/icons/Warning'\nimport {makeStyles} from '@material-ui/core/styles'\nimport {red} from '@material-ui/core/colors'\n\nconst styles = makeStyles({\n  container: {height: \"100px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", flexDirection: \"column\"},\n  icon: {\n    color: red[700],\n    fontSize: 56\n  }\n})\n\nfunction ErrorComponent(props) {\n\n  const classes = styles()\n\n  return (\n    <div className={classes.container}>\n      <Warning className={classes.icon}/>\n      Error occured\n    </div>\n  )\n\n}\n\nexport default ErrorComponent","import React from 'react'\nimport { QueryRenderer } from 'react-relay'\nimport environment from 'Services/Environment'\nimport ErrorUtils from 'Services/ErrorUtils'\nimport Loading from './Loading'\nimport Error from './Error'\n\nfunction RenderRelay(_props){\n  return <QueryRenderer \n    environment={environment}\n    render={({error, props}) => {\n      if(error){\n        //console.log(error)\n        ErrorUtils(error)\n        return <Error />\n      }else if(!props){\n        return _props.loading || <Loading isLoading={true}/>\n      }\n      return _props.component(props)\n    }}\n    {..._props}\n  />\n}\n\nexport default RenderRelay","import React from 'react'\nimport { Paper, Grid, Typography } from '@material-ui/core'\nimport { makeStyles }  from '@material-ui/core/styles'\n\nconst styles = makeStyles(theme => ({\n  root: {\n    \n  },\n  letterHolder: {\n    background: \"#efefef\",\n    fontSize: 32,\n    color: \"#212121\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: \"100%\"\n  },\n  textContainer: {\n    padding: theme.spacing(1)\n  },\n  paragraph: {\n    margin: 0\n  }\n}))\n\nfunction TournamentComp(props){\n  \n  const classes = styles()\n\n  return <Paper>\n    <Grid container alignItems={'stretch'}>\n      <Grid item xs={2}>\n        <div className={classes.letterHolder}>{props.title.substr(0, 1)}</div>\n      </Grid>\n      <Grid item xs={10} className={classes.textContainer}>\n        <Typography variant=\"h5\" color=\"textSecondary\">{props.gameId.title}</Typography>\n        <Grid container>\n          <Grid item xs={4}>\n            <p className={classes.paragraph}>Entry Fee</p>\n            {props.entryFee}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  </Paper>\n}\n\nexport default TournamentComp","import React from 'react'\nimport GoBackAppbar from 'Components/GoBackAppbar'\nimport QueryRenderer from 'Components/QueryRenderer'\nimport graphql from 'babel-plugin-relay/macro'\nimport TournamentCard from './Comps/TournamentComp'\nimport { Grid } from '@material-ui/core'\nimport { makeStyles }  from '@material-ui/core/styles'\n\nconst styles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    margin: 0\n  },\n}))\n\nconst query = graphql`\n  query AccountTournamentsQuery {\n    user {\n      registeredTournaments {\n        _id\n        title\n        time\n        entryFee\n        gameId {\n          title\n        }\n      }\n    }\n  }\n`\n\nfunction AccountTournaments(props) {\n  return (\n    <div>\n      <GoBackAppbar title={'Tournaments'} />\n      <QueryRenderer query={query} component={data => <AccountTournamentsComponent {...data}/>}/>\n    </div>\n  )\n}\n\nfunction AccountTournamentsComponent({user, ...props}) {\n  const classes = styles()\n  return <Grid container spacing={2} className={classes.root}>\n    {\n      user.registeredTournaments.map(item => <Grid item xs={12} key={item._id}>\n        <TournamentCard {...item}/>\n      </Grid>)\n    }\n  </Grid>\n}\n\nexport default AccountTournaments","import React from 'react'\nimport GoBackAppbar from 'Components/GoBackAppbar'\n\nfunction PersonalDetails(props){\n  return (\n    <div>\n      <GoBackAppbar title={'Personal Detail'} />\n    </div>\n  )\n}\n\nexport default PersonalDetails","import React from 'react'\nimport GoBackAppbar from 'Components/GoBackAppbar'\n\nfunction Wallet(props){\n  return (\n    <div>\n      <GoBackAppbar title={\"Wallet\"} />\n    </div>\n  )\n}\n\nexport default Wallet","import React from 'react'\nimport GoBackAppbar from 'Components/GoBackAppbar'\nimport QueryRenderer from 'Components/QueryRenderer'\nimport graphql from 'babel-plugin-relay/macro'\n\nfunction Transactions(props) {\n  return (\n    <div>\n      <GoBackAppbar title={'Transactions'} />\n      {/* <QueryRenderer query={query} component={data => <AccountTournamentsComponent {...data}/>}/> */}\n    </div>\n  )\n}\n\nfunction TransactionsComponent(props) {\n  console.log(props)\n  return <div>details</div>\n}\n\nexport default Transactions","import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport AuthService from 'Store/actions/AuthService'\n//import store from 'Store'\n//import {clearRegistered} from 'Store/actions/Tournament'\n\nfunction Logout(props){\n  AuthService.logout()\n  //store.dispatch(clearRegistered())\n  return <Redirect to=\"/account\"/>\n}\n\nexport default Logout","import React from 'react'\nimport GoBackAppBar from 'Components/GoBackAppbar'\n\nfunction AboutUs(){\n  return (\n    <div>\n      <GoBackAppBar title={\"About Us\"} />\n    </div>\n  )\n}\n\nexport default AboutUs","import React from 'react'\nimport GoBackAppBar from 'Components/GoBackAppbar'\n\nfunction TermsOfService(){\n  return (\n    <div>\n      <GoBackAppBar title={\"Terms of Service\"} />\n    </div>\n  )\n}\n\nexport default TermsOfService","import React from 'react'\nimport GoBackAppBar from 'Components/GoBackAppbar'\n\nfunction CustomerService(){\n  return (\n    <div>\n      <GoBackAppBar title={\"Customer Service\"} />\n    </div>\n  )\n}\n\nexport default CustomerService","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport Login from './Auth/Login'\nimport Register from './Auth/Register'\nimport AccountDetails from './AccountDetails'\nimport Tournaments from './AccountDetails/AccountTournaments'\nimport PersonalDetails from './AccountDetails/PersonalDetails'\nimport Wallet from './AccountDetails/Wallet'\nimport Transactions from './AccountDetails/Transactions'\nimport Logout from './Auth/Logout'\nimport AboutUs from './AccountDetails/AboutUs'\nimport TermsOfService from './AccountDetails/TermsOfService'\nimport CustomerService from './AccountDetails/CustomerService'\n\nfunction Account(){\n  return(\n    <Switch>\n      <Route path={'/account/auth/login'} component={Login} />\n      <Route path={'/account/auth/register'} component={Register} />\n      <Route path={'/account/auth/logout'} component={Logout} />\n      <Route path=\"/account/tournaments\" component={Tournaments} />\n      <Route path={\"/account/details\"} component={PersonalDetails} />\n      <Route path={\"/account/wallet\"} component={Wallet} />\n      <Route path={\"/account/transactions\"} component={Transactions} />\n      <Route path={\"/account/about-us\"} component={AboutUs} />\n      <Route path={'/account/terms-of-service'} component={TermsOfService} />\n      <Route path={'/account/customer-service'} component={CustomerService} />\n      <Route path={'/account'} component={AccountDetails} />\n    </Switch>\n  )\n}\n\nexport default Account","const PAGE = \"ADD_TOURNAMENT::\"\r\n\r\nexport const setGame = game => ({\r\n  type: PAGE+\"SET_GAME\",\r\n  game\r\n})\r\n\r\nexport const setCustomFields = (name, value) => ({\r\n  type: PAGE+\"SET_CUSTOM_FIELDS\",\r\n  name,\r\n  value\r\n})\r\n\r\nexport const setPrizes = (data) => ({\r\n  type: PAGE+\"SET_PRIZES\",\r\n  data\r\n})\r\n\r\nexport const resetData = () => ({\r\n  type: PAGE+\"RESET_DATA\"\r\n})\r\n\r\nexport const addGameSpecificData = (data) => ({\r\n  type: PAGE+\"ADD_GAME_DATA\",\r\n  data\r\n})  \r\n\r\nexport const setMetrics = metrics => ({\r\n  type: PAGE+\"SET_METRICS\",\r\n  metrics\r\n})","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setGame } from 'Store/actions/AddTournament'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport RenderRelay from 'Components/QueryRenderer'\r\nimport CustomList from 'Components/CustomList'\r\nimport graphql from 'babel-plugin-relay/macro'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(1)\r\n  },\r\n}));\r\n\r\n\r\nfunction GameOptions(props){\r\n\r\n  //console.log(props)\r\n\r\n  if(props.games === null || props.games === undefined) {\r\n    return <div>Games not found</div>\r\n  }\r\n\r\n  function itemClick(item){\r\n    props.setGame(item)\r\n    props.handleNext()\r\n  }\r\n  //console.log(props.games)\r\n\r\n  let items = props.games.map(item => ({id: item._id, primaryText: item.title, ...item}))\r\n  return (\r\n    <div>\r\n      <div style={{padding: 8}}>\r\n        <CustomList items={items} button heading={'Select a game'} itemClick={itemClick}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setGame: (data) => dispatch(setGame(data))\r\n})\r\n\r\nconst Gamee =  connect(null, mapDispatchToProps)(GameOptions)\r\n\r\nexport default function Gameee(props){\r\n  return (\r\n    <RenderRelay \r\n      query={graphql`\r\n        query GameOptionsQuery {\r\n          games {\r\n            title\r\n            _id\r\n            id\r\n            image\r\n            totalTournaments\r\n          }\r\n        }\r\n      `}\r\n      component={(data) => <Gamee {...data} {...props}/>}\r\n    />\r\n  )\r\n}","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction Input(props){\r\n  return (\r\n    <TextField fullWidth onChange={props.onChange} {...props}/>\r\n  )\r\n}\r\n\r\nInput.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string,\r\n  value: PropTypes.string\r\n}\r\n\r\nexport default Input","import React from 'react'\r\nimport { FormControl, InputLabel, Select, MenuItem } from '@material-ui/core'\r\nimport PropTypes from 'prop-types'\r\n\r\n//option [{label, value}]\r\n\r\nfunction CustomSelect(props) {\r\n  let [value, setValue] = React.useState(props.defaultValue|| \"\")\r\n  return (\r\n    <FormControl fullWidth>\r\n      <InputLabel>{props.label}</InputLabel>\r\n      <Select\r\n        labelId=\"demo-simple-select-label\"\r\n        id=\"demo-simple-select\"\r\n        value={value}\r\n        name={props.name}\r\n        onChange={(e) => {setValue(e.target.value); props.onChange && props.onChange(e)}}\r\n        fullWidth\r\n        inputRef={props.inputRef}\r\n      >\r\n        {\r\n          props.options.map(option => {\r\n            if(option.value !== undefined){\r\n              return <MenuItem key={option.value} value={option.value}>{option.label}</MenuItem>\r\n            } else {\r\n              return <MenuItem key={option} value={option}>{option}</MenuItem>\r\n            }\r\n          })\r\n        }\r\n      </Select>\r\n    </FormControl>\r\n  )\r\n}\r\n\r\nCustomSelect.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired\r\n}\r\n\r\nexport default CustomSelect","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {FormControl, InputLabel, Select, Checkbox, MenuItem, ListItemText, Input, Chip} from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst styles = makeStyles({\r\n  chips: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n    marginLeft: 4,\r\n  },\r\n})\r\n\r\nfunction MultiSelect(props){\r\n  let a = []\r\n  if(props.defaultValue !== undefined){\r\n    a = props.defaultValue.split(\",\")\r\n  }else if(props.value !== undefined){\r\n    a = props.value.split(\",\")\r\n  }\r\n  //console.log(a, props.defaultValue, props.value)\r\n  let [value, setValue] = React.useState(a)\r\n  const classes = styles()\r\n  const onChange = (event) => {\r\n    setValue(event.target.value);\r\n    props.onChange(event.target.value)\r\n  };\r\n  return (\r\n    <FormControl fullWidth>\r\n      <InputLabel id={props.labelId}>{props.label}</InputLabel>\r\n      <Select\r\n        labelId={props.labelId || \"Multiple select\"}\r\n          id={props.id}\r\n          multiple\r\n          value={value}\r\n          onChange={onChange}\r\n          input={<Input name={props.name} />}\r\n          renderValue={(selected) => (\r\n            <div className={classes.chips}>\r\n              {selected.map((value) => (\r\n                <Chip key={value} label={value} className={classes.chip}/>\r\n              ))}\r\n            </div>\r\n          )}\r\n        >\r\n          {props.options.map((option) => (\r\n            <MenuItem key={option} value={option}>\r\n              <Checkbox checked={value.indexOf(option) > -1} />\r\n              <ListItemText primary={option} />\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n  )\r\n}\r\n\r\nMultiSelect.propTypes = {\r\n  id: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  options: PropTypes.array.isRequired,\r\n  labelId: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired\r\n}\r\n\r\nexport default MultiSelect","import React from 'react'\r\nimport CheckBox from '@material-ui/core/Checkbox'\r\n\r\nfunction Check({label, ...props}) {\r\n\r\n  // let [checked, setChecked] = React.useState(props.defaultValue === \"checked\" || props.value === \"checked\")\r\n\r\n  // console.log(\"Cleicked\")\r\n\r\n  return (\r\n    <div>\r\n      <CheckBox onChange={props.onChange} {...props}/>\r\n      {label}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Check;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport TextField from './TextField'\r\nimport Select from './Select'\r\nimport MultipleSelect from './MultipleSelect'\r\nimport Checkbox from './Checkbox'\r\nimport { Typography } from '@material-ui/core'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\n\r\nconst styles = makeStyles(theme => ({\r\n  'root': {\r\n    '& > *' : {\r\n      marginBottom: theme.spacing(1)\r\n    }\r\n  }\r\n}))\r\n\r\n//textfield {name, type, label, value}\r\n//select {name, type, label, options}\r\n//multipleSelect {name, type, label, options}\r\n\r\nfunction FormBuilder(props) {\r\n\r\n  const classes = styles()\r\n\r\n  function MapItems({item}) {\r\n    switch(item.type){\r\n      case 'checkboxGroup':\r\n        return <div>\r\n          <Typography variant=\"h4\">{item.title}</Typography>\r\n          {\r\n            item.items.map((checkbox, index) => <Checkbox key={index} name={item.title+\"_\"+checkbox} onChange={props.onChange} {...checkbox}/>)\r\n          }\r\n        </div>\r\n      case 'checkbox':\r\n        return <Checkbox onChange={props.onChange} {...item}/>\r\n      case 'select':\r\n        return <Select onChange={props.onChange} {...item}/>\r\n      case 'multipleSelect':\r\n        return <MultipleSelect onChange={props.onChange} {...item}/>\r\n      default:\r\n        return <TextField onChange={props.onChange} {...item}/>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root} id={props.id}>\r\n      {\r\n        props.fields.map((item, index) => {\r\n          return <MapItems key={item.name} item={item}/>\r\n        })\r\n      }  \r\n    </div>\r\n  )\r\n}\r\n\r\nFormBuilder.defaultProps = {\r\n  onChange: () => {},\r\n  fields: []\r\n}\r\n\r\nFormBuilder.propTypes = {\r\n  onChange: PropTypes.func,\r\n  fields: PropTypes.array.isRequired\r\n}\r\n\r\nexport default FormBuilder","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport FormBuilder from 'Layout/FormBuilder'\r\nimport {Typography, Paper, Button, TextField, Checkbox} from '@material-ui/core'\r\nimport {addGameSpecificData, setMetrics} from 'Store/actions/AddTournament'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { snackbarError } from 'Store/actions/snackbar'\r\nimport graphql from 'babel-plugin-relay/macro'\r\nimport QueryRenderer from 'Components/QueryRenderer'\r\nimport { toastError } from 'Components/Toast'\r\n\r\nconst styles = makeStyles(theme => ({\r\n  container: {\r\n    padding: theme.spacing(1)\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1)\r\n  },\r\n  row: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\"\r\n  }\r\n}))\r\n\r\n\r\nconst gameSpecificQuery = graphql`\r\nquery GameSpecificQuery($title: String!){\r\n  specificGame(title: $title) {\r\n    customFields {\r\n      label\r\n      type\r\n      options\r\n    }\r\n    metrics\r\n  }\r\n}\r\n`\r\n\r\nfunction GameSpecific(props) {\r\n  const classes = styles()\r\n  if(props.game._id === undefined){\r\n    toastError(\"Set a game first\")\r\n    return (<div></div>)\r\n  }\r\n\r\n  function handleChange(e){\r\n    //props.setCustomFields(e.target.name, e.target.value)\r\n  }\r\n\r\n  function moveForward() {\r\n    let el = document.querySelector(\"#gameDetails\")\r\n    if(!el){\r\n      toastError(\"Root element not found. Unable to read details. Cannot proceed\")\r\n      return\r\n    }\r\n    let inputs = el.querySelectorAll(\"[name]\")\r\n    let data = []\r\n    //let formData = new FormData()\r\n    for(let i = 0; i < inputs.length; i++){\r\n      if(inputs[i].getAttribute(\"type\") === \"checkbox\") {\r\n        data.push({\r\n          label: inputs[i].getAttribute(\"name\"),\r\n          value: inputs[i].checked ? \"Yes\" : \"No\"\r\n        })\r\n      }else {\r\n        data.push({\r\n          label: inputs[i].getAttribute(\"name\"),\r\n          value: inputs[i].value \r\n        })\r\n      }\r\n      //formData.append(inputs[i].getAttribute(\"name\"), inputs[i].value)\r\n    }\r\n    props.addGameSpecificData(data)\r\n\r\n    //metrics calculation\r\n    el = document.querySelector(\"#metrics\")\r\n    if(!el){\r\n      toastError(\"Metrics not found. Unable to read details. Cannot proceed\")\r\n      return\r\n    }\r\n    inputs = el.querySelectorAll(\"[name]\")\r\n    let metrics = []\r\n    for(let i = 0; i < inputs.length; i++){\r\n      let name = inputs[i].getAttribute(\"name\")\r\n      if(name.indexOf(\"dynamic\") !== -1){\r\n        continue\r\n      }\r\n      metrics.push({\r\n        label: name,\r\n        points: inputs[i].value === \"\" ? 0 : +inputs[i].value,\r\n        dynamic: el.querySelector(`[name=${name}_dynamic]`).checked === true ? 1 : 0\r\n      })\r\n    }\r\n    props.setMetrics(metrics)\r\n    //console.log(metrics)\r\n    props.handleNext()\r\n  }\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Paper className={classes.paper}>\r\n        <Typography>All the custom fields available for {props.game.title}</Typography>\r\n        <div>\r\n          <QueryRenderer \r\n            query={gameSpecificQuery}\r\n            variables={{title: props.game.title}}\r\n            component={(data) => <CustomFields {...data} handleChange={handleChange} customFields={props.customFields}/>}\r\n          />\r\n        </div>\r\n      </Paper>\r\n      <div style={{padding: 8}}>\r\n        <Button\r\n          onClick={props.handleBack}\r\n          >\r\n          Back\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={moveForward} type={'button'}>\r\n          next\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nlet Row = props => <div className={props.classes.row}>\r\n  <span style={{flex: 1}}> <TextField name={props.name} type=\"number\" label={props.label} fullWidth helperText={props.helperText}/></span>\r\n  <span><Checkbox name={props.name+\"_dynamic\"}/>Dynamic</span>\r\n</div>\r\n\r\nfunction getValue(name, data) {\r\n  for(let i=0; i< data.length; i++){\r\n    if(data[i].label === name){\r\n      return data[i].value\r\n    }\r\n  }\r\n}\r\n\r\nfunction CustomFields(props){\r\n  const classes = styles()\r\n  let customFields = props.specificGame.customFields.map(item => (\r\n    {\r\n      ...item, \r\n      name: item.label, \r\n      defaultValue: getValue(item.label, props.customFields)\r\n    }))\r\n  let metrics = props.specificGame.metrics.map(item => ({\r\n    label: item,\r\n    name: item,\r\n    type: \"number\",\r\n    helperText: \"Enter -1 if it won't affect total score.\"\r\n  }))\r\n  //console.log(customFields)\r\n  return (\r\n    <div>\r\n      <FormBuilder fields={customFields} id={\"gameDetails\"}/>\r\n      <Typography variant=\"h5\" color=\"textSecondary\">How players will be scored</Typography>\r\n      <div id=\"metrics\">\r\n      {metrics.map(item => <Row {...item} key={item.name} classes={classes}/>)}\r\n      <Typography color=\"textSecondary\" variant=\"body2\">\r\n      Enable dynamic calculation to distribute points in group exponentialy. Like a player with higher position will earn higher points compared to lower ones.\r\n      </Typography>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  customFields: state.AddTournament.customFields,\r\n  game: state.AddTournament.game\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addGameSpecificData: (data) => dispatch(addGameSpecificData(data)),\r\n  snackbarError: msg => dispatch(snackbarError(msg)),\r\n  setMetrics: (data) => dispatch(setMetrics(data))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GameSpecific)","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport Form from 'Components/Form'\r\nimport { connect } from 'react-redux'\r\nimport { resetData } from 'Store/actions/AddTournament'\r\nimport { snackbarSuccess } from 'Store/actions/snackbar'\r\nimport { useHistory } from 'react-router-dom'\r\nimport graphql from 'babel-plugin-relay/macro'\r\nimport CommitRelay from 'Components/CommitRelay'\r\nimport { toastSuccess } from 'Components/Toast'\r\n\r\nconst query = graphql`\r\n  mutation TournamentBasicMutation($data: TournamentInput) {\r\n    addTournament(tournamentFields: $data){\r\n      tournament {\r\n        _id\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\n\r\nfunction TournamentBasic(props) {\r\n\r\n  let history = useHistory()\r\n\r\n  function onSubmit(data){\r\n    let prizes = props.tournament.prizes;\r\n    let customFields = props.tournament.customFields\r\n    let game = props.tournament.game\r\n    if(!prizes || prizes.length === 0){\r\n      if(!window.confirm(\"Are you sure about a tournament without prizes? If you forgot to add. It's on second screen\")){\r\n        return\r\n      }\r\n    }\r\n    let inputPrizes = prizes === undefined ? [] : prizes.map(p => ({prize: +p.prize, position: p.position}))\r\n    // for(let key in customFields){\r\n    //   customFieldsInput.push({\r\n    //     label: key,\r\n    //     value: customFields[key]\r\n    //   })\r\n    // }\r\n    //console.log(prizes, customFields, game, data)\r\n    CommitRelay({\r\n      data: {\r\n        title: data.title,\r\n        description: data.description,\r\n        time: data.time,\r\n        entryFee: +data.entryFee,\r\n        maxPlayers: +data.maxPlayers,\r\n        gameId: game._id,\r\n        image: data.image,\r\n        customFields: customFields,\r\n        prizes: inputPrizes,\r\n        metricsPoints: props.tournament.metrics,\r\n        maxGroups: +data.maxGroups\r\n      }\r\n    }, query, (response, errors) => {\r\n      if(!errors){\r\n        toastSuccess(\"Tournament created succefully\")\r\n        history.push(\"/tournaments\")\r\n      }\r\n    })\r\n  }\r\n  let time = new Date().toISOString().substr(0, 16)\r\n  console.log(time)\r\n  //date.setDate(+date.getDate() + 1)\r\n  //console.log(date.getMonth(), date.getDate())\r\n  //let time = date.getFullYear()+\"-\"+(date.getMonth() < 10 ? \"0\"+date.getMonth()  : date.getMonth())+\"-\"+(date.getDate() < 10 ? \"0\"+date.getDate()  : date.getDate())\r\n  //console.log(time, props.tournament.game.image)\r\n  return (\r\n    <div style={{padding: 8}}>\r\n      <Form onSubmit={onSubmit}>\r\n        <TextField label={'Tournament title'} name=\"title\" fullWidth required defaultValue={props.tournament.game.title+\" Tournament #\"+props.tournament.game.totalTournaments} helperText={'Default values are cool. But, rename it if you can'}/>\r\n        <TextField type=\"datetime-local\" name=\"time\" fullWidth label=\"Time of Tournament Format(mm/dd/yyyy)\" defaultValue={time} required/>\r\n        <TextField label={'Entry Fee'}  fullWidth name=\"entryFee\" type=\"number\" required/>\r\n        <TextField type=\"number\" name=\"maxPlayers\" label={'Max Participants'} fullWidth type=\"number\" required/>\r\n        <TextField name=\"image\" fullWidth label={\"Image URL\"} defaultValue={props.tournament.game.image+\" \"}/>\r\n        <TextField type=\"number\" name=\"maxGroups\" fullWidth label={\"Max groups that could be formed\"} helperText={\"If no grouping enter same number as max players\"} required/>\r\n        <TextField label={'Tournament Description'} fullWidth multiline rows={5} name=\"description\" helperText={\"Add things like rules or anything specific\"} required/>\r\n        <div style={{padding: 8}}>\r\n          <Button\r\n            onClick={props.handleBack}\r\n            >\r\n            Back\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"primary\" type={'submit'}>\r\n            Submit\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  tournament: state.AddTournament\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  resetData: () => dispatch(resetData()),\r\n  snackbarSuccess: msg => dispatch(snackbarSuccess(msg))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TournamentBasic)","import React from 'react';\nimport MaterialTable from 'material-table';\nimport { forwardRef } from 'react';\n\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n  };\n\nexport default function CustomFields(props) {\n\n  return (\n    <MaterialTable\n      title={props.title || \"Editable Table\"}\n      columns={props.columns}\n      data={props.tableData}\n      icons={tableIcons}\n      editable={{\n        onRowAdd: (newData) =>\n          new Promise((resolve) => {\n            setTimeout(() => {\n              resolve();\n              props.getTableData([...props.tableData, newData], newData, \"ADD\")\n              //return { ...prevState, data };\n            }, 600);\n          }),\n        onRowUpdate: (newData, oldData) =>\n          new Promise((resolve) => {\n            setTimeout(() => {\n              resolve();\n              if (oldData) {\n                  let data = [...props.tableData];\n                  data[data.indexOf(oldData)] = newData;\n                  props.getTableData(data, newData, \"EDIT\", oldData)\n                  //return { ...prevState, data };\n                \n              }\n            }, 600);\n          }),\n        onRowDelete: (oldData) =>\n          new Promise((resolve) => {\n            setTimeout(() => {\n              resolve();\n              let data = [...props.tableData];\n              data.splice(data.indexOf(oldData), 1);\n              props.getTableData(data, oldData, \"DELETE\")\n                //return { ...prevState, data };\n            }, 600);\n          }),\n      }}\n    />\n  );\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport CustomFields from 'Components/MaterialTable'\r\nimport { setPrizes } from 'Store/actions/AddTournament'\r\nimport Button from '@material-ui/core/Button'\r\nimport Box from '@material-ui/core/Box'\r\n\r\nfunction Prizes(props){\r\n\r\n  let [tableData, setTableData] = React.useState(props.prizes || [])\r\n\r\n  function handleData(data){\r\n    setTableData(data)\r\n  }\r\n\r\n  // function handleData(data){\r\n  //   props.setPrizes(data)\r\n  // }\r\n\r\n  function moveNext(){\r\n    props.setPrizes(tableData)\r\n    props.handleNext()\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Box p={1}>\r\n        <CustomFields columns={[\r\n          {title: \"Position\", field: \"position\"},\r\n          {title: \"Prize\", field: \"prize\", type:\"currency\"}\r\n        ]} title={\"Game position and prizes\"} tableData={tableData} getTableData={handleData}/>\r\n      </Box>\r\n      <Box p={1}>\r\n        <Button\r\n          onClick={props.handleBack}>\r\n            Back\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={moveNext} type={'button'}>\r\n          next\r\n        </Button>\r\n      </Box>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  prizes: state.AddTournament.prizes\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setPrizes : data => dispatch(setPrizes(data))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Prizes);","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport GameOptions from './Add/GameOptions'\r\nimport GameSpecific from './Add/GameSpecific'\r\nimport TournamentBasic from './Add/TournamentBasic'\r\nimport Prizes from './Add/PrizesTable'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Select Game', 'Custom fields',  'Prizes', 'Tournament details'];\r\n}\r\n\r\nexport default function AddTournament() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = getSteps();\r\n\r\n  const handleNext = () => {\r\n    //console.log(activeStep)\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    //console.log(\"Active step\", activeStep)\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  function getStepContent(stepIndex) {\r\n    //console.log(stepIndex)\r\n    switch (stepIndex) {\r\n      case 0:\r\n        return <GameOptions handleNext={handleNext}/>;\r\n      case 1:\r\n        return <GameSpecific handleNext={handleNext} handleBack={handleBack}/>;\r\n      case 2:\r\n        return <Prizes handleNext={handleNext} handleBack={handleBack}/>\r\n      case 3:\r\n        return <TournamentBasic handleNext={handleNext} handleBack={handleBack}/>;\r\n      default:\r\n        return 'Unknown stepIndex';\r\n    }\r\n  }\r\n\r\n  //console.log(\"Normal\", activeStep)\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={activeStep} alternativeLabel>\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <div>\r\n        {getStepContent(activeStep)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import graphql from 'babel-plugin-relay/macro'\n\nexport default  graphql`\nmutation DeleteTournamentMutation($id: ID!){\n  deleteTournament(id: $id){\n    _id\n  }\n}\n`","import React from 'react'\r\nimport { IconButton } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport CustomList from 'Components/CustomList'\r\nimport Delete from '@material-ui/icons/Delete'\r\nimport CommitRelay from 'Components/CommitRelay'\r\nimport { toastSuccess } from 'Components/Toast'\r\nimport mutation from './DeleteTournament'\r\nimport {createFragmentContainer} from 'react-relay'\r\nimport graphql from 'babel-plugin-relay/macro'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst styles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(1)\r\n  },\r\n  media: {\r\n    minHeight: 240,\r\n  },\r\n  actionArea: {\r\n    padding: theme.spacing(1),\r\n  },\r\n  textContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  title: {\r\n    padding: theme.spacing(1)\r\n  }\r\n}))\r\n\r\nfunction makeDate(text){\r\n  //2020-02-24T09:19:13.741Z\r\n  let a = new Date(+text).toString()\r\n  //console.log(a)\r\n  return  a.substr(4, 11)+\" at \"+a.substr(16, 5)\r\n}\r\n\r\n\r\nfunction Tournaments(props){\r\n\r\n  const classes = styles()\r\n  const history = useHistory()\r\n  //console.log(props)\r\n  if(!props.tournament){\r\n    return <center>No Tournament avaibale</center>\r\n  }\r\n\r\n  let items = props.tournament.map(item => ({\r\n    id: item._id,\r\n    primaryText: item.gameId.title+\" - \"+item.title,\r\n    secondaryText: makeDate(item.time),\r\n    _id: item._id,\r\n    secondaryIcon: <IconButton onClick={() => deleteItem(item._id)}><Delete /></IconButton>\r\n  }))\r\n\r\n  function itemClick(item){\r\n    //console.log(item)\r\n    history.push(\"/tournaments/\"+item.id)\r\n  }\r\n\r\n  function deleteItem(id) {\r\n    if(!window.confirm(\"Do you wish to delete\")){\r\n      return\r\n    }\r\n    CommitRelay({id}, mutation, (response, errors) => {\r\n      if(!errors){\r\n        toastSuccess(\"Item deleted\")\r\n      }\r\n    }, {\r\n      updater: (store) => {\r\n        store.delete(id)\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CustomList items={items} button divider heading={'Available tournments'} itemClick={itemClick}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default createFragmentContainer(Tournaments, {\r\n  tournament: graphql`\r\n    fragment Tournaments_tournament on Tournament @relay(plural: true){\r\n      _id\r\n      title\r\n      totalRegistered\r\n      time\r\n      gameId {\r\n        title\r\n      }\r\n    }\r\n  `\r\n})","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Add from '@material-ui/icons/Add'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nconst styles = makeStyles(theme => ({\n  root: {\n    background: theme.palette.secondary.main,\n    boxShadow: theme.shadows[2],\n    height: 48,\n    width: 48,\n    borderRadius: '100%',\n    position: 'fixed',\n    right: 32,\n    bottom: 32,\n    zIndex: 100\n  },\n  button: {\n    color: '#fff'\n  }\n}))\n\nexport default function Fab(props) {\n  const classes = styles()\n  return (\n    <div className={classes.root} style={{position: props.position || 'fixed'}}>\n      <Tooltip title={props.title || 'Add'}>\n        <IconButton className={classes.button} onClick={props.onClick}>\n          <Add/>\n        </IconButton>\n      </Tooltip>\n    </div>\n  )\n}\n","import React from 'react'\r\nimport { Grid } from '@material-ui/core'\r\nimport { useHistory } from 'react-router-dom'\r\nimport View from './View/Tournaments'\r\nimport Header from 'Components/Header'\r\nimport Add from '@material-ui/icons/Add'\r\nimport QueryRenderer from 'Components/QueryRenderer'\r\nimport graphql from 'babel-plugin-relay/macro'\r\nimport Fab from 'Components/Fab'\r\n\r\nconst query = graphql`\r\n  query ViewTournamentsQuery{\r\n    tournament(past: \"a\", pagination: {offset: 0, limit: 30}){\r\n      ...Tournaments_tournament\r\n    }\r\n  }\r\n`\r\n\r\nfunction ViewTournaments(props){\r\n  const history = useHistory()\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container>\r\n        <Grid item xs={12}>   \r\n          <QueryRenderer \r\n          query={query}\r\n          component={data => <View {...data} />}/>\r\n        </Grid>\r\n        <Fab onClick={() => history.push('/tournaments/add')}/>\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ViewTournaments","import React from 'react'\nimport Table from '@material-ui/core/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n//import { Table, TableHead, TableCell, TableBody, TableRow } from '@material-ui/core'\n\nexport default function _Table(props) {\n  return (\n    <Table>\n      <Head heading={props.heading} headerStyle={props.headerStyle}/>      \n      <Body body={props.body} />\n    </Table>\n  )\n}\n\nexport function Head(props) {\n  return (\n    <TableHead>\n      <TableRow className={props.headerStyle}>\n        {\n          props.heading.map((item, index) => \n            <TableCell key={index} className={props.headerStyle}> {item} </TableCell>\n          )\n        }\n      </TableRow>\n    </TableHead>\n  )\n}\n\nexport function Body(props) {\n  return (\n    <TableBody>\n      {\n        props.body.map((row, index) => \n          <Row key={index} row={row} rowStyle={props.rowStyle}/>\n        )\n      }\n    </TableBody>\n  )\n}\n\nexport function Row(props) {\n  return (\n    <TableRow className={props.rowStyle}>\n      {\n        props.row.map((column, index) => \n          <TableCell key={index}>{column}</TableCell>\n        )\n      }\n    </TableRow>\n  )\n}","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport {Paper, Grid, Box, LinearProgress, Typography, Button, Divider} from '@material-ui/core'\n\nconst styles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(1)\n  },\n  textHolder: {\n    padding: theme.spacing(1)\n  },\n  time: {\n    display: \"block\",\n    padding: \"4px 16px\",\n    backgroundColor: theme.palette.primary.main,\n    color: \"#fff\",\n    textAlign: \"center\"\n  },\n  image: {\n    height: theme.spacing(7),\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\"\n  }\n}))\n\nexport function LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography variant=\"body2\" color=\"textSecondary\">{props.label}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nfunction TournamentCard(props){\n\n  const classes = styles()\n\n  return (\n    <div className={classes.root}>\n      <Paper>\n        <Grid container alignItems={'center'} justify={'center'}>\n          <span className={classes.time}>Jun 27, 9:00 PM</span>\n        </Grid>\n        <Grid container className={classes.textHolder}>\n          <Grid item xs={2}>\n            <div className={classes.image} style={{backgroundImage: 'url(\"https://pngimg.com/uploads/pubg/pubg_PNG27.png\")'}}>\n            </div>\n          </Grid>\n          <Grid item xs={10}>\n            <Typography variant=\"body1\" color=\"textPrimary\">Pubg Tournament</Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <LinearProgressWithLabel value={12} color=\"secondary\"/>\n          </Grid>\n        </Grid>\n        <Divider />\n        <Grid container className={classes.textHolder} justify={'space-between'}>\n          <Grid item> </Grid>\n          <Grid item>\n            <Button variant=\"contained\" color=\"secondary\" size=\"small\">Join ₹10</Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  )\n}\n\nexport default TournamentCard","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Divider from '@material-ui/core/Divider'\nimport Button from '@material-ui/core/Button'\n\nexport default function Modal(props){\n  if(!props.open) {\n    return null\n  }\n  return(\n    <Dialog\n      open={props.open}\n      onClose={props.handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n      className={props.className}\n      fullScreen={props.fullScreen}\n    >\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          {props.description}\n        </DialogContentText>\n        {props.children}\n      </DialogContent>\n      <Divider />\n      <DialogActions>\n        <Button onClick={props.handleClose} color=\"primary\">\n          Close\n        </Button>\n        <Button onClick={props.handleSubmit} color=\"primary\" autoFocus variant=\"contained\">\n          Submit\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )  \n}","import React from 'react'\nimport Modal from 'Components/Modal'\nimport {Button} from '@material-ui/core'\nimport { createContainer } from \"unstated-next\"\nimport MaterialTable from 'Components/MaterialTable'\nimport CommitRelay from 'Components/CommitRelay'\nimport graphql from 'babel-plugin-relay/macro'\nimport {toastSuccess} from 'Components/Toast'\n\nconst mutation = graphql`\n  mutation CredentialsModalMutation($data: UpdateCredentialsInput!){\n    updateCredentials(data: $data) {\n      tournament {\n        _id\n        credentials{\n          label\n          value\n        }\n      }\n    }\n  }\n`\n\nfunction useModal(initialState = {open: false}) {\n  let [modal, setModal] = React.useState(initialState)\n  let openModal = () => setModal({open: true})\n  let closeModal = () => setModal({open: false})\n  return {modal, openModal, closeModal}\n}\n\nexport const ModalState  = createContainer(useModal)\n\nfunction CredentailsModal(props) {\n  \n  let [tableData, setTableData] = React.useState([])\n  let {modal, openModal, closeModal} = ModalState.useContainer()\n  function handleTableData(data){\n    setTableData(data)\n  }\n\n  function handleSubmit(){\n    console.log(tableData)\n    let data = {id: props.id, credentials: tableData.map(item => ({label: item.label, value: item.value}))}\n    CommitRelay({data}, mutation, (response, errors) => {\n      if(!errors){\n        toastSuccess(\"Updated credentials\")\n      }\n    })\n  }\n\n  return (\n    <React.Fragment>\n        <Button variant=\"contained\" color=\"primary\" onClick={() => openModal()}>Add Credentials</Button>\n        <Modal open={modal.open} title={'Add Game credentials'} handleClose={() => closeModal()} handleSubmit={handleSubmit}>\n          <MaterialTable title=\"Enter details\" columns={[\n            {title: \"Label\", field: \"label\"},\n            {title: \"Value\", field: \"value\"}\n          ]} tableData={tableData} getTableData={handleTableData}/>\n        </Modal>\n    </React.Fragment>\n  )\n}\n\nexport default CredentailsModal","import React from 'react'\nimport { TextField } from '@material-ui/core'\nimport Button from 'Components/LoadingButton'\nimport CommitRelay from 'Components/CommitRelay'\nimport graphql from 'babel-plugin-relay/macro'\nimport { snackbarInfo, snackbarError, snackbarSuccess } from 'Store/actions/snackbar'\n\nconst mutation = graphql`\n  mutation LiveStreamUpdateMutation($links: String!, $id: ID!){\n    addLiveStreamUrl(links: $links, id: $id) {\n      _id\n      liveStream\n    }\n  }\n`\n\nfunction LiveStreamUpdate(props){\n\n  let [value, setValue] = React.useState(props.liveStream)\n\n  function updateStreamURL(){\n    if(value.length <= 10){\n      return snackbarInfo(\"Link can't be of length < 10\")\n    }\n    CommitRelay({id: props.id, links: value}, mutation, (response, error) => {\n      console.log(error, response)\n      if(error) {\n        snackbarError(\"Unable to update links\")\n      }else {\n        snackbarSuccess(\"Stream url updated\")\n      }\n    })\n  }\n\n  return (\n    <div>\n      <TextField label=\"Live Stream urls\" value={value} name=\"liveStrem\" onChange={e => setValue(e.target.value)} helperText={\"If multiple enter comma seperated without space\"} fullWidth/>\n      <Button isLoading={false} onClick={updateStreamURL}>Update Stream url</Button>\n    </div>\n  )\n}\n\nexport default LiveStreamUpdate","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport {Grid, Paper, Typography, Button, TextField}  from '@material-ui/core'\nimport CustomList from 'Components/CustomList'\nimport Table from 'Components/Table'\nimport {LinearProgressWithLabel} from './Comps/NewTournamentCard'\nimport {Link} from 'react-router-dom'\nimport Modal, {ModalState} from './CredentialsModal'\nimport LiveStreamUpdate from './LiveStreamUpdate'\n\nconst styles = makeStyles(theme => ({\n  container: {\n    padding: theme.spacing(1)\n  },\n  imageBackground: {\n    height: 180,\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: \"center center\"\n  },\n  quickAction: {\n    display: 'flex',\n    padding: theme.spacing(1),\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  spanClass: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  buttonContainer: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  overview: {\n    '&> *': {\n      marginBottom: theme.spacing(1)\n    }\n  },\n  title: {\n    paddingTop: theme.spacing(2),\n    paddingLeft: theme.spacing(2)\n  }\n}))\n\nfunction getPreparedData(tournament){\n  let prizes = [[]]\n  let players = [[]]\n  let items = []\n  let credentials = []\n  if(tournament.prizes){\n    prizes = tournament.prizes.map(item => [item.position, \"₹ \"+item.prize])\n  }else {\n    prizes = [{primaryText: \"This tournament has no prizes\"}]\n  }\n  if(tournament.registered)\n    players = tournament.registered.map((item, index) => {return[index+1, item.gamingUsername]})\n  if(tournament.customFields){\n    items = tournament.customFields.map(item => ({primaryText: item.label, secondaryIcon: item.value, id: item.value}))\n  }else {\n    items = [{primaryText: \"No game details were provided\"}]\n  }\n  if(tournament.credentials){\n    credentials = tournament.credentials.map(item => ({primaryText: item.label, secondaryIcon: item.value, id: item.label}))\n  }else{\n    credentials = [{primaryText: \"15 min before tournament credentials will be update\"}]\n  }\n  return {prizes, players, items, credentials}\n}\n\nfunction ModifyTournamentRender({specificTournament, ...props}){\n  const classes = styles()\n  //console.log(props)\n\n  if(specificTournament === null || specificTournament === undefined){\n    return <div>Tournament not available</div>\n  }\n\n  let {tournament} = specificTournament\n  let {prizes, players, items, credentials} = getPreparedData(specificTournament.tournament)\n  return <div>\n      <div className={classes.imageBackground} style={{backgroundImage: `url(\"${tournament.image}\")`}}></div>\n      <div className={classes.container}>\n        <Typography variant=\"h5\">\n          {tournament.title}\n        </Typography>\n          <Typography variant=\"body1\" color=\"textSecondary\">\n            {tournament.description}\n          </Typography>\n        <Grid container spacing={1}>\n            <Grid item xs={12} md={4} className={classes.overview}>\n              <Paper>\n                <div className={classes.quickAction}>\n                  <div className={classes.buttonContainer}>\n                    <Link to={`/tournaments/${tournament._id}/update`}><Button variant=\"contained\" color=\"primary\"> Update results</Button> </Link>\n                    <ModalState.Provider>\n                      <Modal id={tournament._id}/>\n                    </ModalState.Provider>\n                  </div>\n                </div>\n                <div style={{padding: 8}}>\n                  <LinearProgressWithLabel label={`${tournament.totalRegistered}/${tournament.maxPlayers}`} value={tournament.totalRegistered / tournament.maxPlayers * 100}/>\n                  <LiveStreamUpdate liveStream={tournament.liveStream} id={tournament._id}/>\n                </div>\n              </Paper>\n              <CustomList items={credentials}  divider heading=\"Game credentials\" />\n              <CustomList items={items} divider heading=\"Tournament details\"/>\n              <Paper>\n                <Typography color=\"textSecondary\" className={classes.title}>Prizes</Typography>\n                <Table heading={['Position', \"Prize\"]} body={prizes}/>\n              </Paper>\n            </Grid>\n          <Grid item xs={12} md={8}>\n            <Paper>\n              <Typography color=\"textSecondary\" className={classes.title}>Players Registered</Typography>\n              <Table heading={['No.', \"Player Id\"]} body={players}/>\n            </Paper>\n          </Grid>\n        </Grid> \n      </div>\n    </div>\n}\n\nexport default ModifyTournamentRender;","import React from 'react'\nimport {withRouter} from 'react-router-dom'\nimport QueryRenderer from 'Components/QueryRenderer'\nimport graphql from 'babel-plugin-relay/macro'\nimport Header from 'Components/Header'\nimport ModifyTournamentRender from './ModifyTournamentRender'\n\nconst query = graphql`\nquery ModifyQuery($id: ID!){\n  specificTournament(id: $id) {\n    tournament {\n      _id\n      liveStream\n        title\n        totalRegistered\n        registered{\n          gamingUsername\n        }\n        entryFee\n        maxPlayers\n        time\n        image\n        prizes{\n          position\n          prize\n        }\n        customFields {\n          label\n          value\n        }\n        credentials{\n          label\n          value\n        }\n    }\n  }\n}\n`\n\nfunction ModifyTournament(props){\n\n  //console.log(props.match.params.tournamentId)\n\n  return (\n    <div>\n      <Header title={'Update Tournament'} />\n      <QueryRenderer query={query} variables={{id: props.match.params.tournamentId}} component={data => <ModifyTournamentRender {...data} />}/>\n    </div>\n  )\n}\n\nexport default withRouter(ModifyTournament);","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport MaterialTable from 'Components/MaterialTable'\nimport TextField from '@material-ui/core/TextField'\nimport CustomList from 'Components/CustomList'\nimport QueryRenderer from 'Components/QueryRenderer'\nimport graphql from 'babel-plugin-relay/macro'\nimport GoBackAppBar from 'Components/GoBackAppbar'\nimport { toastInfo, toastSuccess } from 'Components/Toast'\nimport LoadingButton from 'Components/LoadingButton'\nimport {makeStyles} from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport CommitRelay from 'Components/CommitRelay'\n\nconst UPDATE_NAME = \"updateResults\"\n\nconst styles = makeStyles(theme => ({\n  container: {\n    padding: theme.spacing(1),\n    '& > *' :{\n      marginBottom: theme.spacing(1)\n    }\n  }\n}))\n\nfunction calculateDynamicPoint(total, position){\n  //console.log(Math.floor(total/position))\n  return Math.floor(total/position)\n}\n\nfunction RenderSuggestiveField({tableData, names}) {\n  let [list, setList] = React.useState([])\n  //console.log(names)\n  function onChange(val){\n    tableData.onChange(val)\n    if(val === \"\"){\n      return setList([])\n    }\n    let a = names.filter(name => name.gamingUsername.indexOf(val) !== -1).splice(0, 5)\n    setList(a)\n  }\n\n  function itemClick(item) {\n    tableData.onChange(item.primaryText)\n    setList([])\n  }\n\n  let items = list.map((item, index) => ({primaryText: item.gamingUsername, id: index}))\n\n  return (<div style={{position: \"relative\"}}>\n    <TextField onChange={e => onChange(e.target.value)} name={tableData.columnDef.field} placeholder={tableData.columnDef.title} fullWidth value={tableData.value || \"\"}/>\n    { list.length > 0 &&  <CustomList items={items} button dense divider itemClick={itemClick} style={{position: \"absolute\", width: \"100%\"}}/>}\n  </div>)\n}\n\nfunction setItem(data){\n  localStorage.setItem(UPDATE_NAME, JSON.stringify(data))\n}\n\nfunction getItem(){\n  let a = localStorage.getItem(UPDATE_NAME)\n  if(a === null){\n    return []\n  }\n  try{\n    return JSON.parse(a)\n  }catch(err){\n    console.log(err)\n    return []\n  }\n}\n\nfunction UpdateResultsComponent({specificTournament, ...props}){\n  let {tournament} = specificTournament\n  let [tableData, setTableData] = React.useState({names: tournament.registered, data: getItem()})\n  function handleData(data, modified, action, modifiedEdit){\n    let names = []\n\n    if(action === \"ADD\"){\n      names = tableData.names.filter(name => name.gamingUsername !== modified.username)\n    }else if(action === \"EDIT\") {\n      toastInfo(\"Dynamic editing of name is still experimental. Might cause issue sometimes\")\n      names = [...tableData.names.filter(name => name.gamingUsername !== modified.username), ...tournament.registered.filter(name => name.gamingUsername === modifiedEdit.username)]\n    }else {\n      names = [...tableData.names, ...tournament.registered.filter(name => name.gamingUsername === modified.username)]\n    }\n    setItem(data)\n    setTableData({data, names})\n  }\n\n  let columns = tournament.metricsPoints.map(item => ({title: item.label, field: item.label, type: \"numeric\"}))\n  columns.unshift({\n    title: \"Name\",\n    field: \"username\",\n    editComponent: data => <RenderSuggestiveField tableData={data} names={tableData.names}/>\n  })\n  columns.push({\n    title: \"Group\",\n    field: \"group\",\n    type: \"numeric\"\n  })\n  columns.push({\n    title: \"Points\",\n    field: \"points\",\n    type: \"numeric\"\n  })\n  columns.push({\n    title: \"Credit\",\n    type: \"currency\",\n    field: \"credit\"\n  })\n\n  function calculatePoints(){\n    if(tableData.data.length === 0){\n      toastInfo(\"Add data in table to calculate\")\n    }\n    let a = []\n    let metrics = {}\n    //push metrics table in key value pair\n    for(let i = 0; i < tournament.metricsPoints.length; i++){\n      metrics[tournament.metricsPoints[i].label] = {points: tournament.metricsPoints[i].points, dynamic: tournament.metricsPoints[i].dynamic}\n    }\n    let skip = [\"username\", \"group\", \"points\", \"tableData\", \"credit\"]\n    for(let i = 0; i< tableData.data.length; i++) {\n      let points = 0;\n      for(let key in tableData.data[i]){\n        if(skip.indexOf(key) === -1){\n          points += metrics[key].dynamic ? calculateDynamicPoint(+metrics[key].points, +tableData.data[i][key]) : +metrics[key].points\n        }\n      }\n      a.push({\n        ...tableData.data[i],\n        points\n      })\n    }\n    //console.log(a)\n    setTableData({data: a, names: tableData.names})\n  }\n\n\n  return (\n    <div>\n      <MaterialTable \n        title={'Update results'} \n        columns = {columns}\n        tableData={tableData.data} \n        getTableData={handleData}\n      />\n      <Button fullWidth onClick={calculatePoints}>Calculate points | Run once to get overview. If everything is correct</Button>\n    </div>\n  )\n}\n\nconst query = graphql`\n  query UpdateResultsQuery ($id: ID!){\n    specificTournament(id: $id){\n      tournament{\n        _id\n        registered {\n          gamingUsername\n        }\n        metricsPoints {\n          label\n          points\n          dynamic\n        }\n      }\n    }\n  }\n`\n\n\nconst mutation = graphql`\n  mutation UpdateResultsMutation($data: UpdateResultsInput!) {\n    updateResults(data: $data) {\n      tournament {\n        _id\n        resultsUpdated\n      }\n      message\n    }\n  }\n`\n\nfunction transformData(data){\n  let nonMetrics = [\"points\", \"username\", \"group\", \"tableData\", \"credit\"]\n  return data.map(item => {\n    let metrics = []\n    for(let key in  item) {\n      if(nonMetrics.indexOf(key) === -1){\n        metrics.push({\n          label: key,\n          value: +item[key]\n        })\n      }\n    }\n    return ({\n      metrics,\n      gamingUsername: item.username,\n      credit: +item.credit,\n      groupPosition: +item.group || -1\n    })\n  })\n  // console.log(data)\n  // return data\n}\n\nfunction UpdateResults(props) {\n  const classes = styles()\n  let [submitting, setSubmitting] = React.useState(false)\n\n  function submitData(){\n    let tableData = getItem()\n    if(tableData.length === 0){\n      return toastInfo(\"Table is empty unable to submit\")\n    }\n    if(!window.confirm(\"Do you wish to submit results. It can't be updated again\")) {\n      return\n    }\n    setSubmitting(true)\n    let data = {id: props.match.params.tournamentId, results: transformData(tableData)}\n    //console.log(data)\n    CommitRelay({data}, mutation, (response, errors) => {\n      console.log(response, errors)\n      setSubmitting(false)\n      if(!errors){\n        toastSuccess(response.updateResults.message)\n      }\n    })\n  }\n\n  function clearData(){\n    if(!window.confirm(\"Do you wish to clear all data in local storage\")){\n      return \n    }\n    localStorage.removeItem(UPDATE_NAME)\n    window.location.reload()\n    //toastInfo(\"Refresh page now.\")\n  }\n\n  return (<div>\n    <GoBackAppBar title={'Update Results'}/>\n    <div className={classes.container}>\n      <Button onClick={clearData}>Clear table data</Button>\n      <QueryRenderer query={query} variables={{id: props.match.params.tournamentId}} component={data => <UpdateResultsComponent {...data} />}/>\n      <LoadingButton isLoading={submitting} onClick={submitData}>Update Results</LoadingButton>\n    </div>\n  </div>)\n}\n\nexport default withRouter(UpdateResults)","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport AddTournaments from './AddTournaments'\r\nimport ViewTournaments from './ViewTournaments'\r\nimport ModifyTournament from './ModifyTournament/Modify'\r\nimport UpdateResults from './ModifyTournament/UpdateResults'\r\n\r\nfunction Tournaments(props){\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/tournaments/:tournamentId/update\" component={UpdateResults} />\r\n      <Route path=\"/tournaments/add\" component={AddTournaments} />\r\n      <Route path=\"/tournaments/:tournamentId\" component={ModifyTournament} />\r\n      <Route path={'/tournaments'} component={ViewTournaments} />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default Tournaments","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(1)\n  },\n  media: {\n    height: 240,\n  },\n}));\n\nexport default function MediaCard(props) {\n  const classes = useStyles();\n  //console.log(props)\n  return (\n    <Grid item  md={4} sm={6} xs={12} className={classes.root}>\n      <Card>\n        <CardActionArea>\n          <CardMedia\n            className={classes.media}\n            image={process.env.REACT_APP_URL+\"\"+props.image}\n            title={props.title}\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {props.title}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              {props.description.substr(0, 200)}...\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        <CardActions>\n          <Button size=\"small\" color=\"primary\">\n            Edit\n          </Button>\n          <Button size=\"small\" color=\"primary\" onClick={() => props.deleteItem(props._id)}>\n            Delete\n          </Button>\n        </CardActions>\n      </Card>\n    </Grid>\n  );\n}\n","import graphql from 'babel-plugin-relay/macro'\n\nexport default graphql`mutation DeleteGameMutation($id: ID!){\n  deleteGame(id: $id){\n    game{\n      _id\n    }\n    message\n  }\n}`","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid'\nimport {createFragmentContainer} from 'react-relay'\nimport graphql from 'babel-plugin-relay/macro'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(1)\n  },\n  media: {\n    height: 240,\n  },\n}));\n\nfunction GameCard(props) {\n  const classes = useStyles();\n  //console.log(props)\n  return (\n    <Grid item  md={4} sm={6} xs={12} className={classes.root}>\n      <Card>\n        <CardActionArea>\n          <CardMedia\n            className={classes.media}\n            image={props.image}\n            title={props.game.title}\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {props.game.title}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              {props.game.description.substr(0, 200)}...\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        <CardActions>\n          <Button size=\"small\" color=\"primary\">\n            Edit\n          </Button>\n          <Button size=\"small\" color=\"primary\" onClick={() => props.deleteItem(props.game._id)}>\n            Delete\n          </Button>\n        </CardActions>\n      </Card>\n    </Grid>\n  );\n}\n\nexport default createFragmentContainer(GameCard, {\n  game: graphql`\n    fragment GameCard_game on Game {\n      title\n      _id\n      description\n      image\n    }\n  `\n})","import React from 'react'\nimport graphql from 'babel-plugin-relay/macro'\nimport {Grid} from '@material-ui/core'\nimport { createFragmentContainer } from 'react-relay'\nimport GameCard from './GameCard'\nimport CommitMutation from 'Components/CommitRelay'\nimport DeleteQuery from './DeleteGame'\nimport {useHistory} from 'react-router-dom'\nimport {toastSuccess, toastError} from 'Components/Toast'\nimport Fab from 'Components/Fab'\n\nfunction GamesList(props){\n  \n  let history = useHistory()\n\n  function deleteItem(id) {\n    if(!window.confirm(\"Do you wish ti delete this game\")){\n      return\n    }\n    CommitMutation({id}, DeleteQuery, (response, errors) => {\n      if(!response) {\n        return toastError(\"Unable to delete game\")\n      }\n      if(!errors){\n        toastSuccess(\"Removed game\")\n      }\n    },\n    {\n      updater: store => {\n        store.delete(id)\n      }\n    })\n  }\n  return (\n    <React.Fragment>\n      <Grid container>\n        {props.games.map((game, index) => <GameCard key={index}  game={game} deleteItem={deleteItem}/>)}\n      </Grid>\n      <Fab onClick={() => history.push(\"/games/add\")} />\n    </React.Fragment>\n  )\n}\n\n\nexport default createFragmentContainer(GamesList, {\n  games: graphql`\n    fragment GamesList_games on Game @relay(plural: true) {\n      ...GameCard_game\n    }\n  `\n})","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Grid } from '@material-ui/core'\nimport GameCard from 'Components/GameCard'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Header from 'Components/Header'\nimport Add from '@material-ui/icons/Add'\nimport graphql from 'babel-plugin-relay/macro'\nimport RenderRelay from 'Components/QueryRenderer'\nimport CommitMutation from 'Components/CommitRelay'\nimport DeleteQuery from './DeleteGame'\nimport GamesList from './GamesList'\n\nexport const getGamesQuery = graphql`\nquery ViewGamesQuery{\n  games{\n    ...GamesList_games\n  }\n}\n`\n\nconst styles = makeStyles(theme => ({\n  root: {\n    position: \"relative\"\n  }\n}))\n\nfunction ViewGames(){\n  const history = useHistory()\n  return (\n    <RenderRelay\n      query={getGamesQuery}\n      component={(data) => <GamesList {...data} history={history}/>}\n    />\n  )\n}\n\nfunction ViewGamesRender(props) {\n  const history = useHistory()\n  const classes = styles()\n  //writeGamesInStorage()\n  function deleteItem(id){\n    if(!window.confirm(\"Do you wish to delete\")){\n      return;\n    }\n    CommitMutation({id}, DeleteQuery, (response, errors) => {\n      console.log(response, errors)\n    }\n    //optimisticupdater\n    )\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        {\n          props.games.map(item => <GameCard key={item._id} {...item} deleteItem={deleteItem}/>)\n        }\n      </Grid>\n    </div>\n  )\n}\n\n\nexport default ViewGames","import React from 'react';\nimport MaterialTable from 'material-table';\nimport { forwardRef } from 'react';\n\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n  };\n\nexport default function CustomFields(props) {\n  const [state, setState] = React.useState({\n    data: [\n    ],\n  });\n\n  return (\n    <React.Fragment>\n    <MaterialTable\n      title={props.title || \"Editable Table\"}\n      columns={props.columns}\n      data={state.data}\n      icons={tableIcons}\n      editable={{\n        onRowAdd: (newData) =>\n          new Promise((resolve) => {\n            setTimeout(() => {\n              resolve();\n              setState((prevState) => {\n                const data = [...prevState.data];\n                data.push(newData);\n                props.getTableData({ ...prevState, data })\n                return { ...prevState, data };\n              });\n            }, 600);\n          }),\n        onRowUpdate: (newData, oldData) =>\n          new Promise((resolve) => {\n            setTimeout(() => {\n              resolve();\n              if (oldData) {\n                setState((prevState) => {\n                  const data = [...prevState.data];\n                  data[data.indexOf(oldData)] = newData;\n                  props.getTableData({ ...prevState, data })\n                  return { ...prevState, data };\n                });\n              }\n            }, 600);\n          }),\n        onRowDelete: (oldData) =>\n          new Promise((resolve) => {\n            setTimeout(() => {\n              resolve();\n              setState((prevState) => {\n                const data = [...prevState.data];\n                data.splice(data.indexOf(oldData), 1);\n                props.getTableData({ ...prevState, data })\n                return { ...prevState, data };\n              });\n            }, 600);\n          }),\n      }}\n    />\n    </React.Fragment>\n  );\n}\n","import React from 'react'\nimport Form from 'Components/Form'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { TextField, Chip } from '@material-ui/core'\nimport Button from 'Components/LoadingButton'\nimport CustomFields from 'Components/CustomFields'\nimport Header from 'Components/Header'\nimport graphql from 'babel-plugin-relay/macro'\nimport CommitMutation from 'Components/CommitRelay'\nimport { toastSuccess } from 'Components/Toast'\n\n\nconst styles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(1)\n  }\n}))\n\nconst mutation = graphql`\n\nmutation AddGameMutation($data: GameInput!){\n  addGame(gameFields: $data){\n\t\tgame {\n      title\n    }\n  }\n}\n\n`\n\n\nfunction AddGame(){\n\n  const classes = styles()\n  let [loading, setLoading] = React.useState(false)\n  let tableData = []\n  function setTableData(table){\n    tableData = table.data\n  }\n\n  function onSubmit(data) {\n    console.log(data)\n    setLoading(true)\n    const obj = {...data, \n      customFields: tableData.map(item => ({label: item.label, type: item.type, options: item.options.split(\",\").map(i => i.trim())}))\n    }\n    CommitMutation({data: obj}, mutation, (response, errors) => {\n      //console.log(response)\n      setLoading(false)\n      if(!errors){\n        toastSuccess(\"Game added successfully\")\n      }\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Form method=\"post\" url=\"/api/games\" onSubmit={onSubmit}>\n        <TextField label={'Game title'} fullWidth name={'title'} />\n        <TextField label={'Description'} name=\"description\" multiline={true} rows={5} fullWidth />\n        <TextField label={'Image URL'} name={\"image\"} fullWidth  />\n        <TextField label={'Metrics'} name={'metrics'} fullWidth helperText={\"Things on which player will be judged or given points\"} />\n        <CustomFields columns={[\n            { title: 'Heading', field: 'label'},\n            {\n              title: 'Field Type',\n              field: 'type',\n              lookup: { select: 'Dropdown', multipleSelect: 'Multiple Select Dropdown', checkbox: \"Checkbox\", number: \"Number\", text: \"Text Field\"},\n            },\n            {\n              title: \"Parameters\", \n              field: \"options\",\n              render: rowData => {\n                if(rowData.options !== undefined)\n                  return rowData.options.split(\",\").map((item, index) => <Chip label={item} key={index} style={{margin: 4}}/>)\n              }\n            }\n          ]}\n          getTableData={(data) => setTableData(data)}\n        />\n        <Button type=\"submit\" fullWidth isLoading={loading}>Add Game</Button>\n      </Form>\n    </div>\n  )\n}\n\nexport default AddGame","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport ViewGames from './ViewGames'\nimport AddGame from './AddGame'\n\n\nfunction GamesRoute(props){\n  return (\n    <Switch>\n      <Route path={'/games/add'} component={AddGame} />\n      <Route path={'/games'} component={ViewGames} />\n    </Switch>\n  )\n}\n\nexport default GamesRoute","export default function makeDate(text){\n  //2020-02-24T09:19:13.741Z\n  let a = new Date(+text).toString()\n  //console.log(a)\n  let [hour, minute] = [a.substr(16, 2), a.substr(19, 2)]\n  return  a.substr(4, 11)+\" at \"+(+hour > 12 ? +hour - 12 : hour)+\":\"+minute+\" \"+(+hour > 12 ? \"PM\": \"AM\")\n}","import React from 'react'\r\nimport { createRefetchContainer } from 'react-relay'\r\nimport graphql from 'babel-plugin-relay/macro'\r\nimport CustomList from 'Components/CustomList'\r\nimport {Box} from '@material-ui/core'\r\nimport {Pagination} from '@material-ui/lab'\r\nimport makeDate from 'Utils/MakeDate'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport {useHistory} from 'react-router-dom'\r\nimport Error from 'Components/Error'\r\n//import Request from './Request'\r\n\r\nconst styles = makeStyles(theme => ({\r\n  pagination: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1)\r\n  },\r\n  paginationContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\"\r\n  }\r\n}))\r\n\r\nconst transformData = data => {\r\n  return data.map(item => ({\r\n    id: item._id,\r\n    primaryText: item.userId.username,\r\n    secondaryText: \"Requested on \"+makeDate(item.createdAt)+\" to withdraw Rs.\"+item.amount+\" via \"+item.method\r\n  }))\r\n}\r\n\r\nconst pageLimit = 2\r\n\r\nfunction RequestComponent(props) {\r\n  const classes = styles()\r\n  let history = useHistory()\r\n  console.log(props)\r\n  if(!props.getWithdrawRequests){\r\n    return <Error />\r\n  }\r\n\r\n  let items = transformData(props.getWithdrawRequests.docs)\r\n\r\n  function itemClick(item) {\r\n    history.push('/wallet/'+item.id)\r\n  }\r\n\r\n  function handleChange(e, page) {\r\n    //console.log({page, limit: 2})\r\n    props.relay.refetch(\r\n      {pagination: {page, limit: 30}}\r\n    )\r\n  }\r\n\r\n  return <div>\r\n    <Box p={1}>\r\n      <CustomList items={items} button heading={'Withdraw Requests'} itemClick={itemClick}/>\r\n      <div className={classes.paginationContainer}>\r\n        <Pagination count={props.getWithdrawRequests.totalPages} color={\"primary\"} variant={'outlined'} onChange={handleChange} className={classes.pagination} />\r\n      </div>\r\n    </Box>\r\n  </div>\r\n}\r\n\r\nexport default createRefetchContainer(RequestComponent, {\r\n  getWithdrawRequests: graphql`\r\n    fragment RequestComponent_getWithdrawRequests on PaginatedWithdrawResponse{\r\n      docs {\r\n        _id\r\n        userId {\r\n          username\r\n        }\r\n        amount\r\n        method\r\n        createdAt\r\n        approved\r\n      }\r\n      totalPages\r\n      page\r\n    }\r\n  `\r\n}, graphql`\r\nquery RequestComponentQuery($pagination: MongoosePagination){\r\n  getWithdrawRequests(pagination: $pagination){\r\n    ...RequestComponent_getWithdrawRequests\r\n  }\r\n}\r\n`)","import React from 'react'\r\nimport CustomList from 'Components/CustomList'\r\nimport graphql from 'babel-plugin-relay/macro'\r\nimport QueryRenderer from 'Components/QueryRenderer'\r\nimport RequestComponent from './RequestComponent'\r\n\r\nconst query = graphql`\r\nquery AllWalletRequestsQuery($pagination: MongoosePagination) {\r\n  getWithdrawRequests(pagination: $pagination){\r\n    ...RequestComponent_getWithdrawRequests\r\n  }\r\n}\r\n`\r\n\r\n\r\nfunction AllWalletRequests(props) {\r\n  //console.log(props, \"new one\")\r\n  return (\r\n    <div>\r\n      <QueryRenderer query={query} variables={{pagination: {page: 1, limit: 30}}} component={data => <RequestComponent {...data}/>} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AllWalletRequests;","import React from 'react'\n\nfunction Overview(props) {\n  return (\n    <div>Overview</div>\n  )\n}\n\nexport default Overview","import React from 'react'\nimport Wallet from './Wallet/AllWalletRequests'\nimport {Switch, Route} from 'react-router-dom'\nimport Overview from './Overview/Overview'\n\nfunction Home(props) {\n  return (\n    <div>\n      <Switch>\n        <Route path={'/wallet'} component={Wallet} />\n        <Route path={'/'} component={Overview} />\n      </Switch>\n    </div>\n    \n  )\n}\n\nexport default Home;","import React from 'react'\r\nimport QueryRenderer from 'Components/QueryRenderer'\r\nimport graphql from 'babel-plugin-relay/macro'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {Grid, TextField, Switch} from '@material-ui/core'\r\nimport Form from 'Components/Form'\r\nimport LoadingButton from 'Components/LoadingButton'\r\nimport CustomList from 'Components/CustomList'\r\nimport makeDate from 'Utils/MakeDate'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport GoBackAppBar from 'Components/GoBackAppbar'\r\nimport CommitRelay from 'Components/CommitRelay'\r\nimport { toastSuccess } from 'Components/Toast'\r\n\r\nconst styles = makeStyles(theme => ({\r\n  container: {\r\n    margin: 0,\r\n    width: \"100%\"\r\n  },\r\n  addPadding: {\r\n    '& > *' : {\r\n      marginBottom: theme.spacing(1)\r\n    }\r\n  }\r\n}))\r\n\r\nconst query = graphql`\r\n  query DetailedReportQuery($id: ID!) {\r\n    specificWithdraw(id: $id) {\r\n      _id\r\n      amount\r\n      method\r\n      createdAt\r\n      approved\r\n      userId{\r\n        walletBalance\r\n        bonus\r\n        phone\r\n        username\r\n        transaction(pagination: {offset: 0, limit: 40}) {\r\n          _id\r\n          amount\r\n          createdAt\r\n          transactionType\r\n          responseMessage\r\n          responseCode\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst mutation = graphql`\r\n  mutation DetailedReportMutation($data: UpdateWithdrawInput!){\r\n    updateWithdrawRequest(data: $data) {\r\n      _id\r\n      amount\r\n      method\r\n      createdAt\r\n      approved\r\n      userId{\r\n        walletBalance\r\n        bonus\r\n        phone\r\n        username\r\n        transaction(pagination: {offset: 0, limit: 40}) {\r\n          _id\r\n          amount\r\n          createdAt\r\n          transactionType\r\n          responseCode\r\n          responseMessage\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nfunction DetailedReport(props) {\r\n  const id = props.match.params.id\r\n  //console.log(props)\r\n  return (\r\n    <div>\r\n      <QueryRenderer query={query} variables={{id}} component={data => <DetailedReportComponent {...data} id={id}/>}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction makeList(data){\r\n  return [\r\n    {\r\n      id: 1,\r\n      primaryText: \"Method\",\r\n      secondaryText: data.method\r\n    },\r\n    {\r\n      id: 2,\r\n      primaryText: \"Requested on\",\r\n      secondaryText: makeDate(data.createdAt)\r\n    },\r\n    {\r\n      id: 3,\r\n      primaryText: \"Requested Amount\",\r\n      secondaryText: \"Rs.\"+data.amount\r\n    },\r\n    {\r\n      id: 4,\r\n      primaryText: \"User wallet Balance\",\r\n      secondaryText: \"Rs.\"+data.userId.walletBalance\r\n    },\r\n    {\r\n      id: 5,\r\n      primaryText: \"User bonus balance\",\r\n      secondaryText: \"Rs.\"+data.userId.bonus\r\n    },\r\n    {\r\n      id: 6,\r\n      primaryText: \"Status\",\r\n      secondaryText: data.approved === 1 ? \"Approved\" : data.approved === 2 ? \"Rejected\" : \"Pending\"\r\n    },\r\n    {\r\n      id: 7,\r\n      primaryText: \"Username\",\r\n      secondaryText: data.userId.username\r\n    },\r\n    {\r\n      id: 8,\r\n      primaryText: \"Phone number\",\r\n      secondaryText: data.userId.phone\r\n    }\r\n  ]\r\n}\r\n\r\nfunction makeTransactionList(data) {\r\n  let items = []\r\n  let totalUsed = 0\r\n  let totalCredited = 0\r\n  //console.log(data)\r\n  for(let i = 0; i < data.length;i++) {\r\n    //console.log(data)\r\n    if(data[i].transactionType === \"USED\"){\r\n      totalUsed += data[i].amount\r\n    }else if((data[i].transactionType === \"CREDIT\" || data[i].transactionType === \"ADD\" ) && +data[i].responseCode === 1){\r\n      totalCredited += +data[i].amount\r\n    }\r\n    items.push({\r\n      id: data[i]._id,\r\n      primaryText: data[i].transactionType+\" \"+data[i].amount,\r\n      secondaryText: \"Response code:\"+data[i].responseCode+\", Message:\"+data[i].responseMessage+\", Date:\"+makeDate(data[i].createdAt)\r\n    })\r\n  }\r\n  items.unshift({\r\n    id: 2,\r\n    primaryText: \"Total Credited\",\r\n    secondaryText: \"Rs. \"+totalCredited\r\n  })\r\n  items.unshift({\r\n    id: 1,\r\n    primaryText: \"Total Used\",\r\n    secondaryText: \"Rs. \"+totalUsed\r\n  })\r\n  return items\r\n  \r\n}\r\n\r\nconst Approval = props => {\r\n\r\n\r\n  let [approval, setApproval] = React.useState(false)\r\n  let [loading, setLoading] = React.useState(false)\r\n  \r\n  function onSubmit(data){\r\n    if(!window.confirm(\"Do you wish to submit\")){\r\n      return\r\n    }\r\n    setLoading(true)\r\n    CommitRelay({data: {id: props.id, approval: approval ? 1 : 0, message: data.message}}, mutation, (resposne, error) => {\r\n      setLoading(false)\r\n      if(!error){\r\n        toastSuccess(\"Transaction status has been updated\")\r\n      }\r\n    })\r\n  }\r\n\r\n  return (<Form onSubmit={onSubmit}>\r\n    <label>Approve request <Switch checked={approval} onChange={e => setApproval(!approval)} name=\"approval\"/></label>\r\n    <TextField label={'Message'} name=\"message\" required fullWidth/>\r\n    <LoadingButton type=\"submit\" isLoading={false}> {approval ? 'Send money': \"Reject\"} </LoadingButton>\r\n  </Form>)\r\n}\r\n\r\nfunction DetailedReportComponent(props) {\r\n  const classes = styles()\r\n  //console.log(props)\r\n  let withdrawList = makeList(props.specificWithdraw)\r\n  let transactionList = makeTransactionList(props.specificWithdraw.userId.transaction)\r\n\r\n  return <Grid container spacing={1} className={classes.container}>\r\n    <Grid item sm={6} xs={12} className={classes.addPadding}>\r\n      <CustomList items={withdrawList} divider/>\r\n      <Approval id={props.id}/>\r\n    </Grid>\r\n    <Grid item xs={12} sm={6}>\r\n      <CustomList items={transactionList} />\r\n    </Grid>\r\n  </Grid>\r\n}\r\n\r\nexport default withRouter(DetailedReport)","import React from 'react'\r\nimport { createContainer } from \"unstated-next\"\r\nimport {withRouter, useHistory} from 'react-router-dom'\r\nimport Menu from '@material-ui/icons/Menu'\r\nimport ArrowBack from '@material-ui/icons/ArrowBack'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Select from 'Layout/FormBuilder/Select'\r\nimport {environment} from 'Store/actions/independent'\r\nimport {connect} from 'react-redux'\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles  = makeStyles(theme => ({\r\n  appBar: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    [theme.breakpoints.up('md')]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(1),\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    }\r\n  },\r\n  headerText: {\r\n    flex: 1,\r\n    color: \"#212121\"\r\n  },\r\n  icon: {\r\n    color: \"#fff\"\r\n  }\r\n}))\r\n\r\nfunction Header(props){\r\n  const classes = styles()\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar>\r\n        <IconButton onClick={props.iconClick} className={classes.menuButton}>\r\n          {props.icon}\r\n        </IconButton>\r\n        <Typography variant=\"h6\" noWrap className={classes.headerText}>\r\n          {props.environment}\r\n        </Typography>\r\n        <div style={{width: 150}}>\r\n          <Select label=\"Select Environemnt\" name=\"environment\" defaultValue={props.environment} options={[\"Testing\", \"Production\", \"Local\"]} onChange={e => environment(e.target.value)}/>\r\n        </div>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  environment: state.Independent.environment\r\n})\r\n\r\nconst _Header = connect(mapStateToProps)(Header)\r\n\r\nfunction useDrawer() {\r\n  let [drawerOpen, setDrawerOpen] = React.useState(false)\r\n  let setDrawer = (open) => setDrawerOpen(open)\r\n  return {drawerOpen, setDrawer}\r\n}\r\n\r\nexport const DrawerState = createContainer(useDrawer)\r\n\r\nfunction _AppBar(props) {\r\n  let drawer = DrawerState.useContainer();\r\n  let history = useHistory();\r\n\r\n  function iconClick() {\r\n    if(props.location.pathname.replace(/[^\\/]/g, \"\").length === 1){\r\n      drawer.setDrawer(true)\r\n    }else {\r\n      history.goBack()\r\n    }\r\n  }\r\n\r\n  return  <_Header \r\n    icon={props.location.pathname.replace(/[^\\/]/g, \"\").length === 1 ? <Menu/> : <ArrowBack/>} \r\n    iconClick={iconClick}\r\n    />\r\n}\r\n\r\nexport default withRouter(_AppBar)","import React from 'react'\r\nimport {SwipeableDrawer, useMediaQuery, Divider, Typography, Box} from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport CustomList from 'Components/CustomList'\r\nimport { useHistory, withRouter } from 'react-router-dom'\r\nimport {DrawerState} from './AppBar'\r\nimport AuthService from 'Store/actions/AuthService'\r\nimport Person from '@material-ui/icons/PersonOutline'\r\n\r\nlet navigation = [\r\n  {\r\n    id: 0,\r\n    primaryText: \"Home\",\r\n    to: \"/home\"\r\n  },\r\n  {\r\n    id: 1,\r\n    primaryText: \"Tournaments\",\r\n    to: \"/tournaments\"\r\n  },\r\n  {\r\n    id: 23,\r\n    primaryText: \"Mega\",\r\n    to: \"/mega\"\r\n  },\r\n  {\r\n    id: 2,\r\n    primaryText: \"Games\",\r\n    to: \"/games\"\r\n  },\r\n  {\r\n    id: 4,\r\n    primaryText: \"Wallet\",\r\n    to: \"/wallet\"\r\n  },\r\n  {\r\n    id: 5,\r\n    primaryText: \"Notification\",\r\n    to: \"/notification\"\r\n  },\r\n  {\r\n    id: 300,\r\n    primaryText: \"Account\",\r\n    to: \"/account\"\r\n  }\r\n  \r\n]\r\n\r\nconst drawerWidth = 240\r\n\r\nconst styles = makeStyles(theme => ({\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    backgroundColor: \"#1B2430\",\r\n    color: \"#fff\"\r\n  },\r\n  toolbar: {\r\n    ...theme.mixins.toolbar,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    display: \"flex\",\r\n    backgroundColor: \"rgb(35, 47, 62)\"\r\n  },\r\n  title: {\r\n    color: \"#fff\"\r\n  },\r\n  image: {\r\n    width: 32,\r\n    display: \"inline-block\",\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  activeClass: {\r\n    backgroundColor: \"#000 !important\"\r\n  },\r\n  hello: {\r\n    padding: theme.spacing(1),\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    display: \"flex\",\r\n    backgroundColor: \"rgb(35, 47, 62)\"\r\n  },\r\n  sideNav: {\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    justifyContent: 'space-between',\r\n    flexDirection: \"column\",\r\n    height: \"100%\"\r\n  }\r\n}))\r\n\r\nfunction findActiveIndex(items){\r\n  let activeIndex = -1\r\n  items.forEach((item, index) => {\r\n    \r\n    if(item.to === \"/\")\r\n      return\r\n    if(window.location.pathname.indexOf(item.to) !== -1){\r\n      activeIndex = item.id\r\n    }\r\n  })\r\n  return activeIndex;\r\n}\r\n\r\n\r\nfunction SideNav(props){\r\n  const classes = styles()\r\n  const matches = useMediaQuery('(min-width:960px)')\r\n  let history = useHistory()\r\n  let drawer = DrawerState.useContainer()\r\n\r\n  function itemClick(item, index) {\r\n    history.push(process.env.REACT_APP_BASE_URL+\"\"+item.to)\r\n    drawer.setDrawer(false)\r\n  }\r\n\r\n  let data = AuthService.getData()\r\n\r\n  return (\r\n    <SwipeableDrawer\r\n      className={classes.drawer}\r\n      open={drawer.drawerOpen}\r\n      onClose={() => drawer.setDrawer(false)}\r\n      onOpen={() => drawer.setDrawer(true)}\r\n      variant={matches ? \"permanent\" : \"temporary\"}\r\n      classes={{\r\n        paper: classes.drawerPaper,\r\n      }}\r\n      anchor=\"left\"\r\n      >\r\n      <div className={classes.toolbar}>\r\n        <img src=\"/admin/logo192.png\" className={classes.image} />\r\n        <Typography className={classes.title}>Gaming Stars</Typography>\r\n      </div>\r\n      <Box p={1} className={classes.sideNav}>\r\n        <CustomList \r\n          items={navigation} \r\n          button \r\n          listClass={' '} \r\n          itemClick={itemClick} \r\n          selected={[findActiveIndex(navigation)]}\r\n          activeClass={classes.activeClass}/>\r\n        <Typography className={classes.hello}> <Person /> &nbsp;&nbsp; {data.username || \"Jon Doe\"} </Typography>\r\n      </Box>\r\n    </SwipeableDrawer>\r\n  )\r\n}\r\n\r\n\r\nexport default withRouter(SideNav)","import React from 'react'\r\nimport AppBar from './AppBar'\r\nimport SideNav from './SideNav'\r\nimport {DrawerState} from './AppBar'\r\n\r\nfunction Drawer(props){\r\n  return (<React.Fragment>\r\n      <DrawerState.Provider>\r\n        <AppBar />    \r\n        <SideNav />\r\n      </DrawerState.Provider>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Drawer","import React from 'react'\nimport Form from 'Components/Form'\nimport { TextField } from '@material-ui/core';\nimport LoadingButton from 'Components/LoadingButton'\nimport CommitRelay from 'Components/CommitRelay'\nimport graphql from 'babel-plugin-relay/macro'\nimport { toastInfo, toastSuccess } from 'Components/Toast';\nimport Select from 'Layout/FormBuilder/Select'\n\nconst mutation = graphql`\n  mutation NotificationMutation($data: NotificationInput!) {\n    sendNotification(data: $data) {\n      message\n    }\n  }\n`\n\nfunction Title(props) {\n  let [value, setValue] = React.useState(\"\")\n  return <TextField name=\"title\" value={value} fullWidth onChange={e => setValue(e.target.value)} label=\"Title\" required helperText={value.length+\"/20\"} error={value.length > 20}/>\n}\n\nfunction Description(props) {\n  let [value, setValue] = React.useState(\"\")\n  return <TextField rows={3} multiline={true} label=\"Message\" name=\"body\" fullWidth onChange={e => setValue(e.target.value)} value={value} required helperText={value.length+\"/100\"} error={value.length > 100}/>\n}\n\nfunction Notification(props) {\n\n  let [loading, setLoading] = React.useState(false)\n  function onSubmit(data) {\n    if(data.title.length > 20 ) {\n      return toastInfo(\"Title length should not be more than 15 characters\")\n    }else if(data.body.length > 100) {\n      return toastInfo(\"Message can not exceed 100 characters\")\n    }else if(data.type === \"Tournament\" && props.tournament.id === undefined) {\n      return toastInfo(\"You have select to send notification to tournament participants. But, did not select a tournament\")\n    }\n    setLoading(true)\n    CommitRelay({data: {...data, tournamentId: props.tournament.id}}, mutation, (response, error) => {\n      setLoading(false)\n      if(!error) {\n        toastSuccess(\"Notifications sent\")\n      }\n    })\n  }\n\n  //console.log(props.tournament)\n\n  return (\n      <Form onSubmit={onSubmit} heading={'Data for notification'}>\n        <Select name=\"type\" defaultValue={\"Tournament\"} options={[\"ALL\", \"Tournament\"]} label={\"Send notification to\"}/>\n        <Title />\n        <Description/>\n        <TextField name=\"url\" fullWidth label=\"URL user will be sent to\"/>\n        <LoadingButton type=\"submit\" isLoading={loading}>Send Notification</LoadingButton>\n      </Form>\n  )\n}\n\nexport default Notification;","import React from 'react'\nimport graphql from 'babel-plugin-relay/macro'\nimport QueryRenderer from 'Components/QueryRenderer'\nimport CustomList from 'Components/CustomList'\n\nfunction makeDate(text){\n  //2020-02-24T09:19:13.741Z\n  let a = new Date(+text).toString()\n  //console.log(a)\n  return  a.substr(4, 11)+\" at \"+a.substr(16, 5)\n}\n\nconst query = graphql`\nquery TournamentsSectionQuery{\n  tournament(pagination: {offset: 0, limit: 30}){\n    _id\n    title\n    totalRegistered\n    time\n    gameId {\n      title\n    }\n  }\n}\n` \n\nfunction TournamentsSection(props){\n  return <QueryRenderer query={query} component={data => <TournamentsSectionComponent {...data} selectTournament={props.selectTournament}/>} />\n}\n\nfunction TournamentsSectionComponent(props) {\n  let [selected, setSelected] = React.useState(\"\")\n  let items = props.tournament.map(item => ({\n    id: item._id, \n    primaryText: item.gameId.title+\" \"+item.title,\n    secondaryText: makeDate(item.time)\n  }))\n\n  function itemClick(item) {\n    setSelected(item.id)\n    props.selectTournament(item)\n  }\n\n  return <CustomList items={items} button divider heading={\"Select a tournament to send notification\"} selected={[selected]} itemClick={itemClick}/>\n}\n\nexport default TournamentsSection","import React from 'react'\nimport { Grid } from '@material-ui/core'\nimport Notification from './Notification'\nimport Tournaments from './TournamentsSection'\nimport {makeStyles} from '@material-ui/core/styles'\n\nconst styles = makeStyles(theme => ({\n  container: {\n    width: '100%',\n    margin: 0\n  }\n}))\n\n\nfunction Holder() {\n  let [tournament, setTournament] = React.useState({})\n  const classes = styles()\n  function selectTournament(item) {\n    setTournament(item)\n    //console.log(item)\n  }\n\n\n  return <Grid container spacing={1} className={classes.container}>\n    <Grid item xs={12} sm={6}>  \n      <Notification tournament={tournament}/>\n    </Grid>\n    <Grid item xs={12} sm={6}>\n      <Tournaments selectTournament={selectTournament}/>\n    </Grid>\n  </Grid>\n}\n\nexport default Holder","import React from 'react'\nimport graphql from 'babel-plugin-relay/macro'\nimport QueryRenderer from 'Components/QueryRenderer'\nimport Select from 'Layout/FormBuilder/Select'\n\nconst query = graphql`\n  query GamesAvailableQuery{\n    games{\n      title\n      _id\n    }\n  }\n`\n\nfunction GamesAvailable(props) {\n  return <QueryRenderer query={query} component={data => <GamesAvailableComponent {...data} />} />\n}\n\nfunction GamesAvailableComponent(props) {\n  let options = props.games.map(item => ({label: item.title, value: item._id}))\n  return (\n    <Select options={options} name={\"game\"} label={\"Select a tournament game\"}/>\n  )\n}\n\nexport default GamesAvailable","import React from 'react'\nimport {Box, Paper, TextField, Typography} from '@material-ui/core'\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers';\nimport Button from 'Components/LoadingButton'\nimport * as yup from 'yup'\nimport {makeStyles} from '@material-ui/core/styles'\nimport {DateTimePicker} from '@material-ui/pickers'\nimport GamesAvailable from './GamesAvailable';\nimport CommitRelay from 'Components/CommitRelay'\nimport graphql from 'babel-plugin-relay/macro'\nimport { toastSuccess, toastInfo } from 'Components/Toast';\n\nconst styles = makeStyles(theme => ({\n  form: {\n    padding: theme.spacing(1),\n    '& > *': {\n      marginBottom: theme.spacing(1)\n    }\n  }\n}))\n\n\nconst mutation = graphql`\n  mutation MegaBasicDetailsMutation($data: MegladronInput!) {\n    createMegladron(data: $data) {\n      megladron {\n        _id\n        title\n        description\n      }\n    }\n  }\n`\n\nconst schema = yup.object().shape({\n  title: yup.string().required().max(20),\n  description: yup.string().required(),\n  maxPlayers: yup.number().positive().integer().required().min(50),\n  image: yup.string().required()\n});\n\nlet startTime, endTime;\n\nfunction MegaBasicDetails(props) {\n\n  const classes = styles()\n\n  const { register, handleSubmit, errors } = useForm({\n    resolver: yupResolver(schema)\n  });\n\n  function onSubmit(data) {\n    //console.log(data)\n    let game = document.querySelector(\"[name=game]\").value\n    //console.log(Date(endTime))\n    if(endTime === null || startTime === null || game === null) {\n      return toastInfo(\"End Date, Start Date, Game values are not present or they are still default one\");\n    }\n    let addedData = {...data, game, endTime: new Date(endTime).getTime().toString(), startTime: new Date(startTime).getTime().toString()}\n    console.log(addedData)\n    CommitRelay({data: addedData}, mutation, (response, error) => {\n      console.log(response, error)\n      if(!error) {\n        toastSuccess(\"Megladron created\")\n      }\n    })\n  }\n  console.log(\"Form submitted\", errors)\n  return (\n    <Box p={1}>\n      <Paper component=\"form\" onSubmit={handleSubmit(onSubmit)} className={classes.form}>\n        <Typography component=\"h2\" variant=\"h5\" color=\"textSecondary\">Megladron details</Typography>\n        <TextField inputRef={register} name=\"title\" label={\"Title\"} fullWidth error={errors.title !== undefined} helperText={errors.title?.message} required/>\n        <TextField inputRef={register} name=\"description\" label={\"Description\"} multiline={true} rows={5} required helperText={errors.title?.message} error={errors.description !== undefined} fullWidth/>\n        <TextField inputRef={register} name=\"maxPlayers\" label={\"Max Players\"} required helperText={errors.maxPlayers?.message} error={errors.maxPlayers !== undefined} fullWidth/>\n        <TextField inputRef={register} name=\"image\" label={\"Image URL\"} required helperText={errors.image?.message} error={errors.image !== undefined} fullWidth/>\n        <GamesAvailable />\n        <DateTimePicker inputRef={register}  name=\"startTime\" label=\"Event Start Time\" disablePast fullWidth onChange={e => {startTime = e}}/>\n        <DateTimePicker inputRef={register} name=\"endTime\" label=\"Event End Time\" disablePast fullWidth onChange={e => {endTime=e}} />\n        <Button type=\"submit\">Submit</Button>\n      </Paper>\n    </Box>\n  )\n}\n\nexport default MegaBasicDetails","import React from 'react'\nimport graphql from 'babel-plugin-relay/macro'\nimport QueryRenderer from 'Components/QueryRenderer'\nimport Fab from 'Components/Fab'\nimport {useHistory} from 'react-router-dom'\nimport CustomList from 'Components/CustomList'\nimport { Box } from '@material-ui/core'\n\nconst query = graphql`\n  query ViewMegladronQuery{\n    megladron {\n      docs {\n        _id\n        title\n      }\n    }\n  }\n`\n\nfunction ViewMegladron(props) {\n  return (\n    <QueryRenderer query={query} component={data => <ViewMegladronComponent {...data} />}/>\n  )\n}\n\nfunction ViewMegladronComponent(props) {\n  let history = useHistory()\n  let items = props.megladron.docs.map(item => ({id: item._id, primaryText: item.title}))\n\n  function itemClick(item) {\n    history.push(\"/mega/view/\"+item.id)\n  }\n\n  return (\n    <Box p={1}>\n      <CustomList items={items} button divider itemClick={itemClick} heading=\"Mega tournaments\"/>\n      <Fab onClick={() => history.push(\"/mega/add\")} />\n    </Box>\n  )\n}\n\nexport default ViewMegladron","import React from 'react'\nimport {createFragmentContainer} from 'react-relay'\nimport graphql from 'babel-plugin-relay/macro'\nimport CustomList from 'Components/CustomList'\nimport makeDate from 'Utils/MakeDate'\n\nfunction makeData(props){\n  return [\n    {\n      id: 1,\n      primaryText: \"Title\",\n      secondaryText: props.title\n    },\n    {\n      id: 2,\n      primaryText: \"Description\",\n      secondaryText: props.description\n    },\n    {\n      id: 3,\n      primaryText: \"Event duration\",\n      secondaryText: makeDate(props.startTime)+\" ---- \"+makeDate(props.endTime)\n    },\n    {\n      id: 4,\n      primaryText: \"Max Players\",\n      secondaryText: props.maxPlayers\n    }\n  ]\n}\n\nfunction BasicDetails(props) {\n  let items = makeData(props.megladron)\n  return (\n    <CustomList items={items} divider heading=\"Megladron basic details\"/>\n  )\n}\n\nexport default createFragmentContainer(BasicDetails, {\n  megladron: graphql`\n    fragment BasicDetails_megladron on Megladron {\n      _id\n      title\n      description\n      startTime\n      endTime\n      maxPlayers\n    }\n  `\n})","import React from 'react'\nimport Fab from '@material-ui/lab/SpeedDial'\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { makeStyles } from '@material-ui/core/styles'\nimport EventAvailable from '@material-ui/icons/EventAvailableOutlined'\nimport {useHistory, withRouter} from 'react-router-dom'\n\n\nconst styles = makeStyles(theme => ({\n  speedDial: {\n    position: \"fixed\",\n    zIndex: 99,\n    bottom: theme.spacing(4),\n    right: theme.spacing(4)\n  }\n}))\n\nconst actions = [\n  {icon: <EventAvailable />, text: \"Add a round\", to: \"addRound\"}\n]\n\nfunction SpeedDial(props){\n  let [open, setOpen] = React.useState(false)\n  const classes = styles()\n  let history = useHistory()\n\n  function handleOpen(){\n    setOpen(true)\n  }\n\n  function handleClose() {\n    setOpen(false)\n  }\n\n  function itemClick(item) {\n    //console.log()\n    history.push(`${props.match.url}/${item.to}`)\n  }\n\n  return (<Fab \n    open={open}\n    className={classes.speedDial}\n    onClose={handleClose}\n    onOpen={handleOpen}\n    ariaLabel=\"Add mega event description\"\n    icon={<SpeedDialIcon />}\n    direction={\"up\"}\n  >\n    {\n      actions.map((item, index) => <SpeedDialAction icon={item.icon} tooltipTitle={item.text} key={index} onClick={() => itemClick(item)}/>)\n    }\n  </Fab>)\n}\n\nexport default withRouter(SpeedDial)","import React from 'react'\nimport {withRouter, useHistory} from 'react-router-dom'\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers';\nimport Button from 'Components/LoadingButton'\nimport * as yup from 'yup'\nimport { Box, Paper, TextField, IconButton } from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles'\nimport {DateTimePicker} from '@material-ui/pickers'\nimport MaterialTable from 'Components/MaterialTable'\nimport {toastInfo, toastSuccess} from 'Components/Toast'\nimport CommitRelay from 'Components/CommitRelay'\nimport graphql from 'babel-plugin-relay/macro'\nimport ArrowBack from '@material-ui/icons/ArrowBack'\n\nconst mutation = graphql`\n  mutation AddRoundMutation($data: MegladronGroupInput!){\n    createMegladronGroup(data: $data) {\n      _id\n      rounds {\n        title\n        startTime\n        endTime\n        totalMatches\n      }\n    }\n  }\n`\n\nconst styles = makeStyles(theme => ({\n  form: {\n    padding: theme.spacing(1),\n    '& > *': {\n      marginBottom: theme.spacing(1)\n    }\n  }\n}))\n\nconst schema = yup.object().shape({\n  title: yup.string().required().max(30),\n  matches: yup.number().integer().min(1)\n})\n\nfunction AddRound(props) {\n\n  let [date, setDate] = React.useState({start: Date.now(), end: Date.now()})\n  let [tableData, setTableData] = React.useState([])\n  let history = useHistory()\n  const {register, errors, handleSubmit} = useForm({\n    resolver: yupResolver(schema)\n  })\n\n  const classes = styles()\n  function submitForm(data) {\n    console.log(date, date.start <= date.end, date.start > date.end)\n    if(date.start >= date.end) {\n      return toastInfo(\"Start time and end time cannot be same\")\n    }\n    let toSend = {...data, totalMatches: +data.totalMatches, _id: props.match.params.id, endTime: date.end.toString(), startTime: date.start.toString(), custom: tableData.map(item => ({label: item.label, value: item.value}))}\n    console.log(toSend)\n    CommitRelay({data: toSend}, mutation, (response, error) => {\n      if(!error){\n        toastSuccess(\"Group addedd successflly\")\n        history.goBack()\n      }\n    })\n  }\n  return (\n    <Box p={1}>\n      <Paper component=\"form\" onSubmit={handleSubmit(submitForm)} className={classes.form}>\n        <IconButton onClick={() => history.goBack()}><ArrowBack /></IconButton> Go Back\n        <TextField inputRef={register} name=\"title\" label=\"Round title\" error={errors.title !== undefined} helperText={errors.title? errors.title.message: \"Could be something like prelims, Round 1\"} required fullWidth/>\n        <DateTimePicker onChange={start => setDate({...date, start: new Date(start).getTime()})} value={date.start} disablePast fullWidth label=\"Start date of round\" name=\"startTime\"/>\n        <DateTimePicker onChange={end => setDate({...date, end: new Date(end).getTime()})} value={date.end} disablePast fullWidth label=\"End date of round\" name=\"endTime\"/>\n        <TextField inputRef={register} name=\"totalMatches\" fullWidth label=\"Number of matches\" required error={errors.totalMatches !== undefined} helperText={errors.totalMatches?.message} />\n        <MaterialTable \n          title={\"Any round specific data\"} \n          tableData={tableData} \n          getTableData={data => setTableData(data)}\n          columns={[\n            {\n              title: \"Label\", field: \"label\"\n            },\n            {\n              title: \"Value\", field: \"value\"\n            }\n          ]}\n        />\n        <Button isLoading={false} type=\"submit\">Add Round</Button>\n      </Paper>\n    </Box>\n  )\n}\n\nexport default withRouter(AddRound)","import React from 'react'\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers';\nimport Button from 'Components/LoadingButton'\nimport * as yup from 'yup'\nimport {TextField} from '@material-ui/core'\nimport {DateTimePicker} from '@material-ui/pickers'\nimport {makeStyles} from '@material-ui/core/styles'\n\nconst styles = makeStyles(theme => ({\n  form: {\n    '& > *': {\n      marginBottom: theme.spacing(1)\n    }\n  }\n}))\n\nconst schema = yup.object().shape({\n  title: yup.string().required().max(30),\n  maxPlayers: yup.number().integer().required(),\n  maxGroups: yup.number().integer().required(),\n  entryFee: yup.number().integer().required(),\n  description: yup.string().required()\n})\n\nconst InputField = props => (\n  <TextField fullWidth error={props.errors[props.name] !== undefined} helperText={props.errors[props.name]?.message} {...props}/>\n)\n\nfunction TournamentBasic(props) {\n  const {register, errors, handleSubmit} = useForm({\n    resolver: yupResolver(schema)\n  })\n\n  const classes = styles()\n  let [time, setTime] = React.useState(Date.now() + ( 1000 * 60 * 60 * 24))\n\n  function submitForm(data) {\n    props.submitForm({...data, time})\n  }\n\n  return <form onSubmit={handleSubmit(submitForm)} className={classes.form}>\n    <InputField errors={errors} label={'Tournament title'} name=\"title\" fullWidth required inputRef={register} />\n    <DateTimePicker name=\"time\" onChange={t => setTime(t)} required value={time} label={\"Tournament time\"} fullWidth disablePast/>\n    <InputField inputRef={register} errors={errors} label={'Entry Fee'}  fullWidth name=\"entryFee\" type=\"number\" required/>\n    <InputField inputRef={register} errors={errors} type=\"number\" name=\"maxPlayers\" label={'Max Participants'} fullWidth type=\"number\" required/>\n    <InputField inputRef={register} errors={errors} name=\"image\" fullWidth label={\"Image URL\"} defaultValue={props.game.image}/>\n    <InputField inputRef={register} errors={errors} type=\"number\" name=\"maxGroups\" fullWidth label={\"Max groups that could be formed\"} helperText={\"If no grouping enter same number as max players\"} required/>\n    <InputField inputRef={register} errors={errors} label={'Tournament Description'} fullWidth multiline rows={5} name=\"description\" helperText={\"Add things like rules or anything specific\"} required/>    \n    <Button isLoading={false} type=\"submit\">Create Tournament</Button>\n  </form>\n}\n\nexport default TournamentBasic","import React from 'react'\nimport FormBuilder from 'Layout/FormBuilder'\nimport {Typography, TextField, Checkbox, Button} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { toastError } from 'Components/Toast'\n\nconst styles = makeStyles(theme => ({\n  container: {\n    padding: theme.spacing(1)\n  },\n  paper: {\n    padding: theme.spacing(1)\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\"\n  }\n}))\n\n\nfunction GameSpecific(props) {\n  const classes = styles()\n\n  if(props.game._id === undefined){\n    toastError(\"Set a game first\")\n    return (<div></div>)\n  }\n\n  function moveForward() {\n    let el = document.querySelector(\"#gameDetails\")\n    if(!el){\n      toastError(\"Root element not found. Unable to read details. Cannot proceed\")\n      return\n    }\n    let inputs = el.querySelectorAll(\"[name]\")\n    let data = []\n    //let formData = new FormData()\n    for(let i = 0; i < inputs.length; i++){\n      if(inputs[i].getAttribute(\"type\") === \"checkbox\") {\n        data.push({\n          label: inputs[i].getAttribute(\"name\"),\n          value: inputs[i].checked ? \"Yes\" : \"No\"\n        })\n      }else {\n        data.push({\n          label: inputs[i].getAttribute(\"name\"),\n          value: inputs[i].value \n        })\n      }\n      //formData.append(inputs[i].getAttribute(\"name\"), inputs[i].value)\n    }\n    //props.addGameSpecificData(data)\n\n    //metrics calculation\n    el = document.querySelector(\"#metrics\")\n    if(!el){\n      toastError(\"Metrics not found. Unable to read details. Cannot proceed\")\n      return\n    }\n    inputs = el.querySelectorAll(\"[name]\")\n    let metrics = []\n    for(let i = 0; i < inputs.length; i++){\n      let name = inputs[i].getAttribute(\"name\")\n      if(name.indexOf(\"dynamic\") !== -1){\n        continue\n      }\n      metrics.push({\n        label: name,\n        points: inputs[i].value === \"\" ? 0 : +inputs[i].value,\n        dynamic: el.querySelector(`[name=${name}_dynamic]`).checked === true ? 1 : 0\n      })\n    }\n    //props.setMetrics(metrics)\n    //console.log(metrics)\n    props.getData(metrics, data)\n    //props.handleNext()\n  }\n\n  return (\n    <div className={classes.container}>\n        <Typography>All the custom fields available for {props.game.title}</Typography>\n        <CustomFields {...props.game}/>\n      <div style={{padding: 8}}>\n        <Button\n          disabled\n          >\n          Back\n        </Button>\n        <Button variant=\"contained\" color=\"primary\" type={'submit'} onClick={moveForward}>\n          next\n        </Button>\n      </div>\n    </div>\n  )\n}\n\nlet Row = props => <div className={props.classes.row}>\n  <span style={{flex: 1}}> <TextField name={props.name} defaultValue={0} type=\"number\" label={props.label} fullWidth helperText={props.helperText}/></span>\n  <span><Checkbox name={props.name+\"_dynamic\"}/>Dynamic</span>\n</div>\n\nfunction getValue(name, data) {\n  for(let i=0; i< data.length; i++){\n    if(data[i].label === name){\n      return data[i].value\n    }\n  }\n}\n\nfunction CustomFields(props){\n  const classes = styles()\n  //console.log(props)\n  let customFields = props.customFields.map(item => (\n    {\n      ...item, \n      name: item.label, \n      defaultValue: getValue(item.label, props.customFields)\n    }))\n  let metrics = props.metrics.map(item => ({\n    label: item,\n    name: item,\n    type: \"number\",\n  }))\n  //console.log(customFields)\n  return (\n    <div>\n      <FormBuilder fields={customFields} id={\"gameDetails\"}/>\n      <Typography variant=\"h5\" color=\"textSecondary\">How players will be scored</Typography>\n      <div id=\"metrics\">\n      {metrics.map(item => <Row {...item} key={item.name} classes={classes}/>)}\n      <Typography color=\"textSecondary\" variant=\"body2\">\n      Enable dynamic calculation to distribute points in group exponentialy. Like a player with higher position will earn higher points compared to lower ones.\n      </Typography>\n      </div>\n    </div>\n  )\n}\n\nexport default GameSpecific","import React from 'react'\nimport MateriaTable from 'Components/MaterialTable'\nimport { Box, Button } from '@material-ui/core'\n\nfunction Prizes(props) {\n\n  let [tableData, setTableData] = React.useState([])\n\n  function getTableData(data){\n    setTableData(data)\n  }\n\n  function moveForward() {\n    props.getTableData(tableData.map(item => ({position: item.position, prize: +item.prize})))\n  }\n\n  return (\n    <>\n      <MateriaTable columns={[\n        {title: \"Position\", field: \"position\"},\n        {title: \"Prize\", field: \"prize\", type:\"currency\"}\n      ]} title={\"Prizes or points awarded\"} tableData={tableData} getTableData={getTableData} />\n      <Box p={1}>\n        <Button\n          onClick={props.handleBack}\n          >\n          Back\n        </Button>\n        <Button variant=\"contained\" color=\"primary\" type={'submit'} onClick={moveForward}>\n          next\n        </Button>\n      </Box>\n    </>\n  )\n}\n\nexport default Prizes","import React from 'react'\nimport Close from '@material-ui/icons/CloseRounded'\nimport { IconButton, Divider } from '@material-ui/core'\nimport { useHistory } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport TournamentBasic from './TournamentBasic'\nimport GameSpecific from './GameSpecific';\nimport Prizes from './Prizes'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  backButton: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nfunction getSteps() {\n  return ['Game Details', 'Prizes', 'Tournament details'];\n}\n\n\nfunction AddTournament(props) {\n\n  const history = useHistory()\n\n  return <div>\n    <Divider />\n    <p> <IconButton onClick={() => history.goBack()}><Close /></IconButton> Add Tournament </p>\n    <HorizontalLabelPositionBelowStepper game={props.game}/>\n  </div>\n}\n\nfunction HorizontalLabelPositionBelowStepper(props) {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [formData, setFormData] = React.useState({})\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  function getData(metrics, customFields) {\n    setFormData({...formData, metrics, customFields})\n    handleNext()\n  }\n\n  function getTableData(data) {\n    console.log(data)\n    setFormData({...formData, prizes: data})\n    handleNext()\n  }\n\n  function submitForm(data) {\n    console.log(data, formData)\n  }\n\n  function getStepContent(stepIndex) {\n    switch (stepIndex) {\n      case 0:\n        return <GameSpecific game={props.game} getData={getData}/>;\n      case 1:\n        return <Prizes getTableData={getTableData} handleBack={handleBack}/>;\n      case 2:\n        return <TournamentBasic game={props.game} handleBack={handleBack} submitForm={submitForm}/>;\n      default:\n        return 'Unknown stepIndex';\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep} alternativeLabel>\n        {steps.map((label) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      {getStepContent(activeStep)}\n    </div>\n  );\n}\n\n\nexport default AddTournament;","import React from 'react'\nimport {withRouter, Route, useHistory} from 'react-router-dom'\nimport { Paper } from '@material-ui/core'\nimport Fab from 'Components/Fab'\nimport {makeStyles} from '@material-ui/core/styles'\nimport AddTournament from './AddTournament/AddTournament'\nimport {createFragmentContainer} from 'react-relay'\nimport graphql from 'babel-plugin-relay/macro'\n\nconst styles = makeStyles(theme => ({\n  paper: {\n    marginBottom: theme.spacing(1),\n    position: \"relative\",\n    padding: theme.spacing(1)\n  },\n  title: {\n    textTransform: \"uppercase\",\n    fontSize: 24,\n    display: \"inline-block\",\n    marginBottom: theme.spacing(1)\n  }\n}))\n\nfunction TournamentsInRounds(props){\n  const classes = styles()\n  const history = useHistory()\n  return (\n    <Paper className={classes.paper}>\n      <span className={classes.title}>{props.round.primaryText}</span> <br />\n      {props.round.secondaryText} <br />\n      Total of {props.round.totalMatches} tournaments will be generated\n      <Route path={'/mega/view/:id/addTournament'} component={() => <AddTournament game={props.game}/>}/>\n      <Fab position=\"absolute\" title=\"Add tournament\" onClick={() => history.push(props.match.url+\"/addTournament\")}/>\n    </Paper>\n  )\n}\n\nexport default createFragmentContainer(withRouter(TournamentsInRounds), \n  {\n    game: graphql`\n      fragment TournamentsInRound_game on Game {\n        _id\n        customFields {\n          label\n          type\n          options\n        }\n        metrics\n      }\n    `\n  }\n);","import React from 'react'\nimport {createFragmentContainer} from 'react-relay'\nimport graphql from 'babel-plugin-relay/macro'\nimport CustomList from 'Components/CustomList'\nimport makeDate from 'Utils/MakeDate'\nimport { IconButton } from '@material-ui/core'\nimport Delete from '@material-ui/icons/Delete'\nimport { toastInfo } from 'Components/Toast'\nimport {Route} from 'react-router-dom'\nimport TournamentsInRound from './TournamentsInRound'\n\nfunction makeData(data, deleteClick) {\n  if(data === undefined || data === null) {\n    return []\n  }\n  //console.log(data)\n  return data.map((item, index) => ({\n    id: index,\n    primaryText: \"title\",\n    secondaryText: ` Start from ${makeDate(item.startTime)} to ${makeDate(item.endTime)} and will have ${item.totalMatches} tournaments`,\n    secondaryIcon: <IconButton onClick={() => deleteClick(item.title)}><Delete /></IconButton>,\n    ...item\n  }))\n}\n\nfunction RoundsOverview(props){\n  \n  let [selected, setSelected] = React.useState({})\n  function deleteClick(title) {\n    toastInfo(\"It's still in implementation phase\")\n  }\n\n  function itemClick(item) {\n    setSelected(item)\n  }\n\n  let items = makeData(props.rounds.rounds, deleteClick)\n\n  return <div>\n    {selected.id !== undefined ?  <TournamentsInRound round={selected} game={props.game}/> : null}\n    <CustomList items={items} divider heading=\"Total Rounds\" button itemClick={itemClick}/>\n  </div>\n}\n\nexport default createFragmentContainer(RoundsOverview, {\n  rounds: graphql`\n    fragment RoundsOverview_rounds on Megladron {\n      rounds {\n        _id\n        title\n        startTime\n        endTime\n        totalMatches\n      }\n    }\n  `\n\n})","import React from 'react'\nimport QueryRenderer from 'Components/QueryRenderer'\nimport graphql from 'babel-plugin-relay/macro'\nimport Grid from '@material-ui/core/Grid'\nimport {Route, withRouter} from 'react-router-dom'\nimport BasicDetails from './BasicDetails'\nimport {makeStyles} from '@material-ui/core/styles'\nimport SpeedDial from './SpeedDial'\nimport AddRound from './Rounds/AddRound'\nimport RoundsOverview from './Rounds/RoundsOverview'\nimport TournamentsInRounds from './Rounds/TournamentsInRound'\nimport Error from 'Components/Error'\n\nconst styles = makeStyles(theme => ({\n  container: {\n    margin: 0,\n    width: \"100%\"\n  }\n}))\n\nconst query = graphql`\n  query UpdateMegaQuery($id: ID!) {\n    megladron(filter: {_id: $id}) {\n      docs {\n        ...BasicDetails_megladron\n        ...RoundsOverview_rounds\n        game {\n          ...TournamentsInRound_game\n        }\n        createdBy {\n          username\n        }\n      }\n    }\n  }\n`\n\nfunction UpdateMega(props) {\n  console.log(props)\n  return (\n    <QueryRenderer query={query} variables={{id: props.match.params.id}} component={data => <UpdateMegaComponent {...data} />}/>\n  )\n}\n\nfunction UpdateMegaComponent(props) {\n  //because id based search so only one document would be returned\n  const classes = styles()\n  let megladron = null\n  try {\n    megladron = props.megladron.docs[0]\n  }catch(err) {\n    return <Error />\n  }\n  //console.log(megladron)\n  if(!megladron) {\n    return <Error />\n  }\n  return (\n    <Grid container spacing={1} className={classes.container}>\n      <Grid item xs={12} sm={4}>\n        <BasicDetails megladron={megladron}/>\n      </Grid>\n      <Grid item xs={12} sm={8}>\n        <Route path={'/mega/view/:id/addRound'} component={AddRound}/>\n        <RoundsOverview rounds={megladron} game={megladron.game}/>\n      </Grid>\n      <SpeedDial />\n    </Grid>\n  )\n}\n\nexport default withRouter(UpdateMega)","import React from 'react'\nimport MegaBasicDetails from './MegaBasicDetails'\nimport ViewMegladron from './ViewMegladron'\nimport {Switch, Route} from 'react-router-dom'\nimport UpdateMega from './UpdateMega/UpdateMega'\n\nfunction Mega(props) {\n  return (\n    <Switch>\n      <Route path={'/mega/view/:id'} component={UpdateMega} />\n      <Route path={'/mega/add'} component={MegaBasicDetails}/>\n      <Route path={'/mega'} component={ViewMegladron} />\n    </Switch>\n  )\n}\n\nexport default Mega;","// This is used to determine if a user is authenticated and\n// if they are allowed to visit the page they navigated to.\n\n// If they are: they proceed to the page\n// If not: they are redirected to the login page.\nimport React from 'react'\nimport AuthService from 'Store/actions/AuthService'\nimport { Redirect, Route } from 'react-router-dom'\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n\n  // Add your own authentication on the below line.\n  const isLoggedIn = AuthService.isUserLoggedIn()\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        isLoggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={{ pathname: process.env.REACT_APP_BASE_URL+'/account/auth/login', state: { from: props.location } }} />\n        )\n      }\n    />\n  )\n}\n\nexport default PrivateRoute","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport Account from './Account'\nimport TournamentRoutes from './Tournament'\nimport Games from './Games'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Home from './Home'\nimport Wallet from './Home/Wallet/DetailedReport'\nimport Drawer from './Drawer'\nimport Notification from './Notifications/Holder'\nimport Mega from './Mega'\nimport ProtectedRoute from 'Components/ProtectedRoute'\n\nconst styles = makeStyles(theme => ({\n  toolbar: theme.mixins.toolbar,\n  container: {\n    width: '100%'\n  },\n  content: {\n    height: `calc(100vh - ${theme.mixins.toolbar.height}px)`,\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      paddingLeft: 240,\n    },\n  }\n}))\n\nfunction Layout(){\n  const classes = styles()\n  return(\n    <div>\n      <Drawer />\n      <div className={classes.toolbar} />\n      <div className={classes.content}>\n        <Switch>\n          <Route path={'/account'} component={Account} />\n          <ProtectedRoute path={'/tournaments'} component={TournamentRoutes} />\n          <ProtectedRoute path={'/games'} component={Games}/>\n          <ProtectedRoute path={'/wallet/:id'} component={Wallet} />\n          <ProtectedRoute path={'/notification'} component={Notification} />\n          <ProtectedRoute path={'/mega'} component={Mega} />\n          <ProtectedRoute path={'/'} component={Home} />\n        </Switch>\n      </div>\n    </div>\n  )\n}\n\nexport default Layout","import React from 'react'\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n//import { makeStyles } from '@material-ui/core/styles';\nimport {connect} from 'react-redux'\nimport {closeSnackbar} from 'Store/actions/snackbar'\n//import Slide from '@material-ui/core/Slide'\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     width: '100%',\n//   },\n// }));\n\nfunction CustomizedSnackbars(props) {\n  //const classes = useStyles();\n\n  const handleClick = (event, reason, id) => {\n    if(reason === \"clickaway\"){\n      return\n    }\n    closeSnackbar(id)\n    //setOpen(true);\n  };\n  //console.log(props.snackbar)\n\n  return (\n    <div>\n      {\n        props.snackbar.data.map((item, index) => <Snackbar open={true} onClose={handleClick} anchorOrigin={{vertical: \"top\", horizontal: \"right\"}} key={item.id} style={{marginTop: (64 * index) + \"px\"}}>\n        <Alert severity={item.type} onClose={(event, reason) => handleClick(event, reason, item.id)}>\n          {item.message}\n        </Alert>\n      </Snackbar>)\n      }\n      \n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  snackbar: state.Snackbar\n})\n\nexport default connect(mapStateToProps)(CustomizedSnackbars)","import React from 'react'\nimport { CssBaseline } from '@material-ui/core'\nimport Layout from './Layout'\nimport { BrowserRouter } from 'react-router-dom'\nimport {Provider} from 'react-redux'\nimport Store from './Store'\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport Snackbar from 'Components/Snackbar'\n\n\nfunction App(){\n  return (\n    <Provider store={Store}>\n    <BrowserRouter>\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <CssBaseline />\n      <Layout />\n      <Snackbar />\n    </MuiPickersUtilsProvider>\n    </BrowserRouter>\n    </Provider>\n  )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}